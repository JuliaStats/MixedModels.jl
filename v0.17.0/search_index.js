var documenterSearchIndex = {"docs": [

{
    "location": "index.html#",
    "page": "MixedModels.jl Documentation",
    "title": "MixedModels.jl Documentation",
    "category": "page",
    "text": ""
},

{
    "location": "index.html#MixedModels.jl-Documentation-1",
    "page": "MixedModels.jl Documentation",
    "title": "MixedModels.jl Documentation",
    "category": "section",
    "text": "CurrentModule = MixedModelsMixedModels.jl is a Julia package providing capabilities for fitting and examining linear and generalized linear mixed-effect models. It is similar in scope to the lme4 package for R.Pages = [\n        \"index.md\",\n        \"constructors.md\",\n        \"optimization.md\",\n        \"bootstrap.md\",\n        \"SimpleLMM.md\",\n        \"MultipleTerms.md\",\n        \"SingularCovariance.md\",\n        \"SubjectItem.md\"]\nDepth = 2"
},

{
    "location": "constructors.html#",
    "page": "Model constructors",
    "title": "Model constructors",
    "category": "page",
    "text": ""
},

{
    "location": "constructors.html#MixedModels.LinearMixedModel",
    "page": "Model constructors",
    "title": "MixedModels.LinearMixedModel",
    "category": "type",
    "text": "LinearMixedModel\n\nLinear mixed-effects model representation\n\nMembers\n\nformula: the formula for the model\ntrms: a Vector{AbstractTerm} representing the model.  The last element is the response.\nsqrtwts: vector of square roots of the case weights.  Can be empty.\nA: an nt × nt symmetric BlockMatrix of matrices representing hcat(Z,X,y)\'hcat(Z,X,y)\nL: a nt × nt BlockMatrix - the lower Cholesky factor of Λ\'AΛ+I\noptsum: an OptSummary object\n\n\n\n"
},

{
    "location": "constructors.html#Model-constructors-1",
    "page": "Model constructors",
    "title": "Model constructors",
    "category": "section",
    "text": "The LinearMixedModel type represents a linear mixed-effects model. Typically it is constructed from a Formula and an appropriate data type, usually a DataFrame.LinearMixedModel"
},

{
    "location": "constructors.html#Examples-of-linear-mixed-effects-model-fits-1",
    "page": "Model constructors",
    "title": "Examples of linear mixed-effects model fits",
    "category": "section",
    "text": "For illustration, several data sets from the lme4 package for R are made available in .rda format in this package. These include the Dyestuff and Dyestuff2 data sets.julia> using DataFrames, RData, MixedModels, StatsBase\n\njulia> const dat = convert(Dict{Symbol,DataFrame},\n    load(Pkg.dir(\"MixedModels\", \"test\", \"dat.rda\")));\n\njulia> describe(dat[:Dyestuff])\nG\nSummary Stats:\nLength:         30\nType:           CategoricalArrays.CategoricalString{UInt8}\nNumber Unique:  6\n\nY\nSummary Stats:\nMean:           1527.500000\nMinimum:        1440.000000\n1st Quartile:   1468.750000\nMedian:         1530.000000\n3rd Quartile:   1575.000000\nMaximum:        1635.000000\nLength:         30\nType:           Float64\n\nThe columns in these data sets have been renamed for convenience. The response is always named Y. Potential grouping factors for random-effects terms are named G, H, etc. Numeric covariates are named starting with U. Categorical covariates not suitable as grouping factors are named starting with A."
},

{
    "location": "constructors.html#Models-with-simple,-scalar-random-effects-1",
    "page": "Model constructors",
    "title": "Models with simple, scalar random effects",
    "category": "section",
    "text": "The formula language in Julia is similar to that in R except that the formula must be enclosed in a call to the @formula macro. A basic model with simple, scalar random effects for the levels of G (the batch of an intermediate product, in this case) is declared and fit asjulia> fm1 = fit(LinearMixedModel, @formula(Y ~ 1 + (1|G)), dat[:Dyestuff])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G)\n   logLik   -2 logLik     AIC        BIC    \n -163.66353  327.32706  333.32706  337.53065\n\nVariance components:\n              Column    Variance  Std.Dev. \n G        (Intercept)  1388.3332 37.260344\n Residual              2451.2500 49.510100\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)    1527.5   17.6946  86.326  <1e-99\n\n(If you are new to Julia you may find that this first fit takes an unexpectedly long time, due to Just-In-Time (JIT) compilation of the code. The second and subsequent calls to such functions are much faster.)julia> @time fit(LinearMixedModel, @formula(Y ~ 1 + (1|G)), dat[:Dyestuff2])\n  0.000789 seconds (1.34 k allocations: 71.859 KiB)\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G)\n   logLik   -2 logLik     AIC        BIC    \n -81.436518 162.873037 168.873037 173.076629\n\nVariance components:\n              Column    Variance  Std.Dev. \n G        (Intercept)   0.000000 0.0000000\n Residual              13.346099 3.6532314\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)    5.6656  0.666986 8.49433  <1e-16\n\n"
},

{
    "location": "constructors.html#Simple,-scalar-random-effects-1",
    "page": "Model constructors",
    "title": "Simple, scalar random effects",
    "category": "section",
    "text": "A simple, scalar random effects term in a mixed-effects model formula is of the form (1|G). All random effects terms end with |G where G is the grouping factor for the random effect. The name or, more generally, the expression G should evaluate to a categorical array that has a distinct set of levels. The random effects are associated with the levels of the grouping factor.A scalar random effect is, as the name implies, one scalar value for each level of the grouping factor. A simple, scalar random effects term is of the form, (1|G). It corresponds to a shift in the intercept for each level of the grouping factor."
},

{
    "location": "constructors.html#Models-with-vector-valued-random-effects-1",
    "page": "Model constructors",
    "title": "Models with vector-valued random effects",
    "category": "section",
    "text": "The sleepstudy data are observations of reaction time, Y, on several subjects, G, after 0 to 9 days of sleep deprivation, U. A model with random intercepts and random slopes for each subject, allowing for within-subject correlation of the slope and intercept, is fit asjulia> fm2 = fit(LinearMixedModel, @formula(Y ~ 1 + U + (1+U|G)), dat[:sleepstudy])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + U + ((1 + U) | G)\n   logLik   -2 logLik     AIC        BIC    \n -875.96967 1751.93934 1763.93934 1783.09709\n\nVariance components:\n              Column    Variance  Std.Dev.   Corr.\n G        (Intercept)  565.51067 23.780468\n          U             32.68212  5.716828  0.08\n Residual              654.94145 25.591824\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   251.405   6.63226 37.9064  <1e-99\nU             10.4673   1.50224 6.96781  <1e-11\n\nA model with uncorrelated random effects for the intercept and slope by subject is fit asjulia> fm3 = fit(LinearMixedModel, @formula(Y ~ 1 + U + (1|G) + (0+U|G)), dat[:sleepstudy])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + U + (1 | G) + ((0 + U) | G)\n   logLik   -2 logLik     AIC        BIC    \n -876.00163 1752.00326 1762.00326 1777.96804\n\nVariance components:\n              Column    Variance  Std.Dev.   Corr.\n G        (Intercept)  584.258973 24.17145\n          U             33.632805  5.79938  0.00\n Residual              653.115782 25.55613\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   251.405   6.70771   37.48  <1e-99\nU             10.4673   1.51931 6.88951  <1e-11\n\nAlthough technically there are two random-effects terms in the formula for fm3 both have the same grouping factor and, internally, are amalgamated into a single vector-valued term."
},

{
    "location": "constructors.html#Models-with-multiple,-scalar-random-effects-terms-1",
    "page": "Model constructors",
    "title": "Models with multiple, scalar random-effects terms",
    "category": "section",
    "text": "A model for the Penicillin data incorporates random effects for the plate, G, and for the sample, H. As every sample is used on every plate these two factors are crossed.julia> fm4 = fit(LinearMixedModel, @formula(Y ~ 1 + (1|G) + (1|H)), dat[:Penicillin])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G) + (1 | H)\n   logLik   -2 logLik     AIC        BIC    \n -166.09417  332.18835  340.18835  352.06760\n\nVariance components:\n              Column    Variance  Std.Dev. \n G        (Intercept)  0.7149795 0.8455646\n H        (Intercept)  3.1351924 1.7706474\n Residual              0.3024264 0.5499331\n Number of obs: 144; levels of grouping factors: 24, 6\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   22.9722  0.744596 30.8519  <1e-99\n\nIn contrast the sample, G, grouping factor is nested within the batch, H, grouping factor in the Pastes data. That is, each level of G occurs in conjunction with only one level of H.julia> fm5 = fit(LinearMixedModel, @formula(Y ~ 1 + (1|G) + (1|H)), dat[:Pastes])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G) + (1 | H)\n   logLik   -2 logLik     AIC        BIC    \n -123.99723  247.99447  255.99447  264.37184\n\nVariance components:\n              Column    Variance  Std.Dev.  \n G        (Intercept)  8.4336167 2.90406898\n H        (Intercept)  1.1991793 1.09507045\n Residual              0.6780021 0.82340884\n Number of obs: 60; levels of grouping factors: 30, 10\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   60.0533  0.642136 93.5212  <1e-99\n\nIn observational studies it is common to encounter partially crossed grouping factors. For example, the InstEval data are course evaluations by students, G, of instructors, H. Additional covariates include the academic department, I, in which the course was given and A, whether or not it was a service course.julia> fm6 = fit(LinearMixedModel, @formula(Y ~ 1 + A * I + (1|G) + (1|H)), dat[:InstEval])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + A * I + (1 | G) + (1 | H)\n     logLik        -2 logLik          AIC             BIC       \n -1.18792777×10⁵  2.37585553×10⁵  2.37647553×10⁵  2.37932876×10⁵\n\nVariance components:\n              Column    Variance   Std.Dev.  \n G        (Intercept)  0.10541790 0.32468122\n H        (Intercept)  0.25841635 0.50834669\n Residual              1.38472780 1.17674458\n Number of obs: 73421; levels of grouping factors: 2972, 1128\n\n  Fixed-effects parameters:\n                Estimate Std.Error   z value P(>|z|)\n(Intercept)      3.22961  0.064053   50.4209  <1e-99\nA: 1            0.252025 0.0686507   3.67112  0.0002\nI: 5            0.129536  0.101294   1.27882  0.2010\nI: 10          -0.176751 0.0881352  -2.00545  0.0449\nI: 12          0.0517102 0.0817523  0.632523  0.5270\nI: 6           0.0347319  0.085621  0.405647  0.6850\nI: 7             0.14594 0.0997984   1.46235  0.1436\nI: 4            0.151689 0.0816897   1.85689  0.0633\nI: 8            0.104206  0.118751  0.877517  0.3802\nI: 9           0.0440401 0.0962985   0.45733  0.6474\nI: 14          0.0517546 0.0986029  0.524879  0.5997\nI: 1           0.0466719  0.101942  0.457828  0.6471\nI: 3           0.0563461 0.0977925   0.57618  0.5645\nI: 11          0.0596536  0.100233  0.595151  0.5517\nI: 2          0.00556285  0.110867 0.0501761  0.9600\nA: 1 & I: 5    -0.180757  0.123179  -1.46744  0.1423\nA: 1 & I: 10   0.0186492  0.110017  0.169512  0.8654\nA: 1 & I: 12   -0.282269 0.0792937   -3.5598  0.0004\nA: 1 & I: 6    -0.494464 0.0790278  -6.25684   <1e-9\nA: 1 & I: 7    -0.392054  0.110313  -3.55403  0.0004\nA: 1 & I: 4    -0.278547 0.0823727  -3.38154  0.0007\nA: 1 & I: 8    -0.189526  0.111449  -1.70056  0.0890\nA: 1 & I: 9    -0.499868 0.0885423  -5.64553   <1e-7\nA: 1 & I: 14   -0.497162 0.0917162  -5.42065   <1e-7\nA: 1 & I: 1     -0.24042 0.0982071   -2.4481  0.0144\nA: 1 & I: 3    -0.223013 0.0890548  -2.50422  0.0123\nA: 1 & I: 11   -0.516997 0.0809077  -6.38997   <1e-9\nA: 1 & I: 2    -0.384773  0.091843  -4.18946   <1e-4\n\n"
},

{
    "location": "constructors.html#MixedModels.GeneralizedLinearMixedModel",
    "page": "Model constructors",
    "title": "MixedModels.GeneralizedLinearMixedModel",
    "category": "type",
    "text": "GeneralizedLinearMixedModel\n\nGeneralized linear mixed-effects model representation\n\nMembers\n\nLMM: a LinearMixedModel - the local approximation to the GLMM.\nβ: the fixed-effects vector\nβ₀: similar to β. Used in the PIRLS algorithm if step-halving is needed.\nθ: covariance parameter vector\nb: similar to u, equivalent to broadcast!(*, b, LMM.Λ, u)\nu: a vector of matrices of random effects\nu₀: similar to u.  Used in the PIRLS algorithm if step-halving is needed.\nresp: a GlmResp object\nη: the linear predictor\nwt: vector of prior case weights, a value of T[] indicates equal weights.\n\n\n\n"
},

{
    "location": "constructors.html#Fitting-generalized-linear-mixed-models-1",
    "page": "Model constructors",
    "title": "Fitting generalized linear mixed models",
    "category": "section",
    "text": "To create a GLMM representationGeneralizedLinearMixedModelthe distribution family for the response, and possibly the link function, must be specified.julia> gm1 = fit(GeneralizedLinearMixedModel, @formula(r2 ~ 1 + a + g + b + s + m + (1|id) + (1|item)),\n    dat[:VerbAgg], Bernoulli())\nGeneralized Linear Mixed Model fit by minimizing the Laplace approximation to the deviance\n  Formula: r2 ~ 1 + a + g + b + s + m + (1 | id) + (1 | item)\n  Distribution: Distributions.Bernoulli{Float64}\n  Link: GLM.LogitLink()\n\n  Deviance (Laplace approximation): 8135.8329\n\nVariance components:\n          Column     Variance   Std.Dev.  \n id   (Intercept)  1.793432300 1.33919091\n item (Intercept)  0.117130236 0.34224295\n\n Number of obs: 7584; levels of grouping factors: 316, 24\n\nFixed-effects parameters:\n              Estimate Std.Error  z value P(>|z|)\n(Intercept)   0.552284  0.385354  1.43318  0.1518\na            0.0574478 0.0167526  3.42919  0.0006\ng: M          0.320861  0.191204   1.6781  0.0933\nb: scold      -1.05954  0.184146 -5.75381   <1e-8\nb: shout      -2.10341  0.186504 -11.2781  <1e-28\ns: self       -1.05388  0.151184 -6.97085  <1e-11\nm: do        -0.706925  0.150997 -4.68173   <1e-5\n\nThe canonical link, which is GLM.LogitLink for the Bernoulli distribution, is used if no explicit link is specified.Note that, in keeping with convention in the GLM package, the distribution family for a binary (i.e. 0/1) response is the Bernoulli distribution. The Binomial distribution is only used when the response is the fraction of trials returning a positive, in which case the number of trials must be specified as the case weights."
},

{
    "location": "constructors.html#Extractor-functions-1",
    "page": "Model constructors",
    "title": "Extractor functions",
    "category": "section",
    "text": "LinearMixedModel and GeneralizedLinearMixedModel are subtypes of StatsBase.RegressionModel which, in turn, is a subtype of StatsBase.StatisticalModel. Many of the generic extractors defined in the StatsBase package have methods for these models."
},

{
    "location": "constructors.html#StatsBase.loglikelihood-Tuple{StatsBase.StatisticalModel}",
    "page": "Model constructors",
    "title": "StatsBase.loglikelihood",
    "category": "method",
    "text": "loglikelihood(obj::StatisticalModel)\n\nReturn the log-likelihood of the model.\n\n\n\n"
},

{
    "location": "constructors.html#StatsBase.aic",
    "page": "Model constructors",
    "title": "StatsBase.aic",
    "category": "function",
    "text": "aic(obj::StatisticalModel)\n\nAkaike\'s Information Criterion, defined as -2 log L + 2k, with L the likelihood of the model, and k its number of consumed degrees of freedom (as returned by dof).\n\n\n\n"
},

{
    "location": "constructors.html#StatsBase.bic",
    "page": "Model constructors",
    "title": "StatsBase.bic",
    "category": "function",
    "text": "bic(obj::StatisticalModel)\n\nBayesian Information Criterion, defined as -2 log L + k log n, with L the likelihood of the model,  k its number of consumed degrees of freedom (as returned by dof), and n the number of observations (as returned by nobs).\n\n\n\n"
},

{
    "location": "constructors.html#StatsBase.dof-Tuple{StatsBase.StatisticalModel}",
    "page": "Model constructors",
    "title": "StatsBase.dof",
    "category": "method",
    "text": "dof(obj::StatisticalModel)\n\nReturn the number of degrees of freedom consumed in the model, including when applicable the intercept and the distribution\'s dispersion parameter.\n\n\n\n"
},

{
    "location": "constructors.html#StatsBase.nobs-Tuple{StatsBase.StatisticalModel}",
    "page": "Model constructors",
    "title": "StatsBase.nobs",
    "category": "method",
    "text": "nobs(obj::StatisticalModel)\n\nReturn the number of independent observations on which the model was fitted. Be careful when using this information, as the definition of an independent observation may vary depending on the model, on the format used to pass the data, on the sampling plan (if specified), etc.\n\n\n\n"
},

{
    "location": "constructors.html#StatsBase.deviance-Tuple{StatsBase.StatisticalModel}",
    "page": "Model constructors",
    "title": "StatsBase.deviance",
    "category": "method",
    "text": "deviance(obj::StatisticalModel)\n\nReturn the deviance of the model relative to a reference, which is usually when applicable the saturated model. It is equal, up to a constant, to -2 log L, with L the likelihood of the model.\n\n\n\n"
},

{
    "location": "constructors.html#MixedModels.objective",
    "page": "Model constructors",
    "title": "MixedModels.objective",
    "category": "function",
    "text": "objective(m::LinearMixedModel)\n\nReturn negative twice the log-likelihood of model m\n\n\n\n"
},

{
    "location": "constructors.html#MixedModels.LaplaceDeviance",
    "page": "Model constructors",
    "title": "MixedModels.LaplaceDeviance",
    "category": "function",
    "text": "LaplaceDeviance(m::GeneralizedLinearMixedModel{T})::T where T\n\nReturn the Laplace approximation to the deviance of m.\n\nIf the distribution D does not have a scale parameter the Laplace approximation is defined as the squared length of the conditional modes, u, plus the determinant of Λ\'Z\'WZΛ + I, plus the sum of the squared deviance residuals.\n\n\n\n"
},

{
    "location": "constructors.html#Model-fit-statistics-1",
    "page": "Model constructors",
    "title": "Model-fit statistics",
    "category": "section",
    "text": "The statistics describing the quality of the model fit includeloglikelihood(::StatisticalModel)\naic\nbic\ndof(::StatisticalModel)\nnobs(::StatisticalModel)julia> loglikelihood(fm1)\n-163.6635299405682\n\njulia> aic(fm1)\n333.3270598811364\n\njulia> bic(fm1)\n337.5306520261229\n\njulia> dof(fm1)   # 1 fixed effect, 2 variances\n3\n\njulia> nobs(fm1)  # 30 observations\n30\n\njulia> loglikelihood(gm1)\n-4067.9164365980514\nIn general the deviance of a statistical model fit is negative twice the log-likelihood adjusting for the saturated model.deviance(::StatisticalModel)Because it is not clear what the saturated model corresponding to a particular LinearMixedModel should be, negative twice the log-likelihood is called the objective.objectiveThis value is also accessible as the deviance but the user should bear in mind that this doesn\'t have all the properties of a deviance which is corrected for the saturated model. For example, it is not necessarily non-negative.julia> objective(fm1)\n327.3270598811364\n\njulia> deviance(fm1)\n327.3270598811364\nThe value optimized when fitting a GeneralizedLinearMixedModel is the Laplace approximation to the deviance.LaplaceDeviancejulia> LaplaceDeviance(gm1)\n8135.83287319609\n"
},

{
    "location": "constructors.html#StatsBase.coef",
    "page": "Model constructors",
    "title": "StatsBase.coef",
    "category": "function",
    "text": "coef(obj::StatisticalModel)\n\nReturn the coefficients of the model.\n\n\n\n"
},

{
    "location": "constructors.html#MixedModels.fixef",
    "page": "Model constructors",
    "title": "MixedModels.fixef",
    "category": "function",
    "text": "fixef(m::MixedModel, permuted=true)\n\nReturn the fixed-effects parameter vector estimate of m.\n\nIf permuted is true the vector elements are permuted according to m.trms[end - 1].piv and truncated to the rank of that term.\n\n\n\n"
},

{
    "location": "constructors.html#StatsBase.vcov",
    "page": "Model constructors",
    "title": "StatsBase.vcov",
    "category": "function",
    "text": "vcov(obj::StatisticalModel)\n\nReturn the variance-covariance matrix for the coefficients of the model.\n\n\n\n"
},

{
    "location": "constructors.html#StatsBase.stderr",
    "page": "Model constructors",
    "title": "StatsBase.stderr",
    "category": "function",
    "text": "stderr(obj::StatisticalModel)\n\nReturn the standard errors for the coefficients of the model.\n\n\n\n"
},

{
    "location": "constructors.html#StatsBase.coeftable",
    "page": "Model constructors",
    "title": "StatsBase.coeftable",
    "category": "function",
    "text": "coeftable(obj::StatisticalModel)\n\nReturn a table of class CoefTable with coefficients and related statistics.\n\n\n\n"
},

{
    "location": "constructors.html#Fixed-effects-parameter-estimates-1",
    "page": "Model constructors",
    "title": "Fixed-effects parameter estimates",
    "category": "section",
    "text": "The coef and fixef extractors both return the maximum likelihood estimates of the fixed-effects coefficients.coef\nfixefjulia> show(coef(fm1))\n[1527.5]\njulia> show(fixef(fm1))\n[1527.5]\njulia> show(fixef(gm1))\n[0.0574478, -1.05388, -0.706925, -1.05954, 0.320861, -2.10341, 0.552284]The variance-covariance matrix of the fixed-effects coefficients is returned byvcovjulia> vcov(fm2)\n2×2 Array{Float64,2}:\n 43.9868   -1.37039\n -1.37039   2.25671\n\njulia> vcov(gm1)\n7×7 Array{Float64,2}:\n  0.148498    -0.00560449   -0.00977058   …  -0.0114534    -0.0114545  \n -0.00560449   0.000280648   7.19112e-5      -1.47965e-5   -1.02415e-5 \n -0.00977058   7.19112e-5    0.0365591       -8.04373e-5   -5.25873e-5 \n -0.0169685   -1.43715e-5   -9.25583e-5       0.000265763   0.000172081\n -0.0171409   -2.90566e-5   -0.000162386      0.000658871   0.000520472\n -0.0114534   -1.47965e-5   -8.04373e-5   …   0.0228565     0.000247746\n -0.0114545   -1.02415e-5   -5.25873e-5       0.000247746   0.0228     \nThe standard errors are the square roots of the diagonal elements of the estimated variance-covariance matrix of the fixed-effects coefficient estimators.stderrjulia> show(StatsBase.stderr(fm2))\n[6.63226, 1.50224]\njulia> show(StatsBase.stderr(gm1))\n[0.385354, 0.0167526, 0.191204, 0.184146, 0.186504, 0.151184, 0.150997]Finally, the coeftable generic produces a table of coefficient estimates, their standard errors, and their ratio. The p-values quoted here should be regarded as approximations.coeftablejulia> coeftable(fm2)\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   251.405   6.63226 37.9064  <1e-99\nU             10.4673   1.50224 6.96781  <1e-11\n\n"
},

{
    "location": "constructors.html#MixedModels.VarCorr",
    "page": "Model constructors",
    "title": "MixedModels.VarCorr",
    "category": "type",
    "text": "VarCorr\n\nAn encapsulation of information on the fitted random-effects variance-covariance matrices.\n\nMembers\n\nσ: a Vector{Vector{T}} of unscaled standard deviations\nρ: a Vector{Matrix{T}} of correlation matrices\nfnms: a Vector{Symbol} of grouping factor names\ncnms: a Vector{Vector{String}} of column names\ns: the estimate of σ, the standard deviation of the per-observation noise.  When there is no scaling factor this value is NaN\n\nThe main purpose of defining this type is to isolate the logic in the show method.\n\n\n\n"
},

{
    "location": "constructors.html#MixedModels.varest",
    "page": "Model constructors",
    "title": "MixedModels.varest",
    "category": "function",
    "text": "varest(m::LinearMixedModel)\n\nReturns the estimate of σ², the variance of the conditional distribution of Y given B.\n\n\n\n"
},

{
    "location": "constructors.html#MixedModels.sdest",
    "page": "Model constructors",
    "title": "MixedModels.sdest",
    "category": "function",
    "text": "sdest(m::LinearMixedModel)\n\nReturn the estimate of σ, the standard deviation of the per-observation noise.\n\n\n\n"
},

{
    "location": "constructors.html#Covariance-parameter-estimates-1",
    "page": "Model constructors",
    "title": "Covariance parameter estimates",
    "category": "section",
    "text": "The covariance parameters estimates, in the form shown in the model summary, are a VarCorr objectVarCorrjulia> VarCorr(fm2)\nVariance components:\n              Column    Variance  Std.Dev.   Corr.\n G        (Intercept)  565.51067 23.780468\n          U             32.68212  5.716828  0.08\n Residual              654.94145 25.591824\n\n\njulia> VarCorr(gm1)\nVariance components:\n          Column     Variance   Std.Dev.  \n id   (Intercept)  1.793432300 1.33919091\n item (Intercept)  0.117130236 0.34224295\n\nIndividual components are returned by other extractorsvarest\nsdestjulia> varest(fm2)\n654.941450830681\n\njulia> sdest(fm2)\n25.591823905901684\n"
},

{
    "location": "constructors.html#MixedModels.ranef",
    "page": "Model constructors",
    "title": "MixedModels.ranef",
    "category": "function",
    "text": "ranef(m::MixedModel; uscale=false, named=true)\n\nReturn, as a Vector{Vector{T}} (Vector{NamedVector{T}} if named=true) the conditional modes of the random effects in model m.\n\nIf uscale is true the random effects are on the spherical (i.e. u) scale, otherwise on the original scale.\n\n\n\n"
},

{
    "location": "constructors.html#MixedModels.condVar",
    "page": "Model constructors",
    "title": "MixedModels.condVar",
    "category": "function",
    "text": "condVar(m::MixedModel)\n\nReturn the conditional variances matrices of the random effects.\n\nThe random effects are returned by ranef as a vector of length k, where k is the number of random effects terms.  The ith element is a matrix of size vᵢ × ℓᵢ  where vᵢ is the size of the vector-valued random effects for each of the ℓᵢ levels of the grouping factor.  Technically those values are the modes of the conditional distribution of the random effects given the observed data.\n\nThis function returns an array of k three dimensional arrays, where the ith array is of size vᵢ × vᵢ × ℓᵢ.  These are the diagonal blocks from the conditional variance-covariance matrix,\n\ns² Λ(Λ\'Z\'ZΛ + I)⁻¹Λ\'\n\n\n\n"
},

{
    "location": "constructors.html#Conditional-modes-of-the-random-effects-1",
    "page": "Model constructors",
    "title": "Conditional modes of the random effects",
    "category": "section",
    "text": "The ranef extractorranefjulia> ranef(fm1)\n1-element Array{Array{Float64,2},1}:\n [-16.6282 0.369516 … 53.5798 -42.4943]\n\njulia> ranef(fm1, named=true)[1]\n1×6 Named Array{Float64,2}\n      A ╲ B │        A         B         C         D         E         F\n────────────┼───────────────────────────────────────────────────────────\n(Intercept) │ -16.6282  0.369516   26.9747  -21.8014   53.5798  -42.4943\nreturns the conditional modes of the random effects given the observed data. That is, these are the values that maximize the conditional density of the random effects given the observed data. For a LinearMixedModel these are also the conditional mean values.These are sometimes called the best linear unbiased predictors or BLUPs but that name is not particularly meaningful.At a superficial level these can be considered as the \"estimates\" of the random effects, with a bit of hand waving, but pursuing this analogy too far usually results in confusion.The corresponding conditional variances are returned bycondVarjulia> condVar(fm1)\n1-element Array{Array{Float64,3},1}:\n [362.31]\n\n[362.31]\n\n[362.31]\n\n[362.31]\n\n[362.31]\n\n[362.31]\n"
},

{
    "location": "optimization.html#",
    "page": "Details of the parameter estimation",
    "title": "Details of the parameter estimation",
    "category": "page",
    "text": ""
},

{
    "location": "optimization.html#Details-of-the-parameter-estimation-1",
    "page": "Details of the parameter estimation",
    "title": "Details of the parameter estimation",
    "category": "section",
    "text": ""
},

{
    "location": "optimization.html#The-probability-model-1",
    "page": "Details of the parameter estimation",
    "title": "The probability model",
    "category": "section",
    "text": "Maximum likelihood estimates are based on the probability model for the observed responses. In the probability model the distribution of the responses is expressed as a function of one or more parameters.For a continuous distribution the probability density is a function of the responses, given the parameters. The likelihood function is the same expression as the probability density but regarding the observed values as fixed and the parameters as varying.In general a mixed-effects model incorporates two random variables: mathcalB, the q-dimensional vector of random effects, and mathcalY, the n-dimensional response vector. The value, bf y, of mathcalY is observed; the value, bf b, of mathcalB is not."
},

{
    "location": "optimization.html#Linear-Mixed-Effects-Models-1",
    "page": "Details of the parameter estimation",
    "title": "Linear Mixed-Effects Models",
    "category": "section",
    "text": "In a linear mixed model the unconditional distribution of mathcalB and the conditional distribution, (mathcalY  mathcalB=bfb), are both multivariate Gaussian distributions, \\begin{equation} \\begin{aligned}   (\\mathcal{Y} | \\mathcal{B}=\\bf{b}) &\\sim\\mathcal{N}(\\bf{ X\\beta + Z b},\\sigma^2\\bf{I})\\\\\n  \\mathcal{B}&\\sim\\mathcal{N}(\\bf{0},\\Sigma_\\theta) . \\end{aligned} \\end{equation}The conditional mean of mathcal Y, given mathcal B=bf b, is the linear predictor, bf Xbfbeta+bf Zbf b, which depends on the p-dimensional fixed-effects parameter, bf beta, and on bf b. The model matrices, bf X and bf Z, of dimension ntimes p and ntimes q, respectively, are determined from the formula for the model and the values of covariates.  Although the matrix bf Z can be large (i.e. both n and q can be large), it is sparse (i.e. most of the elements in the matrix are zero).The relative covariance factor, Lambda_theta, is a qtimes q lower-triangular matrix, depending on the variance-component parameter, bftheta, and generating the symmetric qtimes q variance-covariance matrix, Sigma_theta, as \\begin{equation}   \\Sigma_\\theta=\\sigma^2\\Lambda_\\theta\\Lambda_\\theta\' \\end{equation}The spherical random effects, mathcalUsimmathcalN(bf 0sigma^2bf I_q), determine mathcal B according to \\begin{equation}   \\mathcal{B}=\\Lambda_\\theta\\mathcal{U}. \\end{equation}The penalized residual sum of squares (PRSS), \\begin{equation}   r^2(\\theta,\\beta,{\\bf u})=\\|{\\bf y} -{\\bf X}\\beta -{\\bf Z}\\Lambda_\\theta{\\bf u}\\|^2+\\|{\\bf u}\\|^2, \\end{equation} is the sum of the residual sum of squares, measuring fidelity of the model to the data, and a penalty on the size of bf u, measuring the complexity of the model. Minimizing r^2 with respect to bf u, \\begin{equation}   r^2_{\\beta,\\theta} =\\min_{\\bf u}\\left(\\|{\\bf y} -{\\bf X}{\\beta} -{\\bf Z}\\Lambda_\\theta{\\bf u}\\|^2+\\|{\\bf u}\\|^2\\right) \\end{equation} is a direct (i.e. non-iterative) computation. The particular method used to solve this generates a blocked Choleksy factor, bf L_theta, which is an lower triangular qtimes q matrix satisfying \\begin{equation}   {\\bf L}_\\theta{\\bf L}_\\theta\'=\\Lambda_\\theta\'{\\bf Z}\'{\\bf Z}\\Lambda_\\theta+{\\bf I}_q . \\end{equation} where bf I_q is the qtimes q identity matrix.Negative twice the log-likelihood of the parameters, given the data, bf y, is \\begin{equation} d({\\bf\\theta},{\\bf\\beta},\\sigma|{\\bf y}) =n\\log(2\\pi\\sigma^2)+\\log(|{\\bf L}_\\theta|^2)+\\frac{r^2_{\\beta,\\theta}}{\\sigma^2}. \\end{equation} where bf L_theta denotes the determinant of bf L_theta. Because bf L_theta is triangular, its determinant is the product of its diagonal elements.Because the conditional mean, bfmu_mathcal Ymathcal B=bf b=bf Xbfbeta+bf ZLambda_thetabf u, is a linear function of both bfbeta and bf u, minimization of the PRSS with respect to both bfbeta and bf u to produce \\begin{equation} r^2_\\theta =\\min_{{\\bf\\beta},{\\bf u}}\\left(\\|{\\bf y} -{\\bf X}{\\bf\\beta} -{\\bf Z}\\Lambda_\\theta{\\bf u}\\|^2+\\|{\\bf u}\\|^2\\right) \\end{equation} is also a direct calculation. The values of bf u and bfbeta that provide this minimum are called, respectively, the conditional mode, tildebf u_theta, of the spherical random effects and the conditional estimate, widehatbfbeta_theta, of the fixed effects. At the conditional estimate of the fixed effects the objective is \\begin{equation} d({\\bf\\theta},\\widehat{\\beta}_\\theta,\\sigma|{\\bf y}) =n\\log(2\\pi\\sigma^2)+\\log(|{\\bf L}_\\theta|^2)+\\frac{r^2_\\theta}{\\sigma^2}. \\end{equation}Minimizing this expression with respect to sigma^2 produces the conditional estimate \\begin{equation} \\widehat{\\sigma^2}_\\theta=\\frac{r^2_\\theta}{n} \\end{equation} which provides the profiled log-likelihood on the deviance scale as \\begin{equation} \\tilde{d}(\\theta|{\\bf y})=d(\\theta,\\widehat{\\beta}_\\theta,\\widehat{\\sigma}_\\theta|{\\bf y}) =\\log(|{\\bf L}_\\theta|^2)+n\\left[1+\\log\\left(\\frac{2\\pi r^2_\\theta}{n}\\right)\\right], \\end{equation} a function of bftheta alone.The MLE of bftheta, written widehatbftheta, is the value that minimizes this profiled objective. We determine this value by numerical optimization. In the process of evaluating tilded(widehatthetabf y) we determine widehatbeta=widehatbeta_widehattheta, tildebf u_widehattheta and r^2_widehattheta, from which we can evaluate widehatsigma=sqrtr^2_widehatthetan.The elements of the conditional mode of mathcal B, evaluated at the parameter estimates, \\begin{equation} \\tilde{\\bf b}_{\\widehat{\\theta}}= \\Lambda_{\\widehat{\\theta}}\\tilde{\\bf u}_{\\widehat{\\theta}} \\end{equation} are sometimes called the best linear unbiased predictors or BLUPs of the random effects. Although BLUPs an appealing acronym, I don’t find the term particularly instructive (what is a “linear unbiased predictor” and in what sense are these the “best”?) and prefer the term “conditional modes”, because these are the values of bf b that maximize the density of the conditional distribution mathcalB  mathcalY = bf y. For a linear mixed model, where all the conditional and unconditional distributions are Gaussian, these values are also the conditional means."
},

{
    "location": "optimization.html#MixedModels.ScalarFactorReTerm",
    "page": "Details of the parameter estimation",
    "title": "MixedModels.ScalarFactorReTerm",
    "category": "type",
    "text": "ScalarFactorReTerm\n\nScalar random-effects term from a grouping factor\n\nMembers\n\nf: the grouping factor as a CategoricalVector\nz: the raw random-effects model matrix as a vector.\nwtz: a weighted copy of z\nfnm: the name of the grouping factor as a Symbol\ncnm: the column name as a string\nΛ: the relative covariance multiplier\n\n\n\n"
},

{
    "location": "optimization.html#MixedModels.VectorFactorReTerm",
    "page": "Details of the parameter estimation",
    "title": "MixedModels.VectorFactorReTerm",
    "category": "type",
    "text": "VectorFactorReTerm\n\nRandom-effects term from a grouping factor, model matrix and block pattern\n\nMembers\n\nf: the grouping factor as an CategoricalVector\nz: the transposed raw random-effects model matrix\nwtz: a weighted copy of z\nwtzv: a view of wtz as a Vector{SVector{S,T}}\nfnm: the name of the grouping factor as a Symbol\ncnms: a Vector of column names (row names after transposition) of z\nblks: a Vector{Int} of block sizes within Λ\nΛ: the relative covariance factor\ninds: linear indices of θ elements in the relative covariance factor\n\n\n\n"
},

{
    "location": "optimization.html#Internal-structure-of-\\Lambda_\\theta-and-\\bf-Z-1",
    "page": "Details of the parameter estimation",
    "title": "Internal structure of Lambda_theta and bf Z",
    "category": "section",
    "text": "In the types of LinearMixedModel available through the MixedModels package, groups of random effects and the corresponding columns of the model matrix, bf Z, are associated with random-effects terms in the model formula.For the simple examplejulia> fm1 = fit(LinearMixedModel, @formula(Y ~ 1 + (1|G)), dat[:Dyestuff])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G)\n   logLik   -2 logLik     AIC        BIC    \n -163.66353  327.32706  333.32706  337.53065\n\nVariance components:\n              Column    Variance  Std.Dev. \n G        (Intercept)  1388.3332 37.260344\n Residual              2451.2500 49.510100\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)    1527.5   17.6946  86.326  <1e-99\n\nthe only random effects term in the formula is (1|G), a simple, scalar random-effects term.julia> t1 = fm1.trms[1]\nMixedModels.ScalarFactorReTerm{Float64,String,UInt8}(CategoricalArrays.CategoricalString{UInt8}[\"A\", \"A\", \"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"B\"  …  \"E\", \"E\", \"E\", \"E\", \"E\", \"F\", \"F\", \"F\", \"F\", \"F\"], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], :G, String[\"(Intercept)\"], 0.7525806571450242)\nScalarFactorReTermThis ScalarFactorReTerm contributes a block of columns to the model matrix bf Z and a diagonal block to Lambda_theta.julia> getθ(t1)\n1-element Array{Float64,1}:\n 0.752581\n\njulia> getΛ(t1)\n0.7525806571450242\n\njulia> convert(Array{Int}, full(t1)) # matrix is floating point but all integers\n30×6 Array{Int64,2}:\n 1  0  0  0  0  0\n 1  0  0  0  0  0\n 1  0  0  0  0  0\n 1  0  0  0  0  0\n 1  0  0  0  0  0\n 0  1  0  0  0  0\n 0  1  0  0  0  0\n 0  1  0  0  0  0\n 0  1  0  0  0  0\n 0  1  0  0  0  0\n ⋮              ⋮\n 0  0  0  0  1  0\n 0  0  0  0  1  0\n 0  0  0  0  1  0\n 0  0  0  0  1  0\n 0  0  0  0  0  1\n 0  0  0  0  0  1\n 0  0  0  0  0  1\n 0  0  0  0  0  1\n 0  0  0  0  0  1\nBecause there is only one random-effects term in the model, the matrix bf Z is the indicators matrix shown as the result of full(t1), but stored in a special sparse format. Furthermore, there is only one block in Lambda_theta. For a ScalarFactorReTerm this block is a multiple of the identity, in this case 075258cdotbf I_6.For a vector-valued random-effects term, as injulia> fm2 = fit(LinearMixedModel, @formula(Y ~ 1 + U + (1+U|G)), dat[:sleepstudy])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + U + ((1 + U) | G)\n   logLik   -2 logLik     AIC        BIC    \n -875.96967 1751.93934 1763.93934 1783.09709\n\nVariance components:\n              Column    Variance  Std.Dev.   Corr.\n G        (Intercept)  565.51067 23.780468\n          U             32.68212  5.716828  0.08\n Residual              654.94145 25.591824\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   251.405   6.63226 37.9064  <1e-99\nU             10.4673   1.50224 6.96781  <1e-11\n\n\njulia> t21 = fm2.trms[1]\nMixedModels.VectorFactorReTerm{Float64,String,UInt8,2}(CategoricalArrays.CategoricalString{UInt8}[\"308\", \"308\", \"308\", \"308\", \"308\", \"308\", \"308\", \"308\", \"308\", \"308\"  …  \"372\", \"372\", \"372\", \"372\", \"372\", \"372\", \"372\", \"372\", \"372\", \"372\"], [1.0 1.0 … 1.0 1.0; 0.0 1.0 … 8.0 9.0], [1.0 1.0 … 1.0 1.0; 0.0 1.0 … 8.0 9.0], StaticArrays.SArray{Tuple{2},Float64,1,2}[[1.0, 0.0], [1.0, 1.0], [1.0, 2.0], [1.0, 3.0], [1.0, 4.0], [1.0, 5.0], [1.0, 6.0], [1.0, 7.0], [1.0, 8.0], [1.0, 9.0]  …  [1.0, 0.0], [1.0, 1.0], [1.0, 2.0], [1.0, 3.0], [1.0, 4.0], [1.0, 5.0], [1.0, 6.0], [1.0, 7.0], [1.0, 8.0], [1.0, 9.0]], :G, String[\"(Intercept)\", \"U\"], [2], [0.929221 0.0; 0.0181684 0.222645], [1, 2, 4])\nthe random-effects term (1+U|G) generates aVectorFactorReTermThe model matrix bf Z for this model isjulia> convert(Array{Int}, full(t21))\n180×36 Array{Int64,2}:\n 1  0  0  0  0  0  0  0  0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 1  1  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  2  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  3  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  4  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  5  0  0  0  0  0  0  0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 1  6  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  7  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  8  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 1  9  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n ⋮              ⋮              ⋮        ⋱     ⋮              ⋮              ⋮\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  1\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  2\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  3\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  4\n 0  0  0  0  0  0  0  0  0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  1  5\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  6\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  7\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  8\n 0  0  0  0  0  0  0  0  0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  1  9\nand Lambda_theta is a 36times36 block diagonal matrix with 18 diagonal blocks, all of the formjulia> getΛ(t21)\n2×2 LowerTriangular{Float64,Array{Float64,2}}:\n 0.929221    ⋅      \n 0.0181684  0.222645\nThe theta vector isjulia> getθ(t21)\n3-element Array{Float64,1}:\n 0.929221 \n 0.0181684\n 0.222645 \nRandom-effects terms in the model formula that have the same grouping factor are amagamated into a single VectorFactorReTerm object.julia> fm3 = fit(LinearMixedModel, @formula(Y ~ 1 + U + (1|G) + (0+U|G)), dat[:sleepstudy])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + U + (1 | G) + ((0 + U) | G)\n   logLik   -2 logLik     AIC        BIC    \n -876.00163 1752.00326 1762.00326 1777.96804\n\nVariance components:\n              Column    Variance  Std.Dev.   Corr.\n G        (Intercept)  584.258973 24.17145\n          U             33.632805  5.79938  0.00\n Residual              653.115782 25.55613\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   251.405   6.70771   37.48  <1e-99\nU             10.4673   1.51931 6.88951  <1e-11\n\n\njulia> t31 = fm3.trms[1]\nMixedModels.VectorFactorReTerm{Float64,String,UInt8,2}(CategoricalArrays.CategoricalString{UInt8}[\"308\", \"308\", \"308\", \"308\", \"308\", \"308\", \"308\", \"308\", \"308\", \"308\"  …  \"372\", \"372\", \"372\", \"372\", \"372\", \"372\", \"372\", \"372\", \"372\", \"372\"], [1.0 1.0 … 1.0 1.0; 0.0 1.0 … 8.0 9.0], [1.0 1.0 … 1.0 1.0; 0.0 1.0 … 8.0 9.0], StaticArrays.SArray{Tuple{2},Float64,1,2}[[1.0, 0.0], [1.0, 1.0], [1.0, 2.0], [1.0, 3.0], [1.0, 4.0], [1.0, 5.0], [1.0, 6.0], [1.0, 7.0], [1.0, 8.0], [1.0, 9.0]  …  [1.0, 0.0], [1.0, 1.0], [1.0, 2.0], [1.0, 3.0], [1.0, 4.0], [1.0, 5.0], [1.0, 6.0], [1.0, 7.0], [1.0, 8.0], [1.0, 9.0]], :G, String[\"(Intercept)\", \"U\"], [1, 1], [0.945818 0.0; 0.0 0.226927], [1, 4])\nFor this model the matrix bf Z is the same as that of model fm2 but the diagonal blocks of Lambda_theta are themselves diagonal.julia> getΛ(t31)\n2×2 LowerTriangular{Float64,Array{Float64,2}}:\n 0.945818   ⋅      \n 0.0       0.226927\n\njulia> getθ(t31)\n2-element Array{Float64,1}:\n 0.945818\n 0.226927\nRandom-effects terms with distinct grouping factors generate distinct elements of the trms member of the LinearMixedModel object. Multiple AbstractFactorReTerm (i.e. either a ScalarFactorReTerm or a VectorFactorReTerm) objects are sorted by decreasing numbers of random effects.julia> fm4 = fit(LinearMixedModel, @formula(Y ~ 1 + (1|H) + (1|G)), dat[:Penicillin])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | H) + (1 | G)\n   logLik   -2 logLik     AIC        BIC    \n -166.09417  332.18835  340.18835  352.06760\n\nVariance components:\n              Column    Variance  Std.Dev. \n G        (Intercept)  0.7149795 0.8455646\n H        (Intercept)  3.1351924 1.7706474\n Residual              0.3024264 0.5499331\n Number of obs: 144; levels of grouping factors: 24, 6\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   22.9722  0.744596 30.8519  <1e-99\n\n\njulia> t41 = fm4.trms[1]\nMixedModels.ScalarFactorReTerm{Float64,String,UInt8}(CategoricalArrays.CategoricalString{UInt8}[\"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"b\", \"b\", \"b\", \"b\"  …  \"w\", \"w\", \"w\", \"w\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\"], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], :G, String[\"(Intercept)\"], 1.5375772637253458)\n\njulia> t42 = fm4.trms[2]\nMixedModels.ScalarFactorReTerm{Float64,String,UInt8}(CategoricalArrays.CategoricalString{UInt8}[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"A\", \"B\", \"C\", \"D\"  …  \"C\", \"D\", \"E\", \"F\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], :H, String[\"(Intercept)\"], 3.219750701314265)\nNote that the first ScalarFactorReTerm in fm4.trms corresponds to grouping factor G even though the term (1|G) occurs in the formula after (1|H)."
},

{
    "location": "optimization.html#MixedModels.OptSummary",
    "page": "Details of the parameter estimation",
    "title": "MixedModels.OptSummary",
    "category": "type",
    "text": "OptSummary\n\nSummary of an NLopt optimization\n\nMembers\n\ninitial: a copy of the initial parameter values in the optimization\nlowerbd: lower bounds on the parameter values\nftol_rel: as in NLopt\nftol_abs: as in NLopt\nxtol_rel: as in NLopt\nxtol_abs: as in NLopt\ninitial_step: as in NLopt\nmaxfeval: as in NLopt\nfinal: a copy of the final parameter values from the optimization\nfmin: the final value of the objective\nfeval: the number of function evaluations\noptimizer: the name of the optimizer used, as a Symbol\nreturnvalue: the return value, as a Symbol\n\n\n\n"
},

{
    "location": "optimization.html#Progress-of-the-optimization-1",
    "page": "Details of the parameter estimation",
    "title": "Progress of the optimization",
    "category": "section",
    "text": "An optional Bool argument of true in the call to fit! of a LinearMixedModel causes printing of the objective and the theta parameter at each evaluation during the optimization.julia> fit!(LinearMixedModel(@formula(Y ~ 1 + (1|G)), dat[:Dyestuff]), true);\nf_1: 327.76702 [1.0]\nf_2: 331.03619 [1.75]\nf_3: 330.64583 [0.25]\nf_4: 327.69511 [0.97619]\nf_5: 327.56631 [0.928569]\nf_6: 327.3826 [0.833327]\nf_7: 327.35315 [0.807188]\nf_8: 327.34663 [0.799688]\nf_9: 327.341 [0.792188]\nf_10: 327.33253 [0.777188]\nf_11: 327.32733 [0.747188]\nf_12: 327.32862 [0.739688]\nf_13: 327.32706 [0.752777]\nf_14: 327.32707 [0.753527]\nf_15: 327.32706 [0.752584]\nf_16: 327.32706 [0.752509]\nf_17: 327.32706 [0.752591]\nf_18: 327.32706 [0.752581]\n\njulia> fit!(LinearMixedModel(@formula(Y ~ 1 + U + (1+U|G)), dat[:sleepstudy]), true);\nf_1: 1784.6423 [1.0, 0.0, 1.0]\nf_2: 1790.12564 [1.75, 0.0, 1.0]\nf_3: 1798.99962 [1.0, 1.0, 1.0]\nf_4: 1803.8532 [1.0, 0.0, 1.75]\nf_5: 1800.61398 [0.25, 0.0, 1.0]\nf_6: 1798.60463 [1.0, -1.0, 1.0]\nf_7: 1752.26074 [1.0, 0.0, 0.25]\nf_8: 1797.58769 [1.18326, -0.00866189, 0.0]\nf_9: 1754.95411 [1.075, 0.0, 0.325]\nf_10: 1753.69568 [0.816632, 0.0111673, 0.288238]\nf_11: 1754.817 [1.0, -0.0707107, 0.196967]\nf_12: 1753.10673 [0.943683, 0.0638354, 0.262696]\nf_13: 1752.93938 [0.980142, -0.0266568, 0.274743]\nf_14: 1752.25688 [0.984343, -0.0132347, 0.247191]\nf_15: 1752.05745 [0.97314, 0.00253785, 0.23791]\nf_16: 1752.02239 [0.954526, 0.00386421, 0.235892]\nf_17: 1752.02273 [0.935929, 0.0013318, 0.234445]\nf_18: 1751.97169 [0.954965, 0.00790664, 0.229046]\nf_19: 1751.9526 [0.953313, 0.0166274, 0.225768]\nf_20: 1751.94852 [0.946929, 0.0130761, 0.222871]\nf_21: 1751.98718 [0.933418, 0.00613767, 0.218951]\nf_22: 1751.98321 [0.951544, 0.005789, 0.220618]\nf_23: 1751.95197 [0.952809, 0.0190332, 0.224178]\nf_24: 1751.94628 [0.946322, 0.0153739, 0.225088]\nf_25: 1751.9467 [0.947124, 0.0148894, 0.224892]\nf_26: 1751.94757 [0.946497, 0.0154643, 0.225814]\nf_27: 1751.94531 [0.946086, 0.0157934, 0.224449]\nf_28: 1751.94418 [0.945304, 0.0166902, 0.223361]\nf_29: 1751.94353 [0.944072, 0.0172106, 0.222716]\nf_30: 1751.94244 [0.941271, 0.0163099, 0.222523]\nf_31: 1751.94217 [0.939, 0.015899, 0.222132]\nf_32: 1751.94237 [0.938979, 0.016548, 0.221562]\nf_33: 1751.94228 [0.938863, 0.0152466, 0.222683]\nf_34: 1751.9422 [0.938269, 0.015733, 0.222024]\nf_35: 1751.94131 [0.938839, 0.0166373, 0.222611]\nf_36: 1751.94093 [0.938397, 0.0173965, 0.222817]\nf_37: 1751.94057 [0.937006, 0.0180445, 0.222534]\nf_38: 1751.94018 [0.934109, 0.0187354, 0.22195]\nf_39: 1751.94008 [0.932642, 0.0189242, 0.221726]\nf_40: 1751.94027 [0.931357, 0.0190082, 0.221309]\nf_41: 1751.9415 [0.932821, 0.0206454, 0.221367]\nf_42: 1751.93949 [0.931867, 0.0179574, 0.222564]\nf_43: 1751.93939 [0.929167, 0.0177824, 0.222534]\nf_44: 1751.9394 [0.929659, 0.0177721, 0.222508]\nf_45: 1751.93943 [0.929193, 0.0187806, 0.22257]\nf_46: 1751.93935 [0.928986, 0.0182366, 0.222484]\nf_47: 1751.93949 [0.928697, 0.0182937, 0.223175]\nf_48: 1751.93936 [0.928243, 0.0182695, 0.222584]\nf_49: 1751.93934 [0.929113, 0.0181791, 0.222624]\nf_50: 1751.93934 [0.929191, 0.0181658, 0.222643]\nf_51: 1751.93935 [0.929254, 0.0182093, 0.222621]\nf_52: 1751.93935 [0.929189, 0.0181298, 0.222573]\nf_53: 1751.93934 [0.929254, 0.0181676, 0.22265]\nf_54: 1751.93934 [0.929215, 0.0181717, 0.222647]\nf_55: 1751.93934 [0.929208, 0.0181715, 0.222646]\nf_56: 1751.93934 [0.929209, 0.018173, 0.222652]\nf_57: 1751.93934 [0.929221, 0.0181684, 0.222645]\nA shorter summary of the optimization process is always available as anOptSummaryobject, which is the optsum member of the LinearMixedModel.julia> fm2.optsum\nInitial parameter vector: [1.0, 0.0, 1.0]\nInitial objective value:  1784.6422961924507\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [0.0, -Inf, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10, 1.0e-10]\ninitial_step:             [0.75, 1.0, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     57\nFinal parameter vector:   [0.929221, 0.0181684, 0.222645]\nFinal objective value:    1751.9393444646757\nReturn code:              FTOL_REACHED\n\n"
},

{
    "location": "optimization.html#Modifying-the-optimization-process-1",
    "page": "Details of the parameter estimation",
    "title": "Modifying the optimization process",
    "category": "section",
    "text": "The OptSummary object contains both input and output fields for the optimizer. To modify the optimization process the input fields can be changed after constructing the model but before fitting it.Suppose, for example, that the user wishes to try a Nelder-Mead optimization method instead of the default BOBYQA (Bounded Optimization BY Quadratic Approximation) method.julia> fm2 = LinearMixedModel(@formula(Y ~ 1 + U + (1+U|G)), dat[:sleepstudy]);\n\njulia> fm2.optsum.optimizer = :LN_NELDERMEAD;\n\njulia> fit!(fm2)\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + U + ((1 + U) | G)\n   logLik   -2 logLik     AIC        BIC    \n -875.96967 1751.93934 1763.93934 1783.09709\n\nVariance components:\n              Column    Variance   Std.Dev.   Corr.\n G        (Intercept)  565.528831 23.780850\n          U             32.681047  5.716734  0.08\n Residual              654.941678 25.591828\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   251.405   6.63233  37.906  <1e-99\nU             10.4673   1.50222  6.9679  <1e-11\n\n\njulia> fm2.optsum\nInitial parameter vector: [1.0, 0.0, 1.0]\nInitial objective value:  1784.6422961924507\n\nOptimizer (from NLopt):   LN_NELDERMEAD\nLower bounds:             [0.0, -Inf, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10, 1.0e-10]\ninitial_step:             [0.75, 1.0, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     140\nFinal parameter vector:   [0.929236, 0.0181688, 0.222641]\nFinal objective value:    1751.9393444749974\nReturn code:              FTOL_REACHED\n\nThe parameter estimates are quite similar to those using :LN_BOBYQA but at the expense of 140 functions evaluations for :LN_NELDERMEAD versus 57 for :LN_BOBYQA.See the documentation for the NLopt package for details about the various settings."
},

{
    "location": "optimization.html#Convergence-to-singular-covariance-matrices-1",
    "page": "Details of the parameter estimation",
    "title": "Convergence to singular covariance matrices",
    "category": "section",
    "text": "To ensure identifiability of Sigma_theta=sigma^2Lambda_theta Lambda_theta, the elements of theta corresponding to diagonal elements of Lambda_theta are constrained to be non-negative. For example, in a trivial case of a single, simple, scalar, random-effects term as in fm1, the one-dimensional theta vector is the ratio of the standard deviation of the random effects to the standard deviation of the response. It happens that -theta produces the same log-likelihood but, by convention, we define the standard deviation to be the positive square root of the variance. Requiring the diagonal elements of Lambda_theta to be non-negative is a generalization of using this positive square root.If the optimization converges on the boundary of the feasible region, that is if one or more of the diagonal elements of Lambda_theta is zero at convergence, the covariance matrix Sigma_theta will be singular. This means that there will be linear combinations of random effects that are constant. Usually convergence to a singular covariance matrix is a sign of an over-specified model."
},

{
    "location": "optimization.html#Distributions.Bernoulli",
    "page": "Details of the parameter estimation",
    "title": "Distributions.Bernoulli",
    "category": "type",
    "text": "Bernoulli(p)\n\nA Bernoulli distribution is parameterized by a success rate p, which takes value 1 with probability p and 0 with probability 1-p.\n\nP(X = k) = begincases\n1 - p  quad textfor  k = 0 \np  quad textfor  k = 1\nendcases\n\nBernoulli()    # Bernoulli distribution with p = 0.5\nBernoulli(p)   # Bernoulli distribution with success rate p\n\nparams(d)      # Get the parameters, i.e. (p,)\nsuccprob(d)    # Get the success rate, i.e. p\nfailprob(d)    # Get the failure rate, i.e. 1 - p\n\nExternal links:\n\nBernoulli distribution on Wikipedia\n\n\n\n"
},

{
    "location": "optimization.html#Distributions.Poisson",
    "page": "Details of the parameter estimation",
    "title": "Distributions.Poisson",
    "category": "type",
    "text": "Poisson(λ)\n\nA Poisson distribution descibes the number of independent events occurring within a unit time interval, given the average rate of occurrence λ.\n\nP(X = k) = fraclambda^kk e^-lambda quad text for  k = 012ldots\n\nPoisson()        # Poisson distribution with rate parameter 1\nPoisson(lambda)       # Poisson distribution with rate parameter lambda\n\nparams(d)        # Get the parameters, i.e. (λ,)\nmean(d)          # Get the mean arrival rate, i.e. λ\n\nExternal links:\n\nPoisson distribution on Wikipedia\n\n\n\n"
},

{
    "location": "optimization.html#Generalized-Linear-Mixed-Effects-Models-1",
    "page": "Details of the parameter estimation",
    "title": "Generalized Linear Mixed-Effects Models",
    "category": "section",
    "text": "In a generalized linear model the responses are modelled as coming from a particular distribution, such as Bernoulli for binary responses or Poisson for responses that represent counts. The scalar distributions of individual responses differ only in their means, which are determined by a linear predictor expression eta=bf Xbeta, where, as before, bf X is a model matrix derived from the values of covariates and beta is a vector of coefficients.The unconstrained components of eta are mapped to the, possiby constrained, components of the mean response, mu, via a scalar function, g^-1, applied to each component of eta. For historical reasons, the inverse of this function, taking components of mu to the corresponding component of eta is called the link function and more frequently used map from eta to mu is the inverse link.A generalized linear mixed-effects model (GLMM) is defined, for the purposes of this package, by \\begin{equation} \\begin{aligned}   (\\mathcal{Y} | \\mathcal{B}=\\bf{b}) &\\sim\\mathcal{D}(\\bf{g^{-1}(X\\beta + Z b)},\\phi)\\\\\n  \\mathcal{B}&\\sim\\mathcal{N}(\\bf{0},\\Sigma_\\theta) . \\end{aligned} \\end{equation} where mathcalD indicates the distribution family parameterized by the mean and, when needed, a common scale parameter, phi. (There is no scale parameter for Bernoulli or for Poisson. Specifying the mean completely determines the distribution.)Bernoulli\nPoissonThe glmm function generates, but does not fit, a GeneralizedLinearMixedModel object.julia> mdl = GeneralizedLinearMixedModel(@formula(r2 ~ 1 + a + g + b + s + (1|id) + (1|item)),\n           dat[:VerbAgg], Bernoulli());\n\njulia> typeof(mdl)\nMixedModels.GeneralizedLinearMixedModel{Float64}\nA separate call to fit! is required to fit the model. This involves optimizing an objective function, the Laplace approximation to the deviance, with respect to the parameters, which are beta, the fixed-effects coefficients, and theta, the covariance parameters. The starting estimate for beta is determined by fitting a GLM to the fixed-effects part of the formulajulia> mdl.β\n6-element Array{Float64,1}:\n  0.0399404\n -0.776656 \n -0.794186 \n  0.231317 \n -1.53919  \n  0.206053 \nand the starting estimate for theta, which is a vector of the two standard deviations of the random effects, is chosen to bejulia> mdl.θ\n2-element Array{Float64,1}:\n 1.0\n 1.0\nThe Laplace approximation to the deviance requires determining the conditional modes of the random effects. These are the values that maximize the conditional density of the random effects, given the model parameters and the data. This is done using Penalized Iteratively Reweighted Least Squares (PIRLS). In most cases PIRLS is fast and stable. It is simply a penalized version of the IRLS algorithm used in fitting GLMs.The distinction between the \"fast\" and \"slow\" algorithms in the MixedModels package (nAGQ=0 or nAGQ=1 in lme4) is whether the fixed-effects parameters, beta, are optimized in PIRLS or in the nonlinear optimizer. In a call to the pirls! function the first argument is a GeneralizedLinearMixedModel, which is modified during the function call. (By convention, the names of such mutating functions end in ! as a warning to the user that they can modify an argument, usually the first argument.) The second and third arguments are optional logical values indicating if beta is to be varied and if verbose output is to be printed.julia> pirls!(mdl, true, true)\nvaryβ = true\nobj₀ = 10210.853438905406\nβ = [0.0399404, -0.776656, -0.794186, 0.231317, -1.53919, 0.206053]\niter = 1\nobj = 8301.483049027265\niter = 2\nobj = 8205.604285133919\niter = 3\nobj = 8201.89659746689\niter = 4\nobj = 8201.848598910707\niter = 5\nobj = 8201.848559060705\n8201.848559060705\njulia> LaplaceDeviance(mdl)\n8201.848559060705\njulia> mdl.β\n6-element Array{Float64,1}:\n  0.0514385\n -0.979493 \n -0.979124 \n  0.290225 \n -1.95402  \n  0.218535 \njulia> mdl.θ # current values of the standard deviations of the random effects\n2-element Array{Float64,1}:\n 1.0\n 1.0\nIf the optimization with respect to beta is performed within PIRLS then the nonlinear optimization of the Laplace approximation to the deviance requires optimization with respect to theta only. This is the \"fast\" algorithm. Given a value of theta, PIRLS is used to determine the conditional estimate of beta and the conditional mode of the random effects, b.julia> mdl.b # conditional modes of b\n2-element Array{Array{Float64,2},1}:\n [-0.600772 -1.93227 … -0.144554 -0.575224]\n [-0.186364 0.180552 … 0.282092 -0.221974] \njulia> fit!(mdl, fast=true, verbose=true);\nf_1: 8201.84856 [1.0, 1.0]\nf_2: 8190.11782 [1.75, 1.0]\nf_3: 8224.45098 [1.0, 1.75]\nf_4: 9026.00391 [0.25, 1.0]\nf_5: 8205.79378 [1.0, 0.25]\nf_6: 8157.04103 [1.38583, 0.736457]\nf_7: 8367.72422 [1.33715, 0.0]\nf_8: 8170.28883 [1.41365, 1.11042]\nf_9: 8158.82932 [1.27225, 0.762811]\nf_10: 8161.93341 [1.40936, 0.868084]\nf_11: 8156.30098 [1.32694, 0.721015]\nf_12: 8156.11668 [1.32365, 0.714275]\nf_13: 8156.00207 [1.31847, 0.708856]\nf_14: 8155.75359 [1.32072, 0.701702]\nf_15: 8155.27522 [1.32636, 0.687802]\nf_16: 8154.41 [1.33859, 0.660408]\nf_17: 8153.39496 [1.37582, 0.613358]\nf_18: 8152.74094 [1.39515, 0.563096]\nf_19: 8151.76473 [1.36763, 0.509124]\nf_20: 8152.80894 [1.26776, 0.475123]\nf_21: 8152.86642 [1.4148, 0.471099]\nf_22: 8151.76959 [1.32589, 0.527523]\nf_23: 8151.73776 [1.36681, 0.498606]\nf_24: 8151.58516 [1.33974, 0.493492]\nf_25: 8151.60206 [1.33758, 0.486311]\nf_26: 8151.6005 [1.34692, 0.491348]\nf_27: 8151.58338 [1.33958, 0.497337]\nf_28: 8151.58359 [1.33927, 0.49802]\nf_29: 8151.58335 [1.33972, 0.496955]\nf_30: 8151.58351 [1.34041, 0.497255]\nf_31: 8151.5834 [1.33957, 0.49622]\nf_32: 8151.58348 [1.34031, 0.496495]\nf_33: 8151.58334 [1.33956, 0.496833]\nf_34: 8151.58334 [1.33953, 0.496902]\nf_35: 8151.58334 [1.33963, 0.496867]\nf_36: 8151.58334 [1.33963, 0.496803]\nf_37: 8151.58334 [1.33956, 0.496833]\nThe optimization process is summarized byjulia> mdl.LMM.optsum\nInitial parameter vector: [1.0, 1.0]\nInitial objective value:  8201.848559060627\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [0.0, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10]\ninitial_step:             [0.75, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     37\nFinal parameter vector:   [1.33956, 0.496833]\nFinal objective value:    8151.583340132134\nReturn code:              FTOL_REACHED\n\nAs one would hope, given the name of the option, this fit is comparatively fast.julia> @time(fit!(GeneralizedLinearMixedModel(@formula(r2 ~ 1 + a + g + b + s + (1 | id) + (1 | item)), \n        dat[:VerbAgg], Bernoulli()), fast=true))\n  0.410434 seconds (87.56 k allocations: 10.268 MiB, 36.42% gc time)\nGeneralized Linear Mixed Model fit by minimizing the Laplace approximation to the deviance\n  Formula: r2 ~ 1 + a + g + b + s + (1 | id) + (1 | item)\n  Distribution: Distributions.Bernoulli{Float64}\n  Link: GLM.LogitLink()\n\n  Deviance (Laplace approximation): 8151.5833\n\nVariance components:\n          Column    Variance   Std.Dev. \n id   (Intercept)  1.79443144 1.3395639\n item (Intercept)  0.24684282 0.4968328\n\n Number of obs: 7584; levels of grouping factors: 316, 24\n\nFixed-effects parameters:\n              Estimate Std.Error  z value P(>|z|)\n(Intercept)   0.208273  0.405425 0.513715  0.6075\na            0.0543791 0.0167533  3.24587  0.0012\ng: M          0.304089  0.191223  1.59023  0.1118\nb: scold       -1.0165  0.257531 -3.94708   <1e-4\nb: shout       -2.0218  0.259235 -7.79912  <1e-14\ns: self       -1.01344  0.210888 -4.80559   <1e-5\n\nThe alternative algorithm is to use PIRLS to find the conditional mode of the random effects, given beta and theta and then use the general nonlinear optimizer to fit with respect to both beta and theta. Because it is slower to incorporate the beta parameters in the general nonlinear optimization, the fast fit is performed first and used to determine starting estimates for the more general optimization.julia> @time mdl1 = fit!(GeneralizedLinearMixedModel(@formula(r2 ~ 1+a+g+b+s+(1|id)+(1|item)), \n        dat[:VerbAgg], Bernoulli()), verbose = true)\nf_1: 8201.84856 [1.0, 1.0]\nf_2: 8190.11782 [1.75, 1.0]\nf_3: 8224.45098 [1.0, 1.75]\nf_4: 9026.00391 [0.25, 1.0]\nf_5: 8205.79378 [1.0, 0.25]\nf_6: 8157.04103 [1.38583, 0.736457]\nf_7: 8367.72422 [1.33715, 0.0]\nf_8: 8170.28883 [1.41365, 1.11042]\nf_9: 8158.82932 [1.27225, 0.762811]\nf_10: 8161.93341 [1.40936, 0.868084]\nf_11: 8156.30098 [1.32694, 0.721015]\nf_12: 8156.11668 [1.32365, 0.714275]\nf_13: 8156.00207 [1.31847, 0.708856]\nf_14: 8155.75359 [1.32072, 0.701702]\nf_15: 8155.27522 [1.32636, 0.687802]\nf_16: 8154.41 [1.33859, 0.660408]\nf_17: 8153.39496 [1.37582, 0.613358]\nf_18: 8152.74094 [1.39515, 0.563096]\nf_19: 8151.76473 [1.36763, 0.509124]\nf_20: 8152.80894 [1.26776, 0.475123]\nf_21: 8152.86642 [1.4148, 0.471099]\nf_22: 8151.76959 [1.32589, 0.527523]\nf_23: 8151.73776 [1.36681, 0.498606]\nf_24: 8151.58516 [1.33974, 0.493492]\nf_25: 8151.60206 [1.33758, 0.486311]\nf_26: 8151.6005 [1.34692, 0.491348]\nf_27: 8151.58338 [1.33958, 0.497337]\nf_28: 8151.58359 [1.33927, 0.49802]\nf_29: 8151.58335 [1.33972, 0.496955]\nf_30: 8151.58351 [1.34041, 0.497255]\nf_31: 8151.5834 [1.33957, 0.49622]\nf_32: 8151.58348 [1.34031, 0.496495]\nf_33: 8151.58334 [1.33956, 0.496833]\nf_34: 8151.58334 [1.33953, 0.496902]\nf_35: 8151.58334 [1.33963, 0.496867]\nf_36: 8151.58334 [1.33963, 0.496803]\nf_37: 8151.58334 [1.33956, 0.496833]\nf_1: 8151.58334 [0.0543791, -1.01344, -1.0165, 0.304089, -2.0218, 0.208273, 1.33956, 0.496833]\nf_2: 8648.50534 [0.189521, -1.01344, -1.0165, 0.304089, -2.0218, 0.208273, 1.33956, 0.496833]\nf_3: 8151.59709 [0.0543791, -1.00786, -1.0165, 0.304089, -2.0218, 0.208273, 1.33956, 0.496833]\nf_4: 8151.71186 [0.0543791, -1.01344, -0.952756, 0.304089, -2.0218, 0.208273, 1.33956, 0.496833]\nf_5: 8151.75117 [0.0543791, -1.01344, -1.0165, 0.389933, -2.0218, 0.208273, 1.33956, 0.496833]\nf_6: 8152.01341 [0.0543791, -1.01344, -1.0165, 0.304089, -1.93539, 0.208273, 1.33956, 0.496833]\nf_7: 8151.93507 [0.0543791, -1.01344, -1.0165, 0.304089, -2.0218, 0.278569, 1.33956, 0.496833]\nf_8: 8152.13673 [0.0543791, -1.01344, -1.0165, 0.304089, -2.0218, 0.208273, 1.38956, 0.496833]\nf_9: 8151.94237 [0.0543791, -1.01344, -1.0165, 0.304089, -2.0218, 0.208273, 1.33956, 0.546833]\nf_10: 8650.53785 [-0.0807627, -1.01344, -1.0165, 0.304089, -2.0218, 0.208273, 1.33956, 0.496833]\nf_11: 8151.57191 [0.0543791, -1.01903, -1.0165, 0.304089, -2.0218, 0.208273, 1.33956, 0.496833]\nf_12: 8151.67196 [0.0543791, -1.01344, -1.08024, 0.304089, -2.0218, 0.208273, 1.33956, 0.496833]\nf_13: 8151.8632 [0.0543791, -1.01344, -1.0165, 0.218245, -2.0218, 0.208273, 1.33956, 0.496833]\nf_14: 8151.54498 [0.0543791, -1.01344, -1.0165, 0.304089, -2.10821, 0.208273, 1.33956, 0.496833]\nf_15: 8151.81772 [0.0543791, -1.01344, -1.0165, 0.304089, -2.0218, 0.137977, 1.33956, 0.496833]\nf_16: 8152.10285 [0.0543791, -1.01344, -1.0165, 0.304089, -2.0218, 0.208273, 1.28956, 0.496833]\nf_17: 8152.03137 [0.0543791, -1.01344, -1.0165, 0.304089, -2.0218, 0.208273, 1.33956, 0.446833]\nf_18: 8151.50037 [0.0545782, -1.01504, -1.0264, 0.313121, -2.07246, 0.203182, 1.33926, 0.500674]\nf_19: 8151.49983 [0.054508, -1.02, -1.0132, 0.312539, -2.0735, 0.204669, 1.33929, 0.497885]\nf_20: 8151.50032 [0.054517, -1.02018, -1.02354, 0.314584, -2.07166, 0.201517, 1.33882, 0.499721]\nf_21: 8151.50444 [0.0545195, -1.02059, -1.0129, 0.313297, -2.0859, 0.204346, 1.33927, 0.49798]\nf_22: 8151.49937 [0.0545436, -1.02093, -1.01601, 0.313368, -2.07208, 0.202343, 1.33887, 0.499223]\nf_23: 8151.50045 [0.0545177, -1.01994, -1.01714, 0.313572, -2.07284, 0.202423, 1.33883, 0.498984]\nf_24: 8151.50381 [0.0545532, -1.02136, -1.01598, 0.308902, -2.07501, 0.201997, 1.33883, 0.499362]\nf_25: 8151.49031 [0.0545123, -1.02098, -1.01699, 0.31816, -2.07144, 0.207295, 1.34, 0.49761]\nf_26: 8151.48235 [0.0545189, -1.02186, -1.02069, 0.324514, -2.07139, 0.212551, 1.34059, 0.49643]\nf_27: 8151.48046 [0.0545088, -1.02404, -1.02192, 0.329026, -2.07094, 0.216693, 1.34136, 0.495824]\nf_28: 8151.49589 [0.0544553, -1.02569, -1.0114, 0.319052, -2.07151, 0.229, 1.34085, 0.493857]\nf_29: 8151.48049 [0.0544842, -1.02401, -1.03039, 0.325883, -2.07585, 0.219114, 1.3435, 0.489754]\nf_30: 8151.47 [0.0545297, -1.02415, -1.0335, 0.323453, -2.07385, 0.21891, 1.34163, 0.494977]\nf_31: 8151.4656 [0.0545298, -1.02607, -1.04547, 0.323077, -2.07396, 0.223992, 1.3416, 0.496608]\nf_32: 8151.46346 [0.054515, -1.02725, -1.04366, 0.323062, -2.07649, 0.224199, 1.3424, 0.4963]\nf_33: 8151.46064 [0.0545172, -1.0296, -1.0498, 0.324585, -2.07866, 0.22663, 1.34282, 0.495188]\nf_34: 8151.45792 [0.0545172, -1.03425, -1.0543, 0.328765, -2.07886, 0.231375, 1.34301, 0.494065]\nf_35: 8151.46191 [0.0545405, -1.03411, -1.06293, 0.331515, -2.08506, 0.234, 1.34498, 0.494754]\nf_36: 8151.45368 [0.0544765, -1.03428, -1.05227, 0.331443, -2.08572, 0.230015, 1.34124, 0.493651]\nf_37: 8151.45047 [0.0545181, -1.03465, -1.05513, 0.331025, -2.08911, 0.230889, 1.3401, 0.493283]\nf_38: 8151.45792 [0.0545193, -1.03499, -1.0651, 0.330483, -2.08697, 0.233031, 1.33652, 0.491913]\nf_39: 8151.45431 [0.0546115, -1.03466, -1.05458, 0.331301, -2.08906, 0.23223, 1.34151, 0.488605]\nf_40: 8151.45292 [0.0544794, -1.03469, -1.05531, 0.323467, -2.09262, 0.229783, 1.34089, 0.492875]\nf_41: 8151.87963 [0.0512051, -1.03517, -1.05608, 0.331686, -2.09076, 0.231444, 1.34012, 0.493196]\nf_42: 8151.43234 [0.0551766, -1.03462, -1.05497, 0.329654, -2.0968, 0.232664, 1.33893, 0.494489]\nf_43: 8151.43565 [0.0552215, -1.0345, -1.05509, 0.329481, -2.11109, 0.240377, 1.33829, 0.494463]\nf_44: 8155.30807 [0.0432737, -1.03448, -1.05501, 0.328253, -2.0956, 0.234593, 1.338, 0.494402]\nf_45: 8151.43826 [0.0552043, -1.03449, -1.05376, 0.326916, -2.09543, 0.23813, 1.33689, 0.49494]\nf_46: 8151.45587 [0.0559145, -1.03484, -1.05396, 0.329706, -2.09598, 0.235786, 1.34204, 0.496884]\nf_47: 8151.43165 [0.0551981, -1.03433, -1.05689, 0.3307, -2.10156, 0.229931, 1.33696, 0.494296]\nf_48: 8151.43112 [0.0552183, -1.03484, -1.05788, 0.331358, -2.10354, 0.230467, 1.33689, 0.49547]\nf_49: 8151.43231 [0.0552073, -1.0349, -1.05349, 0.330751, -2.1076, 0.233586, 1.33741, 0.494069]\nf_50: 8151.45399 [0.0544731, -1.03496, -1.06045, 0.326005, -2.10231, 0.232486, 1.33761, 0.492848]\nf_51: 8151.43594 [0.0552048, -1.03468, -1.05685, 0.335718, -2.10875, 0.23221, 1.33744, 0.497679]\nf_52: 8151.43091 [0.0552398, -1.03539, -1.05894, 0.332055, -2.10342, 0.231034, 1.33682, 0.495435]\nf_53: 8151.43914 [0.0552268, -1.03543, -1.0567, 0.332696, -2.10198, 0.229357, 1.33354, 0.498386]\nf_54: 8151.4329 [0.0552282, -1.03536, -1.05944, 0.335579, -2.10401, 0.229742, 1.33769, 0.495134]\nf_55: 8151.43083 [0.0552882, -1.03548, -1.05867, 0.332092, -2.10469, 0.230828, 1.33626, 0.495482]\nf_56: 8151.43055 [0.0552365, -1.03549, -1.05928, 0.331588, -2.10584, 0.231298, 1.33686, 0.49603]\nf_57: 8151.43198 [0.0552411, -1.03552, -1.05942, 0.332221, -2.10659, 0.232199, 1.33602, 0.49578]\nf_58: 8151.42966 [0.0557064, -1.03553, -1.05945, 0.331719, -2.10625, 0.231169, 1.33682, 0.496094]\nf_59: 8151.42851 [0.0554528, -1.03557, -1.05986, 0.331697, -2.10594, 0.231074, 1.33687, 0.496066]\nf_60: 8151.42839 [0.0555138, -1.0356, -1.05953, 0.33188, -2.10607, 0.2312, 1.33715, 0.496169]\nf_61: 8151.46056 [0.0544336, -1.0356, -1.05938, 0.331753, -2.1064, 0.230981, 1.33709, 0.496243]\nf_62: 8151.4277 [0.0555266, -1.0356, -1.05998, 0.33156, -2.10635, 0.230942, 1.3373, 0.496239]\nf_63: 8151.42648 [0.0554859, -1.0356, -1.06048, 0.330806, -2.10719, 0.230841, 1.33784, 0.495883]\nf_64: 8151.42472 [0.0555437, -1.03561, -1.06169, 0.329449, -2.10909, 0.231155, 1.33892, 0.495714]\nf_65: 8151.42438 [0.0555745, -1.03563, -1.06189, 0.329677, -2.11233, 0.230282, 1.33909, 0.495661]\nf_66: 8151.42423 [0.0555857, -1.03575, -1.06329, 0.329038, -2.11139, 0.231788, 1.33938, 0.495889]\nf_67: 8151.42468 [0.0555866, -1.03565, -1.06386, 0.328694, -2.11339, 0.231923, 1.34035, 0.49668]\nf_68: 8151.52036 [0.0575381, -1.03578, -1.06311, 0.329412, -2.11122, 0.231281, 1.33981, 0.496044]\nf_69: 8151.42417 [0.0556593, -1.03579, -1.06285, 0.329495, -2.11129, 0.231168, 1.34004, 0.496034]\nf_70: 8151.42392 [0.0556741, -1.03583, -1.06311, 0.329496, -2.11129, 0.230856, 1.3401, 0.496087]\nf_71: 8151.42344 [0.0556728, -1.03584, -1.06307, 0.329007, -2.11147, 0.23055, 1.33986, 0.496316]\nf_72: 8151.42329 [0.0556642, -1.03584, -1.06336, 0.329126, -2.11155, 0.230107, 1.33959, 0.496462]\nf_73: 8151.4226 [0.0556962, -1.03584, -1.06341, 0.328534, -2.11161, 0.229798, 1.3396, 0.496186]\nf_74: 8151.42214 [0.0556788, -1.03586, -1.06337, 0.32789, -2.11175, 0.229521, 1.33956, 0.495996]\nf_75: 8151.42127 [0.0557001, -1.03589, -1.06384, 0.326706, -2.11175, 0.229022, 1.33996, 0.495754]\nf_76: 8151.42134 [0.0557081, -1.03591, -1.06517, 0.325026, -2.1119, 0.229019, 1.34133, 0.495869]\nf_77: 8151.42073 [0.0558933, -1.03594, -1.06329, 0.326988, -2.1118, 0.228083, 1.34016, 0.495953]\nf_78: 8151.42066 [0.0557229, -1.03602, -1.06298, 0.326817, -2.11189, 0.227221, 1.34015, 0.495874]\nf_79: 8151.42065 [0.0557173, -1.03606, -1.06324, 0.326733, -2.11236, 0.226971, 1.3401, 0.495844]\nf_80: 8151.42043 [0.0557694, -1.03603, -1.06345, 0.326995, -2.11267, 0.226739, 1.34033, 0.495984]\nf_81: 8151.42058 [0.0557613, -1.03603, -1.06325, 0.326651, -2.11314, 0.227038, 1.34038, 0.496236]\nf_82: 8151.42705 [0.0564142, -1.03603, -1.06342, 0.327487, -2.11295, 0.226829, 1.34005, 0.495978]\nf_83: 8151.42031 [0.0558631, -1.03603, -1.06336, 0.327669, -2.11298, 0.226966, 1.34017, 0.495925]\nf_84: 8151.42008 [0.0558859, -1.03607, -1.0637, 0.327563, -2.11316, 0.226736, 1.34026, 0.495989]\nf_85: 8151.42002 [0.0558764, -1.03607, -1.06381, 0.327599, -2.11298, 0.226551, 1.33994, 0.49632]\nf_86: 8151.42342 [0.0555816, -1.03608, -1.06348, 0.327662, -2.1135, 0.22619, 1.33985, 0.496281]\nf_87: 8151.41968 [0.0559332, -1.03608, -1.06386, 0.327037, -2.11334, 0.226742, 1.3398, 0.496076]\nf_88: 8151.4193 [0.0559456, -1.0361, -1.06313, 0.325843, -2.11297, 0.226822, 1.34009, 0.496043]\nf_89: 8151.41798 [0.056063, -1.03619, -1.06228, 0.324284, -2.11197, 0.225275, 1.34006, 0.495278]\nf_90: 8151.41955 [0.0560946, -1.03629, -1.06073, 0.325271, -2.11128, 0.225441, 1.34072, 0.494381]\nf_91: 8151.41829 [0.0560013, -1.03613, -1.06187, 0.324904, -2.11124, 0.225576, 1.33958, 0.495508]\nf_92: 8151.41725 [0.0560237, -1.03622, -1.06226, 0.324119, -2.11132, 0.224283, 1.34011, 0.494755]\nf_93: 8151.4173 [0.0560095, -1.03628, -1.06132, 0.323768, -2.1114, 0.224189, 1.34015, 0.494377]\nf_94: 8151.42557 [0.0554622, -1.0362, -1.0622, 0.32363, -2.11109, 0.224386, 1.34034, 0.494731]\nf_95: 8151.41725 [0.0560035, -1.03625, -1.06222, 0.324521, -2.11115, 0.224055, 1.34022, 0.494983]\nf_96: 8151.41741 [0.0561186, -1.03628, -1.06234, 0.32422, -2.11065, 0.224209, 1.33995, 0.495029]\nf_97: 8151.41726 [0.0560459, -1.03628, -1.06243, 0.324698, -2.11129, 0.22406, 1.34006, 0.494657]\nf_98: 8151.41692 [0.0560307, -1.03629, -1.06224, 0.324193, -2.11108, 0.223659, 1.34029, 0.49494]\nf_99: 8151.41676 [0.0560885, -1.03632, -1.06214, 0.323753, -2.11096, 0.223363, 1.34046, 0.494736]\nf_100: 8151.41636 [0.0560858, -1.03633, -1.06196, 0.323665, -2.11103, 0.222935, 1.34014, 0.494851]\nf_101: 8151.41587 [0.0561461, -1.03642, -1.06179, 0.323335, -2.11141, 0.222202, 1.33993, 0.494659]\nf_102: 8151.41615 [0.056164, -1.03655, -1.06077, 0.323981, -2.1098, 0.221461, 1.34075, 0.49452]\nf_103: 8151.48685 [0.0545185, -1.03641, -1.06158, 0.322679, -2.11144, 0.22187, 1.34031, 0.495063]\nf_104: 8151.41544 [0.0561525, -1.03642, -1.0615, 0.322023, -2.1117, 0.221586, 1.34031, 0.494626]\nf_105: 8151.41491 [0.0562262, -1.03648, -1.06144, 0.321169, -2.11111, 0.220881, 1.34004, 0.494419]\nf_106: 8151.41437 [0.0562815, -1.03654, -1.0603, 0.319425, -2.11078, 0.219262, 1.33991, 0.493741]\nf_107: 8151.4149 [0.0563288, -1.0367, -1.05885, 0.318641, -2.11044, 0.219879, 1.33992, 0.49421]\nf_108: 8151.41486 [0.0560723, -1.03654, -1.05998, 0.32015, -2.11031, 0.218575, 1.33954, 0.494285]\nf_109: 8151.41391 [0.0562802, -1.03656, -1.06011, 0.319748, -2.10972, 0.21824, 1.33995, 0.493773]\nf_110: 8151.41378 [0.056297, -1.0366, -1.05933, 0.319327, -2.10964, 0.217451, 1.33972, 0.493485]\nf_111: 8151.41399 [0.0562331, -1.03655, -1.05881, 0.318412, -2.1086, 0.217672, 1.33966, 0.493544]\nf_112: 8151.42906 [0.0570588, -1.03661, -1.05962, 0.318999, -2.10956, 0.217435, 1.33948, 0.493507]\nf_113: 8151.41361 [0.0562857, -1.03662, -1.05965, 0.318908, -2.10963, 0.217353, 1.33942, 0.493537]\nf_114: 8151.41363 [0.0563045, -1.0366, -1.05978, 0.318282, -2.10973, 0.217122, 1.33928, 0.493356]\nf_115: 8151.41426 [0.0561663, -1.03664, -1.05983, 0.318624, -2.10948, 0.217447, 1.33977, 0.493446]\nf_116: 8151.4138 [0.056308, -1.03664, -1.05942, 0.318636, -2.10937, 0.217414, 1.33923, 0.493239]\nf_117: 8151.41354 [0.0562762, -1.0366, -1.05983, 0.318967, -2.10945, 0.216797, 1.33931, 0.493389]\nf_118: 8151.4131 [0.0563303, -1.03662, -1.05998, 0.318764, -2.10924, 0.216421, 1.33946, 0.49368]\nf_119: 8151.41302 [0.0562673, -1.03665, -1.06058, 0.318238, -2.10895, 0.215753, 1.33978, 0.494137]\nf_120: 8151.41229 [0.0563871, -1.03672, -1.05997, 0.318098, -2.1089, 0.214878, 1.33953, 0.494105]\nf_121: 8151.4117 [0.0564758, -1.03684, -1.05871, 0.318796, -2.10933, 0.213101, 1.33941, 0.494194]\nf_122: 8151.41153 [0.0564932, -1.03689, -1.0583, 0.319119, -2.10813, 0.211011, 1.33896, 0.493345]\nf_123: 8151.41133 [0.0565833, -1.03699, -1.05719, 0.317024, -2.10771, 0.209756, 1.33863, 0.49342]\nf_124: 8151.4104 [0.0566871, -1.03709, -1.05881, 0.317071, -2.10853, 0.208503, 1.33932, 0.493672]\nf_125: 8151.40958 [0.0567574, -1.03723, -1.05924, 0.318809, -2.10918, 0.207438, 1.33968, 0.494355]\nf_126: 8151.40907 [0.0568832, -1.03754, -1.06002, 0.321422, -2.11169, 0.204906, 1.34026, 0.494674]\nf_127: 8151.40817 [0.0571325, -1.03781, -1.06046, 0.322034, -2.11042, 0.200733, 1.34057, 0.495421]\nf_128: 8151.40772 [0.0572732, -1.03803, -1.0589, 0.322074, -2.11004, 0.197259, 1.34038, 0.494812]\nf_129: 8151.40793 [0.057342, -1.03813, -1.05892, 0.322816, -2.11044, 0.196315, 1.34063, 0.495083]\nf_130: 8151.62671 [0.0600344, -1.03802, -1.05884, 0.321296, -2.11045, 0.197076, 1.34091, 0.494785]\nf_131: 8151.40736 [0.0571884, -1.03806, -1.05916, 0.322769, -2.10964, 0.197477, 1.33925, 0.494979]\nf_132: 8151.41171 [0.0575427, -1.03807, -1.05904, 0.323141, -2.10912, 0.197701, 1.3394, 0.494819]\nf_133: 8151.4074 [0.0571629, -1.03802, -1.05915, 0.322866, -2.10994, 0.197018, 1.33934, 0.494985]\nf_134: 8151.40731 [0.0571779, -1.03806, -1.05966, 0.32269, -2.10958, 0.197363, 1.33928, 0.494695]\nf_135: 8151.40725 [0.0572115, -1.03807, -1.05966, 0.322025, -2.11001, 0.197252, 1.33939, 0.494828]\nf_136: 8151.40751 [0.0570767, -1.03806, -1.05977, 0.321831, -2.10936, 0.197013, 1.33943, 0.495063]\nf_137: 8151.40711 [0.0572025, -1.03807, -1.05961, 0.321806, -2.10966, 0.196888, 1.33959, 0.495109]\nf_138: 8151.40698 [0.0572335, -1.03811, -1.05921, 0.320853, -2.10935, 0.196065, 1.3399, 0.495222]\nf_139: 8151.40699 [0.0572984, -1.03817, -1.05807, 0.318895, -2.10877, 0.194378, 1.3401, 0.495165]\nf_140: 8151.41169 [0.0576263, -1.0382, -1.0591, 0.320742, -2.10901, 0.196797, 1.33998, 0.49536]\nf_141: 8151.4069 [0.05727, -1.03814, -1.05895, 0.320282, -2.10912, 0.194842, 1.33994, 0.495215]\nf_142: 8151.40674 [0.0573619, -1.03827, -1.05885, 0.320452, -2.10896, 0.192601, 1.34006, 0.49527]\nf_143: 8151.4066 [0.0575386, -1.03856, -1.0599, 0.322492, -2.10917, 0.188817, 1.33981, 0.495251]\nf_144: 8151.40665 [0.0575904, -1.03859, -1.05903, 0.320773, -2.10877, 0.187293, 1.34019, 0.495207]\nf_145: 8151.40765 [0.0574015, -1.03853, -1.06164, 0.321666, -2.10845, 0.188601, 1.34024, 0.49584]\nf_146: 8151.40661 [0.057589, -1.03862, -1.05975, 0.321385, -2.10876, 0.187637, 1.34024, 0.495762]\nf_147: 8151.40674 [0.0575377, -1.03855, -1.06006, 0.32191, -2.10972, 0.188662, 1.33915, 0.495433]\nf_148: 8151.40658 [0.0575448, -1.03856, -1.05979, 0.322005, -2.10866, 0.188059, 1.33931, 0.49538]\nf_149: 8151.40752 [0.0573726, -1.03859, -1.05969, 0.321926, -2.10835, 0.188432, 1.33917, 0.495451]\nf_150: 8151.40655 [0.057563, -1.03858, -1.05989, 0.32173, -2.10902, 0.188179, 1.33964, 0.495431]\nf_151: 8151.40661 [0.0575638, -1.0386, -1.06001, 0.32248, -2.1092, 0.188177, 1.33959, 0.495551]\nf_152: 8151.45356 [0.0589027, -1.03859, -1.05989, 0.321721, -2.10895, 0.188237, 1.33962, 0.49543]\nf_153: 8151.40643 [0.0575692, -1.03858, -1.05979, 0.321417, -2.10853, 0.188614, 1.33946, 0.495415]\nf_154: 8151.40657 [0.0575383, -1.03854, -1.05904, 0.321323, -2.10864, 0.189095, 1.33891, 0.495092]\nf_155: 8151.40645 [0.0575676, -1.03855, -1.05974, 0.321525, -2.10857, 0.189182, 1.33946, 0.495378]\nf_156: 8151.40646 [0.0575754, -1.03858, -1.06022, 0.321916, -2.10855, 0.188667, 1.33926, 0.495335]\nf_157: 8151.40711 [0.0577117, -1.03859, -1.05957, 0.321193, -2.10863, 0.189045, 1.33975, 0.495503]\nf_158: 8151.40643 [0.0575682, -1.03856, -1.05971, 0.320803, -2.10822, 0.188379, 1.33941, 0.495574]\nf_159: 8151.40641 [0.057573, -1.03857, -1.05974, 0.321202, -2.10832, 0.188385, 1.33948, 0.495472]\nf_160: 8151.40636 [0.0575827, -1.0386, -1.05946, 0.320855, -2.10786, 0.188113, 1.33954, 0.495533]\nf_161: 8151.40636 [0.0576125, -1.03864, -1.05914, 0.320138, -2.10746, 0.187101, 1.33963, 0.495392]\nf_162: 8151.40649 [0.0576417, -1.0386, -1.05941, 0.320337, -2.10836, 0.188109, 1.3394, 0.495496]\nf_163: 8151.40642 [0.0575837, -1.03859, -1.05906, 0.320529, -2.10802, 0.188013, 1.3398, 0.495696]\nf_164: 8151.40636 [0.0576008, -1.0386, -1.05924, 0.320774, -2.1078, 0.188064, 1.33947, 0.495502]\nf_165: 8151.40636 [0.0575887, -1.03861, -1.05932, 0.320704, -2.10787, 0.187979, 1.33961, 0.495384]\nf_166: 8151.40694 [0.0574412, -1.03861, -1.05926, 0.32059, -2.10775, 0.18795, 1.3396, 0.495379]\nf_167: 8151.40636 [0.0575887, -1.03861, -1.05931, 0.32064, -2.10785, 0.187928, 1.33956, 0.495485]\nf_168: 8151.40635 [0.0575887, -1.03861, -1.0593, 0.320673, -2.10783, 0.187995, 1.33958, 0.495367]\nf_169: 8151.40634 [0.0575852, -1.03861, -1.05929, 0.320654, -2.10776, 0.188017, 1.33958, 0.49537]\nf_170: 8151.40632 [0.0575869, -1.03861, -1.05927, 0.3206, -2.10763, 0.188074, 1.33959, 0.495387]\nf_171: 8151.4063 [0.0575838, -1.03862, -1.05924, 0.320448, -2.10736, 0.188128, 1.33962, 0.495444]\nf_172: 8151.40629 [0.0575869, -1.03862, -1.05911, 0.319978, -2.10698, 0.18803, 1.33971, 0.495549]\nf_173: 8151.40632 [0.0576007, -1.03864, -1.05891, 0.31986, -2.1072, 0.187765, 1.33979, 0.495373]\nf_174: 8151.40742 [0.0573775, -1.03863, -1.05923, 0.319999, -2.10698, 0.188027, 1.33983, 0.495579]\nf_175: 8151.40629 [0.0575822, -1.03863, -1.05923, 0.320093, -2.10692, 0.18805, 1.33984, 0.495594]\nf_176: 8151.40661 [0.0574673, -1.03863, -1.05914, 0.320151, -2.10688, 0.188047, 1.33987, 0.495624]\nf_177: 8151.40628 [0.0575768, -1.03863, -1.05919, 0.320162, -2.10692, 0.188086, 1.33979, 0.495656]\nf_178: 8151.40628 [0.0575741, -1.03862, -1.05915, 0.320249, -2.10687, 0.188128, 1.33978, 0.49564]\nf_179: 8151.40628 [0.0575692, -1.03862, -1.05908, 0.320304, -2.10691, 0.188177, 1.33979, 0.495657]\nf_180: 8151.40627 [0.0575692, -1.03863, -1.05914, 0.320215, -2.10681, 0.188096, 1.33978, 0.495644]\nf_181: 8151.40627 [0.0575733, -1.03863, -1.05914, 0.320266, -2.10677, 0.188059, 1.33976, 0.495629]\nf_182: 8151.40625 [0.057571, -1.03863, -1.05915, 0.320351, -2.10667, 0.188035, 1.33974, 0.495589]\nf_183: 8151.40622 [0.0575741, -1.03864, -1.05915, 0.320467, -2.10652, 0.188084, 1.33968, 0.495492]\nf_184: 8151.40619 [0.0575695, -1.03865, -1.05929, 0.320765, -2.10617, 0.187931, 1.33944, 0.495443]\nf_185: 8151.40619 [0.0575695, -1.03867, -1.05942, 0.320759, -2.10594, 0.188178, 1.33918, 0.49534]\nf_186: 8151.40621 [0.0575797, -1.03867, -1.0594, 0.320767, -2.10577, 0.188251, 1.33919, 0.495504]\nf_187: 8151.40618 [0.0575708, -1.03867, -1.05926, 0.321004, -2.10591, 0.188136, 1.33923, 0.495348]\nf_188: 8151.40617 [0.0575732, -1.03868, -1.05934, 0.32104, -2.10582, 0.187935, 1.33934, 0.495326]\nf_189: 8151.40616 [0.0575754, -1.03869, -1.0592, 0.321049, -2.10585, 0.187797, 1.33941, 0.495358]\nf_190: 8151.40616 [0.0575808, -1.03868, -1.0592, 0.321171, -2.10577, 0.187642, 1.33954, 0.495311]\nf_191: 8151.40757 [0.0573402, -1.03869, -1.05921, 0.321017, -2.10586, 0.187746, 1.33939, 0.49537]\nf_192: 8151.40616 [0.0575679, -1.03869, -1.05927, 0.321096, -2.10595, 0.187799, 1.33944, 0.495396]\nf_193: 8151.40616 [0.0575684, -1.03869, -1.05928, 0.321103, -2.10602, 0.187795, 1.33946, 0.495405]\nf_194: 8151.40616 [0.0575714, -1.03869, -1.05928, 0.321039, -2.1059, 0.187784, 1.33946, 0.495403]\nf_195: 8151.40616 [0.0575705, -1.03869, -1.05927, 0.321052, -2.10586, 0.187739, 1.33944, 0.495396]\nf_196: 8151.40615 [0.0575739, -1.0387, -1.05925, 0.321051, -2.10583, 0.187764, 1.33947, 0.49537]\nf_197: 8151.40614 [0.0575685, -1.0387, -1.05922, 0.321075, -2.10571, 0.187801, 1.33952, 0.495354]\nf_198: 8151.40614 [0.0575687, -1.0387, -1.05921, 0.321136, -2.10543, 0.187832, 1.33962, 0.495364]\nf_199: 8151.40614 [0.057573, -1.0387, -1.0592, 0.321038, -2.10535, 0.187764, 1.33959, 0.495341]\nf_200: 8151.40613 [0.0575662, -1.03871, -1.05922, 0.321029, -2.10536, 0.18779, 1.33962, 0.495267]\nf_201: 8151.40613 [0.057571, -1.03871, -1.05921, 0.321097, -2.10532, 0.187685, 1.33961, 0.495272]\nf_202: 8151.40613 [0.0575647, -1.03871, -1.05922, 0.321058, -2.1053, 0.187813, 1.33962, 0.495263]\nf_203: 8151.40612 [0.0575646, -1.03871, -1.05923, 0.321043, -2.10524, 0.187852, 1.3396, 0.49527]\nf_204: 8151.40612 [0.0575608, -1.03871, -1.05919, 0.321065, -2.1052, 0.187886, 1.3396, 0.495258]\nf_205: 8151.40612 [0.0575605, -1.03871, -1.05921, 0.32106, -2.10514, 0.187913, 1.33962, 0.495262]\nf_206: 8151.40623 [0.0576134, -1.03871, -1.05919, 0.321113, -2.1052, 0.187902, 1.3396, 0.495288]\nf_207: 8151.40612 [0.0575537, -1.0387, -1.05921, 0.321067, -2.10518, 0.187867, 1.33958, 0.495229]\nf_208: 8151.40612 [0.0575671, -1.03871, -1.05919, 0.321102, -2.10514, 0.187881, 1.33959, 0.495247]\nf_209: 8151.40612 [0.0575531, -1.03871, -1.05917, 0.321001, -2.10516, 0.187864, 1.33961, 0.495254]\nf_210: 8151.40611 [0.05755, -1.03871, -1.05915, 0.32102, -2.10512, 0.187877, 1.3396, 0.495285]\nf_211: 8151.40611 [0.0575514, -1.03871, -1.05915, 0.320987, -2.10507, 0.187872, 1.33959, 0.495281]\nf_212: 8151.40611 [0.0575494, -1.03872, -1.05913, 0.320997, -2.10502, 0.187882, 1.33959, 0.495288]\nf_213: 8151.4061 [0.0575524, -1.03873, -1.05914, 0.320982, -2.10491, 0.187861, 1.33957, 0.495278]\nf_214: 8151.40609 [0.0575481, -1.03873, -1.05912, 0.320984, -2.10482, 0.187888, 1.33955, 0.495308]\nf_215: 8151.40609 [0.0575444, -1.03875, -1.05917, 0.320865, -2.10456, 0.187902, 1.33959, 0.495298]\nf_216: 8151.40608 [0.0575342, -1.03876, -1.05903, 0.321038, -2.1045, 0.187935, 1.3395, 0.495251]\nf_217: 8151.40607 [0.0575464, -1.03878, -1.0591, 0.320965, -2.10446, 0.187953, 1.33947, 0.49525]\nf_218: 8151.40607 [0.057538, -1.03878, -1.05906, 0.320971, -2.10413, 0.188014, 1.33949, 0.495242]\nf_219: 8151.40608 [0.0575572, -1.03878, -1.05915, 0.321034, -2.10442, 0.187859, 1.33944, 0.49528]\nf_220: 8151.40606 [0.0575534, -1.03878, -1.05901, 0.320914, -2.10447, 0.187898, 1.3395, 0.495254]\nf_221: 8151.40637 [0.0574342, -1.03878, -1.05902, 0.320917, -2.10445, 0.187884, 1.33952, 0.49525]\nf_222: 8151.40606 [0.0575421, -1.03878, -1.05902, 0.320961, -2.10446, 0.187888, 1.33954, 0.495237]\nf_223: 8151.40606 [0.0575395, -1.03878, -1.059, 0.320957, -2.10443, 0.187846, 1.33951, 0.495217]\nf_224: 8151.40606 [0.0575504, -1.03878, -1.05901, 0.320959, -2.1044, 0.187894, 1.33954, 0.495231]\nf_225: 8151.40606 [0.0575399, -1.03878, -1.05899, 0.320993, -2.10446, 0.187881, 1.33953, 0.495273]\nf_226: 8151.40606 [0.0575432, -1.03879, -1.05899, 0.320941, -2.10444, 0.187836, 1.33953, 0.495276]\nf_227: 8151.40606 [0.0575209, -1.03879, -1.05901, 0.320971, -2.10446, 0.187914, 1.3395, 0.49527]\nf_228: 8151.40605 [0.0575428, -1.03879, -1.05898, 0.320981, -2.10448, 0.187898, 1.3395, 0.495252]\nf_229: 8151.40605 [0.0575411, -1.03879, -1.05901, 0.320991, -2.10447, 0.18792, 1.33948, 0.495258]\nf_230: 8151.40605 [0.0575418, -1.03879, -1.05897, 0.320949, -2.10444, 0.187947, 1.33948, 0.495275]\nf_231: 8151.40605 [0.0575404, -1.0388, -1.05896, 0.320901, -2.10441, 0.187952, 1.33947, 0.495286]\nf_232: 8151.40604 [0.0575332, -1.0388, -1.05893, 0.320885, -2.10431, 0.187986, 1.33946, 0.495314]\nf_233: 8151.40603 [0.0575351, -1.03882, -1.05884, 0.320773, -2.10412, 0.187986, 1.33944, 0.495319]\nf_234: 8151.40602 [0.0575322, -1.03883, -1.05878, 0.320796, -2.10403, 0.18815, 1.33941, 0.495287]\nf_235: 8151.406 [0.0575229, -1.03886, -1.05854, 0.320718, -2.10375, 0.188408, 1.33934, 0.495254]\nf_236: 8151.40599 [0.0575106, -1.03893, -1.05828, 0.320637, -2.10305, 0.188364, 1.33925, 0.49505]\nf_237: 8151.40601 [0.0575272, -1.03899, -1.05838, 0.320265, -2.10267, 0.187835, 1.33917, 0.495406]\nf_238: 8151.40602 [0.0575058, -1.03892, -1.05841, 0.320669, -2.10271, 0.188455, 1.33927, 0.49513]\nf_239: 8151.40598 [0.0575103, -1.03895, -1.05827, 0.320331, -2.10313, 0.188673, 1.33924, 0.495281]\nf_240: 8151.40599 [0.0574946, -1.03894, -1.05825, 0.320176, -2.10308, 0.189172, 1.33925, 0.495418]\nf_241: 8151.40633 [0.0575992, -1.03895, -1.05831, 0.320566, -2.10321, 0.188712, 1.33912, 0.495317]\nf_242: 8151.40597 [0.0575054, -1.03894, -1.05818, 0.320207, -2.10307, 0.188631, 1.3394, 0.495281]\nf_243: 8151.40599 [0.0575039, -1.03894, -1.05814, 0.319971, -2.10289, 0.188645, 1.33931, 0.495254]\nf_244: 8151.4072 [0.0577, -1.03895, -1.05823, 0.320198, -2.10306, 0.188654, 1.33943, 0.495248]\nf_245: 8151.40596 [0.0574878, -1.03894, -1.05811, 0.320248, -2.10305, 0.188602, 1.33935, 0.495333]\nf_246: 8151.40598 [0.0574546, -1.03895, -1.05808, 0.320279, -2.10303, 0.18863, 1.33935, 0.495314]\nf_247: 8151.40596 [0.0574846, -1.03894, -1.05814, 0.320218, -2.10303, 0.188615, 1.33934, 0.495297]\nf_248: 8151.40596 [0.0574865, -1.03895, -1.05808, 0.32023, -2.10301, 0.188621, 1.33935, 0.495336]\nf_249: 8151.40595 [0.0574828, -1.03895, -1.05811, 0.320222, -2.10305, 0.188656, 1.33937, 0.49535]\nf_250: 8151.40595 [0.0574845, -1.03895, -1.05814, 0.320218, -2.10303, 0.188652, 1.3394, 0.495359]\nf_251: 8151.40601 [0.0574381, -1.03895, -1.05812, 0.320257, -2.10307, 0.18864, 1.33936, 0.495342]\nf_252: 8151.40595 [0.0574866, -1.03895, -1.05811, 0.320186, -2.10311, 0.18865, 1.33939, 0.495342]\nf_253: 8151.40594 [0.0574894, -1.03896, -1.0581, 0.320136, -2.10322, 0.188657, 1.3394, 0.495333]\nf_254: 8151.40592 [0.0574977, -1.03898, -1.05814, 0.32014, -2.10338, 0.188707, 1.33936, 0.495306]\nf_255: 8151.4059 [0.0575052, -1.03899, -1.05824, 0.320086, -2.1036, 0.188669, 1.33943, 0.495229]\nf_256: 8151.4059 [0.0575097, -1.039, -1.05833, 0.320207, -2.10371, 0.188749, 1.33931, 0.495244]\nf_257: 8151.4059 [0.0575182, -1.03901, -1.05835, 0.320232, -2.10378, 0.188745, 1.33939, 0.495097]\nf_258: 8151.40589 [0.0575274, -1.03901, -1.05837, 0.32026, -2.10408, 0.188678, 1.33937, 0.495155]\nf_259: 8151.40589 [0.0575478, -1.03902, -1.05854, 0.320675, -2.10448, 0.188468, 1.33932, 0.495085]\nf_260: 8151.40587 [0.0575278, -1.03903, -1.05835, 0.320214, -2.10412, 0.188705, 1.33937, 0.495146]\nf_261: 8151.40588 [0.0575311, -1.03903, -1.05831, 0.319953, -2.10423, 0.188831, 1.33937, 0.495102]\nf_262: 8151.40627 [0.0573776, -1.03903, -1.05831, 0.320246, -2.10416, 0.188728, 1.33942, 0.495194]\nf_263: 8151.40585 [0.0575057, -1.03903, -1.05831, 0.320285, -2.10415, 0.188779, 1.33942, 0.495185]\nf_264: 8151.40585 [0.0574974, -1.03903, -1.05821, 0.320299, -2.1042, 0.188733, 1.3394, 0.495181]\nf_265: 8151.40588 [0.0575388, -1.03903, -1.0582, 0.320292, -2.10422, 0.188703, 1.33943, 0.495173]\nf_266: 8151.40584 [0.0575023, -1.03903, -1.05821, 0.320315, -2.10425, 0.188744, 1.33939, 0.495206]\nf_267: 8151.40584 [0.057501, -1.03903, -1.05821, 0.32033, -2.10429, 0.188749, 1.33938, 0.495182]\nf_268: 8151.40584 [0.0575041, -1.03904, -1.05821, 0.32032, -2.10434, 0.188747, 1.33938, 0.4952]\nf_269: 8151.40583 [0.0575036, -1.03904, -1.05822, 0.32037, -2.10441, 0.188756, 1.33938, 0.4952]\nf_270: 8151.40583 [0.0575069, -1.03904, -1.05822, 0.320436, -2.10453, 0.188761, 1.33935, 0.495179]\nf_271: 8151.40582 [0.0575065, -1.03905, -1.0582, 0.320482, -2.10457, 0.188738, 1.33939, 0.495186]\nf_272: 8151.40581 [0.0575116, -1.03907, -1.05813, 0.320482, -2.10473, 0.188675, 1.33941, 0.495208]\nf_273: 8151.4058 [0.0575236, -1.03911, -1.05823, 0.320371, -2.10511, 0.188573, 1.33943, 0.495206]\nf_274: 8151.40578 [0.057523, -1.03914, -1.05821, 0.320017, -2.10502, 0.188665, 1.33942, 0.495122]\nf_275: 8151.4058 [0.0575306, -1.03915, -1.05845, 0.319503, -2.10523, 0.188706, 1.33945, 0.49523]\nf_276: 8151.4066 [0.0576863, -1.03914, -1.05828, 0.320169, -2.10503, 0.188855, 1.33945, 0.495206]\nf_277: 8151.40579 [0.0575193, -1.03914, -1.0582, 0.320056, -2.10513, 0.188746, 1.33954, 0.494988]\nf_278: 8151.40693 [0.0577267, -1.03914, -1.05825, 0.320045, -2.10498, 0.188619, 1.33941, 0.495085]\nf_279: 8151.40577 [0.0575198, -1.03915, -1.05813, 0.320047, -2.10506, 0.188693, 1.33948, 0.495132]\nf_280: 8151.40578 [0.0575128, -1.03915, -1.05806, 0.320063, -2.10509, 0.188702, 1.33943, 0.495083]\nf_281: 8151.40589 [0.0574527, -1.03915, -1.05815, 0.320094, -2.10505, 0.188685, 1.33948, 0.495129]\nf_282: 8151.40577 [0.057517, -1.03915, -1.05813, 0.32009, -2.10503, 0.18867, 1.33949, 0.495122]\nf_283: 8151.40577 [0.0575204, -1.03915, -1.05815, 0.320125, -2.10508, 0.188655, 1.33948, 0.495122]\nf_284: 8151.40576 [0.0575181, -1.03916, -1.05816, 0.320174, -2.10506, 0.188667, 1.33948, 0.495112]\nf_285: 8151.40576 [0.0575182, -1.03917, -1.05819, 0.320226, -2.10505, 0.188701, 1.33947, 0.495072]\nf_286: 8151.40575 [0.0575201, -1.03918, -1.05825, 0.320257, -2.10517, 0.188676, 1.33947, 0.494996]\nf_287: 8151.40574 [0.0575252, -1.03919, -1.05827, 0.320524, -2.1053, 0.188566, 1.33945, 0.495035]\nf_288: 8151.40574 [0.0575337, -1.03919, -1.05828, 0.32066, -2.10536, 0.188353, 1.33946, 0.495116]\nf_289: 8151.40575 [0.0575332, -1.03919, -1.05827, 0.320956, -2.10552, 0.188291, 1.33945, 0.495112]\nf_290: 8151.40579 [0.0574983, -1.03919, -1.05826, 0.320601, -2.10549, 0.188344, 1.3395, 0.49513]\nf_291: 8151.40574 [0.0575304, -1.0392, -1.05832, 0.320711, -2.10524, 0.188378, 1.33943, 0.495123]\nf_292: 8151.40573 [0.0575268, -1.03921, -1.05839, 0.320804, -2.10507, 0.188255, 1.3394, 0.495093]\nf_293: 8151.40574 [0.0575354, -1.03922, -1.05852, 0.320843, -2.10524, 0.188106, 1.33938, 0.495141]\nf_294: 8151.40609 [0.0576498, -1.03921, -1.05844, 0.320833, -2.10501, 0.188225, 1.33938, 0.495124]\nf_295: 8151.40573 [0.0575302, -1.03921, -1.05843, 0.320872, -2.10498, 0.18825, 1.33941, 0.495151]\nf_296: 8151.40573 [0.0575297, -1.03921, -1.05843, 0.320878, -2.105, 0.188243, 1.33941, 0.495152]\nf_297: 8151.40573 [0.0575347, -1.03921, -1.05842, 0.320887, -2.10499, 0.188247, 1.33937, 0.49516]\nf_298: 8151.40572 [0.0575296, -1.03922, -1.05843, 0.320944, -2.10499, 0.188221, 1.33941, 0.495149]\nf_299: 8151.40572 [0.0575336, -1.03922, -1.05846, 0.320925, -2.10497, 0.188245, 1.3394, 0.49513]\nf_300: 8151.40572 [0.0575304, -1.03922, -1.05845, 0.320885, -2.10495, 0.188223, 1.3394, 0.495129]\nf_301: 8151.40571 [0.0575331, -1.03923, -1.05845, 0.320876, -2.10496, 0.188263, 1.33939, 0.495131]\nf_302: 8151.40571 [0.0575195, -1.03924, -1.05844, 0.320845, -2.10498, 0.188331, 1.33939, 0.495117]\nf_303: 8151.4057 [0.0575306, -1.03925, -1.05842, 0.320803, -2.10499, 0.18839, 1.3394, 0.495118]\nf_304: 8151.40569 [0.0575254, -1.03926, -1.05839, 0.320634, -2.105, 0.188493, 1.33939, 0.495072]\nf_305: 8151.40567 [0.0575245, -1.03927, -1.05822, 0.320582, -2.10511, 0.188621, 1.33944, 0.495109]\nf_306: 8151.40567 [0.057518, -1.03927, -1.0581, 0.320423, -2.10502, 0.188807, 1.3395, 0.495126]\nf_307: 8151.40568 [0.057515, -1.03927, -1.05791, 0.320269, -2.10512, 0.188855, 1.33954, 0.495098]\nf_308: 8151.40566 [0.0575164, -1.03928, -1.05809, 0.320365, -2.10496, 0.188864, 1.3395, 0.495128]\nf_309: 8151.40566 [0.0575132, -1.03929, -1.05813, 0.320338, -2.10504, 0.188922, 1.33945, 0.49513]\nf_310: 8151.40565 [0.0575161, -1.03929, -1.05817, 0.320301, -2.105, 0.188882, 1.3395, 0.495135]\nf_311: 8151.40565 [0.0575146, -1.0393, -1.05819, 0.32028, -2.10496, 0.188887, 1.33943, 0.495136]\nf_312: 8151.40564 [0.05751, -1.03931, -1.05821, 0.320361, -2.10494, 0.188941, 1.33948, 0.495102]\nf_313: 8151.40563 [0.0575109, -1.03932, -1.05821, 0.320401, -2.10493, 0.188981, 1.33944, 0.495101]\nf_314: 8151.40563 [0.0575134, -1.03933, -1.05819, 0.320427, -2.10487, 0.189017, 1.33948, 0.494982]\nf_315: 8151.40561 [0.057504, -1.03935, -1.05827, 0.320449, -2.10476, 0.189118, 1.33944, 0.495026]\nf_316: 8151.40558 [0.0575108, -1.03939, -1.05837, 0.320442, -2.10476, 0.189262, 1.33939, 0.495086]\nf_317: 8151.40553 [0.057519, -1.03945, -1.05901, 0.320295, -2.10521, 0.189393, 1.33946, 0.495148]\nf_318: 8151.40551 [0.0575408, -1.03951, -1.05951, 0.320734, -2.10565, 0.189097, 1.33955, 0.495383]\nf_319: 8151.40555 [0.0575464, -1.03954, -1.0603, 0.320019, -2.10554, 0.189165, 1.33955, 0.495287]\nf_320: 8151.41105 [0.0579784, -1.03951, -1.05955, 0.320916, -2.1057, 0.189125, 1.33964, 0.49511]\nf_321: 8151.40554 [0.0575446, -1.03952, -1.05936, 0.320444, -2.10567, 0.189242, 1.33938, 0.495652]\nf_322: 8151.40835 [0.0572029, -1.03952, -1.05952, 0.3208, -2.10577, 0.18924, 1.33952, 0.495332]\nf_323: 8151.4055 [0.0575315, -1.03952, -1.05946, 0.320746, -2.10577, 0.189303, 1.33946, 0.495386]\nf_324: 8151.40549 [0.0575219, -1.03953, -1.05934, 0.320651, -2.10572, 0.18927, 1.33957, 0.495359]\nf_325: 8151.40548 [0.0575198, -1.03954, -1.05929, 0.320672, -2.10556, 0.189287, 1.33943, 0.495367]\nf_326: 8151.40546 [0.0575086, -1.03955, -1.05919, 0.320655, -2.10547, 0.189446, 1.33949, 0.495412]\nf_327: 8151.40545 [0.0575184, -1.03956, -1.05903, 0.320504, -2.10559, 0.18942, 1.33946, 0.495375]\nf_328: 8151.40544 [0.0575052, -1.03958, -1.05895, 0.320399, -2.10552, 0.189563, 1.33951, 0.49545]\nf_329: 8151.40543 [0.0574966, -1.03958, -1.05881, 0.32063, -2.10553, 0.189639, 1.33946, 0.495392]\nf_330: 8151.40542 [0.0574951, -1.03959, -1.05874, 0.320652, -2.10531, 0.189554, 1.33944, 0.495302]\nf_331: 8151.40541 [0.0574858, -1.0396, -1.05862, 0.320799, -2.10524, 0.189653, 1.33939, 0.495303]\nf_332: 8151.4054 [0.0574818, -1.03962, -1.05845, 0.320885, -2.10528, 0.189736, 1.33942, 0.49524]\nf_333: 8151.40538 [0.05747, -1.03965, -1.0581, 0.320922, -2.10517, 0.189812, 1.33937, 0.495272]\nf_334: 8151.40536 [0.0574516, -1.03971, -1.05749, 0.321331, -2.10524, 0.19004, 1.33936, 0.495184]\nf_335: 8151.40529 [0.0574442, -1.03977, -1.05769, 0.320579, -2.1049, 0.190371, 1.33931, 0.495173]\nf_336: 8151.40526 [0.0574303, -1.0399, -1.05833, 0.319197, -2.10477, 0.191228, 1.33927, 0.494999]\nf_337: 8151.4051 [0.0574263, -1.04005, -1.0586, 0.32051, -2.10534, 0.191416, 1.33925, 0.495066]\nf_338: 8151.40499 [0.0573845, -1.04037, -1.05848, 0.318815, -2.10505, 0.192642, 1.33908, 0.495279]\nf_339: 8151.40499 [0.0573599, -1.04064, -1.05907, 0.321325, -2.10491, 0.193721, 1.33913, 0.494082]\nf_340: 8151.41729 [0.0567702, -1.04039, -1.05841, 0.318421, -2.10534, 0.191675, 1.33982, 0.494969]\nf_341: 8151.40486 [0.0574029, -1.04048, -1.05894, 0.319766, -2.10654, 0.193344, 1.33945, 0.495048]\nf_342: 8151.40482 [0.0574063, -1.04058, -1.06049, 0.319879, -2.10598, 0.193184, 1.33932, 0.494794]\nf_343: 8151.40471 [0.0573652, -1.04071, -1.05923, 0.320286, -2.10628, 0.193875, 1.33922, 0.494896]\nf_344: 8151.4046 [0.0573024, -1.04103, -1.05891, 0.319194, -2.10563, 0.19547, 1.33921, 0.494788]\nf_345: 8151.40446 [0.0572865, -1.04137, -1.05952, 0.320231, -2.10626, 0.196091, 1.33903, 0.494467]\nf_346: 8151.40444 [0.0572809, -1.04137, -1.05952, 0.320115, -2.10629, 0.196262, 1.33912, 0.494504]\nf_347: 8151.40445 [0.0572431, -1.0416, -1.05953, 0.318769, -2.10585, 0.197444, 1.33907, 0.49443]\nf_348: 8151.44643 [0.0559843, -1.04134, -1.05999, 0.320686, -2.10626, 0.197631, 1.3381, 0.494493]\nf_349: 8151.40477 [0.057247, -1.04143, -1.06076, 0.321127, -2.10608, 0.197191, 1.3385, 0.494147]\nf_350: 8151.41786 [0.0565672, -1.04138, -1.05973, 0.320406, -2.10554, 0.196118, 1.33925, 0.495042]\nf_351: 8151.40455 [0.0572709, -1.04137, -1.05949, 0.319789, -2.1075, 0.196732, 1.33907, 0.494436]\nf_352: 8151.42562 [0.0581498, -1.04137, -1.05946, 0.320178, -2.1063, 0.196326, 1.33901, 0.494703]\nf_353: 8151.4045 [0.0572547, -1.04137, -1.05935, 0.320182, -2.10634, 0.196544, 1.33883, 0.494624]\nf_354: 8151.40448 [0.0572449, -1.04137, -1.05969, 0.319919, -2.10632, 0.196228, 1.33905, 0.494545]\nf_355: 8151.40442 [0.0572786, -1.04138, -1.05948, 0.320136, -2.10651, 0.196159, 1.33921, 0.494503]\nf_356: 8151.40441 [0.0572876, -1.0414, -1.0595, 0.320174, -2.1066, 0.196021, 1.33928, 0.494443]\nf_357: 8151.40437 [0.0572883, -1.0414, -1.05936, 0.320111, -2.10666, 0.195908, 1.33932, 0.494575]\nf_358: 8151.40435 [0.0573047, -1.0414, -1.05906, 0.319886, -2.10667, 0.195529, 1.33943, 0.494607]\nf_359: 8151.4043 [0.0573152, -1.04141, -1.05914, 0.32021, -2.10685, 0.195154, 1.33952, 0.494781]\nf_360: 8151.40429 [0.0573274, -1.04143, -1.05902, 0.320402, -2.10706, 0.194785, 1.33966, 0.494842]\nf_361: 8151.4043 [0.0573434, -1.0414, -1.05913, 0.32021, -2.10703, 0.194471, 1.33984, 0.494924]\nf_362: 8151.40427 [0.057339, -1.04145, -1.05903, 0.320443, -2.10709, 0.19485, 1.33966, 0.494839]\nf_363: 8151.40426 [0.0573387, -1.04146, -1.05917, 0.3203, -2.10712, 0.194789, 1.33959, 0.49487]\nf_364: 8151.40426 [0.0573331, -1.04147, -1.05923, 0.320168, -2.10721, 0.194884, 1.33966, 0.49491]\nf_365: 8151.40438 [0.0572807, -1.04147, -1.05916, 0.320113, -2.10733, 0.194888, 1.33965, 0.494889]\nf_366: 8151.40424 [0.0573334, -1.04148, -1.05926, 0.320208, -2.10706, 0.194865, 1.33967, 0.494917]\nf_367: 8151.40423 [0.0573396, -1.04148, -1.05935, 0.320311, -2.10708, 0.194855, 1.33963, 0.49493]\nf_368: 8151.40422 [0.0573426, -1.04149, -1.05938, 0.320326, -2.10704, 0.1948, 1.33956, 0.494929]\nf_369: 8151.40421 [0.0573427, -1.0415, -1.05949, 0.320548, -2.10701, 0.194728, 1.33951, 0.494937]\nf_370: 8151.40422 [0.0573336, -1.04151, -1.05968, 0.320945, -2.10735, 0.194725, 1.33945, 0.495106]\nf_371: 8151.40749 [0.0576927, -1.0415, -1.05934, 0.320552, -2.10709, 0.194786, 1.33952, 0.494973]\nf_372: 8151.40422 [0.0573406, -1.04151, -1.0595, 0.320574, -2.10713, 0.19482, 1.33948, 0.49483]\nf_373: 8151.4042 [0.0573464, -1.0415, -1.05944, 0.320526, -2.10705, 0.194631, 1.33955, 0.494968]\nf_374: 8151.40419 [0.0573497, -1.0415, -1.05942, 0.320499, -2.10701, 0.194644, 1.33952, 0.49505]\nf_375: 8151.40418 [0.0573551, -1.04151, -1.05944, 0.32045, -2.10697, 0.194588, 1.33951, 0.495099]\nf_376: 8151.40416 [0.0573568, -1.04152, -1.05954, 0.320298, -2.10691, 0.194494, 1.33954, 0.495147]\nf_377: 8151.40415 [0.0573559, -1.04154, -1.05951, 0.320328, -2.10677, 0.194379, 1.33948, 0.495197]\nf_378: 8151.40412 [0.0573591, -1.04157, -1.05943, 0.320428, -2.10658, 0.193994, 1.33944, 0.495282]\nf_379: 8151.40411 [0.05737, -1.04156, -1.05906, 0.320992, -2.10595, 0.19323, 1.33942, 0.4954]\nf_380: 8151.40411 [0.0573867, -1.04156, -1.0588, 0.320638, -2.10605, 0.193232, 1.33957, 0.495556]\nf_381: 8151.40411 [0.057385, -1.04158, -1.0586, 0.32094, -2.10627, 0.192982, 1.33968, 0.495473]\nf_382: 8151.40411 [0.0573949, -1.04155, -1.05875, 0.320745, -2.10606, 0.192991, 1.3396, 0.495621]\nf_383: 8151.40409 [0.0573742, -1.04157, -1.05871, 0.320607, -2.10583, 0.193212, 1.33958, 0.495443]\nf_384: 8151.4041 [0.0573623, -1.04158, -1.05854, 0.32073, -2.1058, 0.193266, 1.33951, 0.495485]\nf_385: 8151.40416 [0.0574396, -1.04157, -1.05875, 0.320654, -2.10578, 0.193242, 1.33964, 0.495483]\nf_386: 8151.4041 [0.0573618, -1.04157, -1.05875, 0.320656, -2.10578, 0.193249, 1.33964, 0.495485]\nf_387: 8151.40411 [0.0573615, -1.04157, -1.05869, 0.320614, -2.10583, 0.193161, 1.33959, 0.495455]\nf_388: 8151.40409 [0.0573865, -1.04157, -1.05869, 0.320591, -2.10577, 0.193219, 1.3396, 0.495465]\nf_389: 8151.40408 [0.0573828, -1.04157, -1.05869, 0.32064, -2.10576, 0.193209, 1.33961, 0.495438]\nf_390: 8151.40408 [0.057387, -1.04157, -1.05869, 0.320681, -2.10577, 0.193197, 1.33961, 0.495435]\nf_391: 8151.40408 [0.0573838, -1.04158, -1.05868, 0.32077, -2.1058, 0.19318, 1.33961, 0.495452]\nf_392: 8151.40407 [0.0573893, -1.04159, -1.05864, 0.320839, -2.1058, 0.193096, 1.33961, 0.495471]\nf_393: 8151.40407 [0.05739, -1.0416, -1.05864, 0.320795, -2.10583, 0.193102, 1.3396, 0.495508]\nf_394: 8151.40406 [0.0573966, -1.04162, -1.05865, 0.320753, -2.10596, 0.193078, 1.33963, 0.495534]\nf_395: 8151.40406 [0.0574103, -1.04165, -1.05877, 0.320689, -2.10624, 0.193018, 1.33967, 0.49567]\nf_396: 8151.4043 [0.0575061, -1.04165, -1.05868, 0.320729, -2.10628, 0.192763, 1.33968, 0.495664]\nf_397: 8151.40405 [0.0573954, -1.04166, -1.05874, 0.320639, -2.10616, 0.193259, 1.3397, 0.495607]\nf_398: 8151.40404 [0.0573906, -1.04167, -1.05868, 0.320504, -2.10614, 0.193427, 1.33961, 0.495555]\nf_399: 8151.40404 [0.0573864, -1.04168, -1.0585, 0.320388, -2.10614, 0.193522, 1.33961, 0.495542]\nf_400: 8151.40417 [0.0573102, -1.04168, -1.05848, 0.320466, -2.10605, 0.193463, 1.33958, 0.495549]\nf_401: 8151.40403 [0.0573814, -1.04168, -1.05849, 0.320491, -2.10604, 0.193497, 1.33958, 0.495527]\nf_402: 8151.40403 [0.0573804, -1.04169, -1.05852, 0.320456, -2.10592, 0.193438, 1.33957, 0.495533]\nf_403: 8151.40402 [0.0573814, -1.0417, -1.05853, 0.32051, -2.10585, 0.193408, 1.33954, 0.495559]\nf_404: 8151.40401 [0.0573817, -1.04171, -1.05854, 0.320528, -2.10583, 0.193363, 1.33954, 0.495494]\nf_405: 8151.40399 [0.0573875, -1.04173, -1.05856, 0.320585, -2.10586, 0.1933, 1.33956, 0.495444]\nf_406: 8151.40399 [0.0573964, -1.04177, -1.05854, 0.320549, -2.10597, 0.193325, 1.33949, 0.495595]\nf_407: 8151.40394 [0.0573903, -1.0418, -1.05849, 0.320578, -2.1057, 0.193196, 1.33962, 0.495462]\nf_408: 8151.4039 [0.0573923, -1.04188, -1.05817, 0.320564, -2.10564, 0.193081, 1.33955, 0.495497]\nf_409: 8151.40384 [0.0573947, -1.04196, -1.05868, 0.320332, -2.10568, 0.193306, 1.3395, 0.495394]\nf_410: 8151.4038 [0.0573765, -1.04203, -1.05892, 0.320601, -2.10578, 0.193817, 1.33943, 0.495274]\nf_411: 8151.40377 [0.0573872, -1.0421, -1.05904, 0.319884, -2.10592, 0.193882, 1.33954, 0.495195]\nf_412: 8151.40372 [0.0573899, -1.04216, -1.05916, 0.320633, -2.10541, 0.193574, 1.33934, 0.495219]\nf_413: 8151.40367 [0.057403, -1.04224, -1.05892, 0.320532, -2.10576, 0.193423, 1.33938, 0.49522]\nf_414: 8151.40357 [0.0574064, -1.04242, -1.05861, 0.320394, -2.10541, 0.193295, 1.33941, 0.495243]\nf_415: 8151.4034 [0.0574225, -1.04276, -1.05782, 0.319764, -2.10496, 0.192966, 1.3394, 0.495275]\nf_416: 8151.40314 [0.0575117, -1.04346, -1.05697, 0.319408, -2.10497, 0.191532, 1.33982, 0.49566]\nf_417: 8151.40293 [0.057443, -1.04373, -1.05813, 0.319728, -2.10469, 0.193276, 1.3393, 0.494716]\nf_418: 8151.40283 [0.0575444, -1.04423, -1.05628, 0.319002, -2.10417, 0.190949, 1.33989, 0.495281]\nf_419: 8151.40266 [0.0574628, -1.04442, -1.05775, 0.319216, -2.10409, 0.193199, 1.3392, 0.494663]\nf_420: 8151.40257 [0.0575419, -1.04499, -1.05567, 0.318547, -2.10359, 0.191402, 1.33967, 0.495078]\nf_421: 8151.40246 [0.0574871, -1.04515, -1.05765, 0.31877, -2.10307, 0.192867, 1.33915, 0.494488]\nf_422: 8151.40256 [0.0574732, -1.04569, -1.05745, 0.317565, -2.10314, 0.193858, 1.33901, 0.494046]\nf_423: 8152.2157 [0.0628744, -1.04515, -1.05747, 0.319748, -2.10308, 0.192791, 1.33781, 0.494127]\nf_424: 8151.40235 [0.0573693, -1.04537, -1.05632, 0.318856, -2.10161, 0.193395, 1.33956, 0.494771]\nf_425: 8151.40241 [0.0574297, -1.04549, -1.05523, 0.319963, -2.10026, 0.190837, 1.33922, 0.494903]\nf_426: 8151.40297 [0.0572803, -1.04537, -1.05597, 0.319542, -2.10186, 0.193296, 1.34, 0.493717]\nf_427: 8151.40233 [0.0574366, -1.04542, -1.0566, 0.318426, -2.10324, 0.192752, 1.33986, 0.49453]\nf_428: 8151.41436 [0.0567693, -1.04543, -1.05646, 0.31913, -2.10369, 0.19292, 1.33965, 0.494679]\nf_429: 8151.40246 [0.0574108, -1.04542, -1.05629, 0.318053, -2.10251, 0.192798, 1.33959, 0.494344]\nf_430: 8151.41522 [0.0567658, -1.04543, -1.05671, 0.318432, -2.10307, 0.192609, 1.33994, 0.494515]\nf_431: 8151.40226 [0.0574406, -1.04542, -1.05656, 0.318752, -2.10336, 0.192879, 1.33965, 0.494549]\nf_432: 8151.40225 [0.0574183, -1.04542, -1.05643, 0.318742, -2.10351, 0.19324, 1.33973, 0.494628]\nf_433: 8151.40225 [0.0574183, -1.04543, -1.05642, 0.318735, -2.10351, 0.193242, 1.33973, 0.494624]\nf_434: 8151.40224 [0.057433, -1.04544, -1.05633, 0.318815, -2.10364, 0.193108, 1.33969, 0.494636]\nf_435: 8151.40221 [0.0574302, -1.04544, -1.05641, 0.319021, -2.10363, 0.193055, 1.33974, 0.494675]\nf_436: 8151.40218 [0.0574391, -1.04544, -1.05649, 0.319181, -2.10372, 0.192954, 1.33968, 0.494683]\nf_437: 8151.40213 [0.0574406, -1.04545, -1.05652, 0.319641, -2.10374, 0.192799, 1.33971, 0.494777]\nf_438: 8151.40208 [0.0574588, -1.04546, -1.05641, 0.320464, -2.10408, 0.192384, 1.33962, 0.494891]\nf_439: 8151.40211 [0.0574558, -1.04547, -1.05587, 0.320712, -2.10356, 0.191992, 1.33959, 0.495019]\nf_440: 8151.40211 [0.0574646, -1.04543, -1.05636, 0.32033, -2.10404, 0.192315, 1.33963, 0.494904]\nf_441: 8151.40206 [0.0574674, -1.04546, -1.05675, 0.320692, -2.10416, 0.19244, 1.3396, 0.494939]\nf_442: 8151.40207 [0.0574594, -1.04546, -1.05692, 0.320799, -2.10452, 0.192574, 1.33959, 0.494781]\nf_443: 8151.4034 [0.0576735, -1.04545, -1.05678, 0.320656, -2.10412, 0.192453, 1.33953, 0.494908]\nf_444: 8151.40204 [0.0574627, -1.04547, -1.05681, 0.320612, -2.10426, 0.192378, 1.33968, 0.495015]\nf_445: 8151.40205 [0.0574564, -1.04547, -1.05678, 0.32077, -2.10425, 0.192451, 1.33979, 0.495008]\nf_446: 8151.40205 [0.0574624, -1.04546, -1.05679, 0.320686, -2.10429, 0.192342, 1.3397, 0.495038]\nf_447: 8151.40204 [0.0574617, -1.04547, -1.05683, 0.320673, -2.10426, 0.192368, 1.33971, 0.49499]\nf_448: 8151.40204 [0.057463, -1.04548, -1.05681, 0.320689, -2.10431, 0.192435, 1.33968, 0.495026]\nf_449: 8151.40204 [0.0574569, -1.04548, -1.05685, 0.320674, -2.10433, 0.192514, 1.33969, 0.495012]\nf_450: 8151.40203 [0.0574568, -1.04548, -1.05687, 0.320646, -2.10437, 0.192545, 1.33965, 0.494978]\nf_451: 8151.40203 [0.0574539, -1.04549, -1.05692, 0.320647, -2.10434, 0.192604, 1.33965, 0.494972]\nf_452: 8151.40202 [0.0574493, -1.0455, -1.05705, 0.320694, -2.10425, 0.192714, 1.33964, 0.494967]\nf_453: 8151.40201 [0.0574365, -1.04551, -1.05726, 0.320747, -2.10413, 0.192943, 1.33952, 0.494874]\nf_454: 8151.40199 [0.0574442, -1.04553, -1.05743, 0.320383, -2.10419, 0.192976, 1.33957, 0.494947]\nf_455: 8151.40198 [0.0574407, -1.04559, -1.05749, 0.320034, -2.10396, 0.193078, 1.33955, 0.494914]\nf_456: 8151.40205 [0.0574221, -1.04561, -1.05731, 0.319378, -2.10321, 0.193189, 1.33951, 0.49485]\nf_457: 8151.40196 [0.0574417, -1.0456, -1.0577, 0.32004, -2.10431, 0.193286, 1.33958, 0.494915]\nf_458: 8151.40196 [0.0574583, -1.04562, -1.05793, 0.320091, -2.10461, 0.193151, 1.33957, 0.494848]\nf_459: 8151.40194 [0.0574666, -1.04563, -1.05802, 0.320116, -2.10474, 0.193145, 1.33955, 0.4949]\nf_460: 8151.40193 [0.0574541, -1.04563, -1.05795, 0.320141, -2.10479, 0.193245, 1.33945, 0.494969]\nf_461: 8151.40192 [0.0574545, -1.04564, -1.058, 0.320189, -2.10468, 0.193246, 1.33954, 0.495062]\nf_462: 8151.40191 [0.0574702, -1.04566, -1.05806, 0.320068, -2.10481, 0.193068, 1.33952, 0.495242]\nf_463: 8151.4019 [0.0574611, -1.04568, -1.05815, 0.320437, -2.10475, 0.193106, 1.33943, 0.495164]\nf_464: 8151.40188 [0.0574671, -1.0457, -1.0582, 0.320574, -2.10512, 0.193095, 1.3395, 0.495252]\nf_465: 8151.40188 [0.0574644, -1.04572, -1.05844, 0.320551, -2.10516, 0.193131, 1.33942, 0.49537]\nf_466: 8151.40186 [0.057471, -1.04575, -1.05834, 0.320725, -2.10529, 0.193129, 1.33947, 0.495308]\nf_467: 8151.40186 [0.0574885, -1.0458, -1.05814, 0.321016, -2.10559, 0.192803, 1.33952, 0.495441]\nf_468: 8151.40685 [0.0579173, -1.0458, -1.05827, 0.321156, -2.10581, 0.192701, 1.33952, 0.495259]\nf_469: 8151.40184 [0.0574724, -1.04583, -1.05806, 0.320846, -2.10556, 0.193088, 1.33959, 0.495422]\nf_470: 8151.40182 [0.057468, -1.04585, -1.0583, 0.320645, -2.10545, 0.193237, 1.33952, 0.495441]\nf_471: 8151.4018 [0.0574603, -1.04588, -1.05879, 0.320262, -2.10545, 0.193677, 1.3395, 0.495312]\nf_472: 8151.40182 [0.0574446, -1.04591, -1.05916, 0.319882, -2.10504, 0.194031, 1.33935, 0.495439]\nf_473: 8151.4018 [0.057459, -1.04589, -1.05892, 0.320529, -2.10568, 0.193659, 1.33955, 0.495438]\nf_474: 8151.4018 [0.0574728, -1.04592, -1.05894, 0.320243, -2.10587, 0.193618, 1.33956, 0.495492]\nf_475: 8151.40201 [0.0575502, -1.04589, -1.05891, 0.320542, -2.10579, 0.193686, 1.33941, 0.495434]\nf_476: 8151.40179 [0.0574592, -1.04591, -1.05891, 0.320624, -2.10566, 0.1937, 1.33949, 0.495375]\nf_477: 8151.40179 [0.0574589, -1.04592, -1.059, 0.320594, -2.10569, 0.193771, 1.33947, 0.495408]\nf_478: 8151.40178 [0.0574629, -1.04593, -1.05911, 0.320598, -2.10574, 0.193729, 1.33945, 0.495412]\nf_479: 8151.40178 [0.0574605, -1.04595, -1.0591, 0.320605, -2.10584, 0.193805, 1.33947, 0.495413]\nf_480: 8151.40176 [0.0574616, -1.04598, -1.05913, 0.320652, -2.106, 0.193897, 1.33951, 0.495352]\nf_481: 8151.40174 [0.0574618, -1.04605, -1.0593, 0.3208, -2.10623, 0.194034, 1.33948, 0.495305]\nf_482: 8151.40171 [0.0574628, -1.04617, -1.05988, 0.320629, -2.10662, 0.194437, 1.33949, 0.495338]\nf_483: 8151.40164 [0.0574713, -1.04644, -1.06017, 0.321012, -2.10727, 0.194619, 1.33941, 0.495363]\nf_484: 8151.40167 [0.0574415, -1.04693, -1.06248, 0.319831, -2.10783, 0.196617, 1.33913, 0.495074]\nf_485: 8151.49384 [0.0556383, -1.04644, -1.05985, 0.320238, -2.10768, 0.194736, 1.33946, 0.495725]\nf_486: 8151.40202 [0.057531, -1.04661, -1.06006, 0.32298, -2.10971, 0.194044, 1.33978, 0.49586]\nf_487: 8151.4019 [0.0574512, -1.04643, -1.06032, 0.320794, -2.10807, 0.194388, 1.33885, 0.495065]\nf_488: 8151.40173 [0.0574829, -1.0465, -1.06042, 0.319671, -2.10829, 0.195098, 1.33948, 0.494975]\nf_489: 8151.43212 [0.0585176, -1.04644, -1.05975, 0.320848, -2.10772, 0.19485, 1.33942, 0.495539]\nf_490: 8151.4017 [0.0574965, -1.04645, -1.06083, 0.320822, -2.10757, 0.194306, 1.33929, 0.495341]\nf_491: 8151.40204 [0.0573409, -1.04643, -1.06028, 0.32112, -2.10749, 0.194947, 1.33948, 0.495304]\nf_492: 8151.40167 [0.0574675, -1.04644, -1.06018, 0.321079, -2.1073, 0.194545, 1.33923, 0.495119]\nf_493: 8151.40177 [0.05754, -1.04643, -1.06014, 0.320828, -2.10717, 0.194664, 1.33945, 0.49531]\nf_494: 8151.40165 [0.0574711, -1.04644, -1.06025, 0.320802, -2.10728, 0.194599, 1.33936, 0.495324]\nf_495: 8151.40164 [0.0574657, -1.04645, -1.06019, 0.32101, -2.10729, 0.194643, 1.33941, 0.495364]\nf_496: 8151.40163 [0.0574722, -1.04645, -1.06019, 0.320998, -2.10728, 0.194609, 1.33946, 0.495317]\nf_497: 8151.40162 [0.0574656, -1.04645, -1.06018, 0.32099, -2.10716, 0.194643, 1.33948, 0.49529]\nf_498: 8151.40162 [0.0574646, -1.04645, -1.06012, 0.320935, -2.10709, 0.194684, 1.33949, 0.495273]\nf_499: 8151.40161 [0.05746, -1.04645, -1.06011, 0.320901, -2.10698, 0.194712, 1.33951, 0.495264]\nf_500: 8151.40161 [0.0574612, -1.04645, -1.06005, 0.32084, -2.10695, 0.194722, 1.33954, 0.495247]\nf_501: 8151.4016 [0.0574506, -1.04645, -1.06002, 0.320825, -2.10688, 0.194798, 1.33952, 0.495268]\nf_502: 8151.4016 [0.0574554, -1.04644, -1.06003, 0.320813, -2.10679, 0.194789, 1.33956, 0.495252]\nf_503: 8151.4016 [0.0574453, -1.04644, -1.05996, 0.320771, -2.10675, 0.194839, 1.33958, 0.495267]\nf_504: 8151.40159 [0.0574514, -1.04644, -1.05994, 0.320745, -2.10665, 0.194819, 1.33956, 0.495225]\nf_505: 8151.40159 [0.0574556, -1.04644, -1.05993, 0.32072, -2.10659, 0.194896, 1.33959, 0.495237]\nf_506: 8151.40159 [0.0574461, -1.04643, -1.05989, 0.320756, -2.1065, 0.19486, 1.33959, 0.495266]\nf_507: 8151.40159 [0.0574467, -1.04643, -1.05984, 0.320714, -2.10646, 0.194876, 1.33963, 0.49524]\nf_508: 8151.40158 [0.0574417, -1.04643, -1.05979, 0.320671, -2.1064, 0.194913, 1.33959, 0.495257]\nf_509: 8151.40158 [0.0574406, -1.04643, -1.05981, 0.320678, -2.10629, 0.194914, 1.33961, 0.495231]\nf_510: 8151.40158 [0.0574405, -1.04643, -1.05974, 0.320676, -2.10625, 0.19496, 1.33963, 0.49527]\nf_511: 8151.40158 [0.0574392, -1.04643, -1.05968, 0.320671, -2.10616, 0.194921, 1.33963, 0.495257]\nf_512: 8151.40158 [0.057437, -1.04642, -1.05959, 0.320623, -2.10604, 0.194917, 1.33966, 0.495275]\nf_513: 8151.40157 [0.0574392, -1.04644, -1.05972, 0.320658, -2.10618, 0.194946, 1.33962, 0.495254]\nf_514: 8151.40157 [0.0574322, -1.04644, -1.05967, 0.320707, -2.10614, 0.194994, 1.33963, 0.495247]\nf_515: 8151.40157 [0.057434, -1.04644, -1.05963, 0.320698, -2.10606, 0.194966, 1.33964, 0.495276]\nf_516: 8151.40156 [0.0574296, -1.04645, -1.05961, 0.320725, -2.10597, 0.194971, 1.33964, 0.495277]\nf_517: 8151.40156 [0.0574295, -1.04646, -1.05955, 0.320664, -2.10596, 0.19501, 1.33969, 0.495367]\nf_518: 8151.40156 [0.0574321, -1.04647, -1.05959, 0.320747, -2.1059, 0.194932, 1.33967, 0.495415]\nf_519: 8151.40155 [0.0574271, -1.04648, -1.0595, 0.320718, -2.10587, 0.194972, 1.33969, 0.495317]\nf_520: 8151.40154 [0.0574244, -1.0465, -1.05941, 0.320671, -2.10578, 0.195022, 1.33969, 0.495322]\nf_521: 8151.40153 [0.0574256, -1.04653, -1.05931, 0.320551, -2.10568, 0.19506, 1.33976, 0.495331]\nf_522: 8151.40151 [0.057419, -1.04656, -1.05914, 0.320772, -2.10574, 0.195028, 1.33971, 0.495279]\nf_523: 8151.4015 [0.0574234, -1.04659, -1.05921, 0.320676, -2.10568, 0.195103, 1.33964, 0.495327]\nf_524: 8151.40148 [0.057425, -1.04665, -1.05921, 0.320395, -2.10589, 0.195085, 1.33967, 0.495243]\nf_525: 8151.40146 [0.0574086, -1.04671, -1.05903, 0.320758, -2.10552, 0.195156, 1.33969, 0.495465]\nf_526: 8151.40144 [0.0573923, -1.04675, -1.05892, 0.320351, -2.10515, 0.195546, 1.33966, 0.495229]\nf_527: 8151.40141 [0.0573985, -1.04681, -1.05895, 0.320399, -2.10521, 0.195368, 1.33967, 0.495357]\nf_528: 8151.40137 [0.0574148, -1.04694, -1.05899, 0.320619, -2.10599, 0.195293, 1.33975, 0.495326]\nf_529: 8151.40132 [0.0573966, -1.04707, -1.05849, 0.320203, -2.10549, 0.195489, 1.33973, 0.495272]\nf_530: 8151.40124 [0.0573899, -1.04734, -1.05841, 0.320718, -2.10553, 0.195597, 1.33988, 0.495481]\nf_531: 8151.40145 [0.0574937, -1.04778, -1.06063, 0.318697, -2.10927, 0.195896, 1.33966, 0.494897]\nf_532: 8151.40147 [0.0572493, -1.04734, -1.05844, 0.32108, -2.10569, 0.196964, 1.33956, 0.495303]\nf_533: 8151.40122 [0.0573032, -1.04757, -1.05802, 0.319753, -2.10421, 0.196996, 1.33956, 0.495344]\nf_534: 8151.40621 [0.0577308, -1.04757, -1.05774, 0.319496, -2.10449, 0.197454, 1.34045, 0.494978]\nf_535: 8151.40126 [0.0573304, -1.0476, -1.05699, 0.320159, -2.10531, 0.19668, 1.33997, 0.494972]\nf_536: 8151.40296 [0.0575651, -1.04757, -1.05822, 0.320404, -2.10397, 0.197205, 1.33945, 0.494941]\nf_537: 8151.40123 [0.0573089, -1.04757, -1.05813, 0.32038, -2.10392, 0.196956, 1.33985, 0.494975]\nf_538: 8151.40125 [0.0572891, -1.04756, -1.05783, 0.319832, -2.10383, 0.197078, 1.33955, 0.495377]\nf_539: 8151.40118 [0.0573243, -1.04758, -1.05805, 0.320144, -2.10432, 0.19701, 1.33959, 0.495147]\nf_540: 8151.40119 [0.0573493, -1.04757, -1.05808, 0.319962, -2.10422, 0.196657, 1.33957, 0.495014]\nf_541: 8151.40518 [0.0577071, -1.04757, -1.05801, 0.320119, -2.10433, 0.197041, 1.33961, 0.49514]\nf_542: 8151.40119 [0.0573323, -1.04757, -1.05821, 0.320079, -2.10424, 0.196957, 1.33962, 0.495099]\nf_543: 8151.40123 [0.0573704, -1.04758, -1.05807, 0.320217, -2.10431, 0.196957, 1.33959, 0.495195]\nf_544: 8151.40118 [0.0573291, -1.04758, -1.05805, 0.320185, -2.10427, 0.196918, 1.33957, 0.49514]\nf_545: 8151.40118 [0.0573282, -1.04758, -1.05807, 0.32023, -2.10426, 0.196902, 1.33962, 0.495175]\nf_546: 8151.40118 [0.0573306, -1.04757, -1.05808, 0.320306, -2.10431, 0.196902, 1.33963, 0.495216]\nf_547: 8151.40118 [0.0573259, -1.04758, -1.0581, 0.320352, -2.10429, 0.196941, 1.33959, 0.495257]\nf_548: 8151.40118 [0.0573256, -1.04758, -1.0581, 0.320286, -2.10436, 0.197007, 1.33959, 0.495287]\nf_549: 8151.40117 [0.0573279, -1.04758, -1.05813, 0.320332, -2.10435, 0.196928, 1.33959, 0.495252]\nf_550: 8151.40117 [0.0573309, -1.04758, -1.05814, 0.320329, -2.10442, 0.196927, 1.33958, 0.495238]\nf_551: 8151.40116 [0.0573321, -1.04758, -1.05818, 0.320312, -2.10448, 0.196908, 1.33957, 0.495244]\nf_552: 8151.40116 [0.0573374, -1.04759, -1.05822, 0.320306, -2.10461, 0.196877, 1.33955, 0.495245]\nf_553: 8151.40115 [0.057344, -1.0476, -1.05823, 0.320317, -2.10489, 0.1968, 1.33952, 0.495243]\nf_554: 8151.40114 [0.0573568, -1.04761, -1.0584, 0.320236, -2.10506, 0.196694, 1.33956, 0.495273]\nf_555: 8151.40114 [0.0573615, -1.04761, -1.05832, 0.32023, -2.10532, 0.196624, 1.33948, 0.49531]\nf_556: 8151.40113 [0.0573612, -1.04762, -1.0584, 0.320202, -2.10504, 0.196683, 1.33956, 0.495271]\nf_557: 8151.40113 [0.0573569, -1.04762, -1.05837, 0.320246, -2.10513, 0.196714, 1.33962, 0.495244]\nf_558: 8151.40113 [0.0573595, -1.04763, -1.05841, 0.320336, -2.10514, 0.196675, 1.33958, 0.49522]\nf_559: 8151.40113 [0.0573562, -1.04763, -1.05845, 0.320349, -2.10521, 0.196759, 1.33957, 0.495203]\nf_560: 8151.40112 [0.0573582, -1.04764, -1.05848, 0.320468, -2.10517, 0.196701, 1.33957, 0.495186]\nf_561: 8151.40112 [0.0573538, -1.04765, -1.05846, 0.320567, -2.10531, 0.196823, 1.3396, 0.495092]\nf_562: 8151.40164 [0.0572199, -1.04764, -1.05846, 0.320464, -2.10515, 0.196678, 1.33951, 0.495134]\nf_563: 8151.40112 [0.0573564, -1.04764, -1.05855, 0.320548, -2.10524, 0.196748, 1.33958, 0.495214]\nf_564: 8151.40112 [0.0573565, -1.04765, -1.05862, 0.320583, -2.10522, 0.196764, 1.33954, 0.495151]\nf_565: 8151.40112 [0.0573573, -1.04764, -1.05861, 0.320562, -2.10523, 0.19675, 1.33956, 0.495222]\nf_566: 8151.40112 [0.0573573, -1.04765, -1.05862, 0.320549, -2.10526, 0.196751, 1.33956, 0.495236]\nf_567: 8151.40111 [0.0573612, -1.04766, -1.05867, 0.32055, -2.10531, 0.196723, 1.33957, 0.495248]\nf_568: 8151.4011 [0.0573689, -1.04767, -1.05874, 0.320548, -2.10547, 0.196637, 1.33963, 0.495264]\nf_569: 8151.40109 [0.0573768, -1.04771, -1.05857, 0.320618, -2.10557, 0.196466, 1.3396, 0.495401]\nf_570: 8151.4011 [0.0573887, -1.04773, -1.05841, 0.320526, -2.1057, 0.196236, 1.33986, 0.495338]\nf_571: 8151.40218 [0.0575705, -1.04771, -1.05857, 0.320586, -2.10568, 0.19656, 1.33968, 0.495493]\nf_572: 8151.40108 [0.0573834, -1.04771, -1.05865, 0.320585, -2.10557, 0.196306, 1.33953, 0.495268]\nf_573: 8151.40108 [0.0573804, -1.04773, -1.0587, 0.320492, -2.1055, 0.196453, 1.33961, 0.49532]\nf_574: 8151.40107 [0.0573752, -1.04774, -1.05875, 0.32071, -2.10546, 0.196475, 1.33956, 0.495329]\nf_575: 8151.40108 [0.0573757, -1.04775, -1.05877, 0.320543, -2.10549, 0.196489, 1.33943, 0.495331]\nf_576: 8151.40169 [0.0572279, -1.04774, -1.05882, 0.320679, -2.10549, 0.196426, 1.33959, 0.495369]\nf_577: 8151.40107 [0.057378, -1.04775, -1.05882, 0.320663, -2.1054, 0.196409, 1.33956, 0.495352]\nf_578: 8151.40107 [0.0573793, -1.04775, -1.05885, 0.320612, -2.10549, 0.196441, 1.33956, 0.495387]\nf_579: 8151.40107 [0.0573821, -1.04776, -1.05889, 0.32062, -2.10548, 0.196377, 1.33953, 0.495387]\nf_580: 8151.40106 [0.0573874, -1.04778, -1.05898, 0.320635, -2.10552, 0.196309, 1.33951, 0.495415]\nf_581: 8151.40105 [0.0574039, -1.04782, -1.05904, 0.320679, -2.10581, 0.196064, 1.3395, 0.49545]\nf_582: 8151.4011 [0.0574592, -1.04783, -1.05913, 0.320206, -2.10659, 0.19529, 1.33947, 0.495654]\nf_583: 8151.40185 [0.0575636, -1.04782, -1.05887, 0.320688, -2.10584, 0.196206, 1.33941, 0.495625]\nf_584: 8151.40104 [0.0573995, -1.04786, -1.05893, 0.320841, -2.10557, 0.196076, 1.33945, 0.495391]\nf_585: 8151.40104 [0.0573937, -1.04789, -1.05921, 0.321019, -2.10559, 0.196198, 1.33935, 0.495397]\nf_586: 8151.406 [0.0569698, -1.04785, -1.0589, 0.321021, -2.10557, 0.196058, 1.33945, 0.495442]\nf_587: 8151.40103 [0.0574021, -1.04787, -1.0589, 0.320639, -2.10549, 0.196008, 1.33949, 0.495401]\nf_588: 8151.40101 [0.0574073, -1.04791, -1.05882, 0.320595, -2.10538, 0.195869, 1.33953, 0.495423]\nf_589: 8151.40098 [0.0574136, -1.048, -1.05864, 0.320663, -2.10523, 0.195688, 1.3396, 0.49543]\nf_590: 8151.40093 [0.0574281, -1.04817, -1.05878, 0.320766, -2.10507, 0.1954, 1.33943, 0.49547]\nf_591: 8151.40087 [0.057447, -1.04851, -1.05801, 0.320715, -2.10388, 0.194616, 1.33976, 0.495665]\nf_592: 8151.40083 [0.0574955, -1.04864, -1.05892, 0.320942, -2.10502, 0.194209, 1.33942, 0.495689]\nf_593: 8151.40081 [0.0574557, -1.04873, -1.0587, 0.321245, -2.10382, 0.19459, 1.3396, 0.495586]\nf_594: 8151.4008 [0.0575071, -1.04889, -1.05899, 0.32133, -2.1045, 0.193822, 1.33939, 0.495759]\nf_595: 8151.40075 [0.0574902, -1.04896, -1.05845, 0.320861, -2.10375, 0.193972, 1.33957, 0.495612]\nf_596: 8151.4007 [0.0575056, -1.04916, -1.05861, 0.321204, -2.10378, 0.193724, 1.3395, 0.495562]\nf_597: 8151.40063 [0.0575339, -1.04956, -1.05769, 0.321444, -2.10328, 0.192802, 1.33967, 0.495434]\nf_598: 8151.4006 [0.0575992, -1.04986, -1.05779, 0.32179, -2.10385, 0.191777, 1.33962, 0.495509]\nf_599: 8151.4006 [0.0575701, -1.04991, -1.05769, 0.321786, -2.10304, 0.192137, 1.33963, 0.495507]\nf_600: 8151.402 [0.0573496, -1.04986, -1.05776, 0.322387, -2.1038, 0.191823, 1.34007, 0.495834]\nf_601: 8151.40071 [0.0575917, -1.04986, -1.05794, 0.322287, -2.10364, 0.191708, 1.34018, 0.495614]\nf_602: 8151.40467 [0.057193, -1.04986, -1.05784, 0.321367, -2.10396, 0.19186, 1.33975, 0.495549]\nf_603: 8151.4006 [0.0575829, -1.04986, -1.05764, 0.321394, -2.1038, 0.191747, 1.33973, 0.495676]\nf_604: 8151.40061 [0.0575833, -1.04986, -1.05736, 0.321429, -2.10356, 0.191469, 1.33978, 0.495613]\nf_605: 8151.4014 [0.0574137, -1.04986, -1.05774, 0.32139, -2.10368, 0.191636, 1.33969, 0.495742]\nf_606: 8151.40058 [0.0575737, -1.04986, -1.05757, 0.321497, -2.10386, 0.191846, 1.33975, 0.495553]\nf_607: 8151.40057 [0.0575704, -1.04987, -1.05776, 0.321878, -2.10403, 0.192009, 1.33971, 0.495428]\nf_608: 8151.40057 [0.0575542, -1.04987, -1.05799, 0.321838, -2.10372, 0.192255, 1.33961, 0.495462]\nf_609: 8151.40058 [0.0575411, -1.04989, -1.05822, 0.321995, -2.10351, 0.192489, 1.33952, 0.495429]\nf_610: 8151.40095 [0.0576806, -1.04989, -1.05805, 0.321828, -2.1037, 0.192142, 1.3396, 0.49548]\nf_611: 8151.40057 [0.0575639, -1.04988, -1.05811, 0.321707, -2.10376, 0.192153, 1.33967, 0.495452]\nf_612: 8151.40057 [0.0575644, -1.04989, -1.05805, 0.321752, -2.10389, 0.192126, 1.33959, 0.495508]\nf_613: 8151.40057 [0.0575612, -1.04987, -1.05811, 0.321704, -2.10377, 0.19217, 1.33967, 0.495452]\nf_614: 8151.40057 [0.0575658, -1.04988, -1.05806, 0.321793, -2.1038, 0.192097, 1.33965, 0.495457]\nf_615: 8151.40058 [0.0575399, -1.04988, -1.0581, 0.321691, -2.10373, 0.19216, 1.33969, 0.495421]\nf_616: 8151.40056 [0.0575654, -1.04988, -1.05808, 0.321645, -2.10376, 0.192169, 1.33965, 0.495437]\nf_617: 8151.40056 [0.0575628, -1.04988, -1.05806, 0.321579, -2.10375, 0.192199, 1.33965, 0.495436]\nf_618: 8151.40055 [0.0575623, -1.04988, -1.05804, 0.321441, -2.10368, 0.192233, 1.33964, 0.495419]\nf_619: 8151.40055 [0.0575623, -1.04989, -1.05813, 0.321234, -2.10348, 0.192226, 1.33963, 0.495376]\nf_620: 8151.40055 [0.0575594, -1.04989, -1.05805, 0.321356, -2.10368, 0.192286, 1.33959, 0.4954]\nf_621: 8151.40054 [0.0575587, -1.04989, -1.05806, 0.321318, -2.10373, 0.192356, 1.33957, 0.495333]\nf_622: 8151.40053 [0.0575552, -1.0499, -1.05813, 0.321261, -2.1038, 0.192463, 1.33954, 0.495206]\nf_623: 8151.40053 [0.0575485, -1.04991, -1.05817, 0.321141, -2.10368, 0.192642, 1.33945, 0.495132]\nf_624: 8151.40104 [0.0576927, -1.0499, -1.05811, 0.321307, -2.10387, 0.19252, 1.33954, 0.49519]\nf_625: 8151.40053 [0.0575581, -1.0499, -1.05811, 0.321272, -2.10389, 0.192468, 1.33952, 0.49513]\nf_626: 8151.40053 [0.0575542, -1.0499, -1.05816, 0.321226, -2.10385, 0.192484, 1.33953, 0.495186]\nf_627: 8151.40052 [0.0575571, -1.0499, -1.05817, 0.321205, -2.10389, 0.192531, 1.33955, 0.495198]\nf_628: 8151.40052 [0.0575527, -1.0499, -1.05816, 0.321184, -2.10394, 0.192635, 1.33961, 0.495194]\nf_629: 8151.40051 [0.0575459, -1.0499, -1.05821, 0.321184, -2.10391, 0.19283, 1.33969, 0.495084]\nf_630: 8151.40057 [0.0575908, -1.04991, -1.0582, 0.321096, -2.10395, 0.19289, 1.33968, 0.495104]\nf_631: 8151.40051 [0.0575422, -1.0499, -1.05814, 0.32111, -2.10396, 0.192888, 1.33964, 0.495099]\nf_632: 8151.4005 [0.057543, -1.04991, -1.0581, 0.320891, -2.10402, 0.192948, 1.33955, 0.49505]\nf_633: 8151.40049 [0.0575356, -1.04992, -1.05822, 0.32102, -2.10407, 0.193117, 1.33956, 0.495116]\nf_634: 8151.40049 [0.0575262, -1.04995, -1.05843, 0.321255, -2.10407, 0.193385, 1.33948, 0.495069]\nf_635: 8151.40263 [0.0578063, -1.04995, -1.05853, 0.321232, -2.10409, 0.193428, 1.33945, 0.495034]\nf_636: 8151.40047 [0.0575227, -1.04995, -1.05845, 0.321083, -2.10423, 0.193512, 1.33951, 0.49518]\nf_637: 8151.40048 [0.0575263, -1.04994, -1.05872, 0.320691, -2.10442, 0.19372, 1.33949, 0.495018]\nf_638: 8151.40082 [0.0576348, -1.04995, -1.05839, 0.32093, -2.10407, 0.193548, 1.3395, 0.495173]\nf_639: 8151.40046 [0.0575152, -1.04995, -1.0585, 0.321048, -2.10425, 0.193774, 1.33953, 0.495156]\nf_640: 8151.40045 [0.0574958, -1.04996, -1.05863, 0.320963, -2.10431, 0.194306, 1.3395, 0.495183]\nf_641: 8151.40045 [0.0574624, -1.04994, -1.0591, 0.320916, -2.10448, 0.195244, 1.33942, 0.495039]\nf_642: 8151.40199 [0.0577389, -1.04996, -1.05861, 0.32093, -2.10459, 0.194284, 1.33947, 0.495247]\nf_643: 8151.40045 [0.0574913, -1.04998, -1.05868, 0.320942, -2.10473, 0.194537, 1.33932, 0.495093]\nf_644: 8151.40072 [0.0575985, -1.04997, -1.05862, 0.320875, -2.10432, 0.194321, 1.33961, 0.495121]\nf_645: 8151.40044 [0.057497, -1.04997, -1.05875, 0.320831, -2.10441, 0.194411, 1.33959, 0.495212]\nf_646: 8151.40043 [0.057486, -1.04999, -1.059, 0.32075, -2.10447, 0.194776, 1.33957, 0.495321]\nf_647: 8151.40042 [0.0574856, -1.04998, -1.05911, 0.320674, -2.10499, 0.195035, 1.33955, 0.495197]\nf_648: 8151.40043 [0.0574747, -1.04996, -1.05915, 0.320192, -2.10494, 0.195366, 1.33957, 0.495165]\nf_649: 8151.4026 [0.0577583, -1.04998, -1.05896, 0.320787, -2.105, 0.195167, 1.33959, 0.495213]\nf_650: 8151.40042 [0.057484, -1.04998, -1.0592, 0.320913, -2.10518, 0.195101, 1.33953, 0.495181]\nf_651: 8151.40101 [0.0576313, -1.04998, -1.05922, 0.320893, -2.10518, 0.195075, 1.33953, 0.495108]\nf_652: 8151.40042 [0.05748, -1.04998, -1.05919, 0.320898, -2.10517, 0.195173, 1.33956, 0.49526]\nf_653: 8151.40041 [0.0574737, -1.04999, -1.05931, 0.320874, -2.10509, 0.195352, 1.33959, 0.495349]\nf_654: 8151.40041 [0.0574731, -1.05, -1.05935, 0.320886, -2.10535, 0.195464, 1.33957, 0.49538]\nf_655: 8151.40041 [0.0574695, -1.05003, -1.05945, 0.320965, -2.10559, 0.195649, 1.33954, 0.495431]\nf_656: 8151.4004 [0.057472, -1.05006, -1.05938, 0.321128, -2.10556, 0.195554, 1.33957, 0.495483]\nf_657: 8151.40041 [0.0574731, -1.05013, -1.05928, 0.321479, -2.1054, 0.195438, 1.33964, 0.495622]\nf_658: 8151.40104 [0.0573069, -1.05007, -1.05933, 0.321075, -2.10534, 0.195731, 1.33949, 0.495321]\nf_659: 8151.4004 [0.0574534, -1.05008, -1.05943, 0.321303, -2.10541, 0.195906, 1.33957, 0.495389]\nf_660: 8151.40039 [0.0574442, -1.0501, -1.05953, 0.321083, -2.10542, 0.196178, 1.33957, 0.495444]\nf_661: 8151.40039 [0.0574241, -1.05015, -1.05985, 0.320872, -2.10528, 0.196806, 1.33963, 0.495555]\nf_662: 8151.40039 [0.0574326, -1.05009, -1.05964, 0.320925, -2.10542, 0.196474, 1.33954, 0.495374]\nf_663: 8151.40038 [0.0574474, -1.05013, -1.05954, 0.32096, -2.10576, 0.196323, 1.33958, 0.495392]\nf_664: 8151.40037 [0.0574448, -1.0502, -1.05959, 0.320953, -2.10629, 0.196552, 1.33957, 0.495321]\nf_665: 8151.40036 [0.0574263, -1.05025, -1.05978, 0.320832, -2.10635, 0.197123, 1.33969, 0.495444]\nf_666: 8151.40038 [0.0574114, -1.05032, -1.06015, 0.320905, -2.10703, 0.197965, 1.33963, 0.495511]\nf_667: 8151.4158 [0.0566742, -1.05025, -1.05961, 0.320898, -2.10654, 0.197158, 1.33985, 0.495581]\nf_668: 8151.40041 [0.057458, -1.05027, -1.05971, 0.320765, -2.10726, 0.196836, 1.34003, 0.495358]\nf_669: 8151.40091 [0.0572759, -1.05025, -1.05985, 0.320979, -2.10614, 0.197287, 1.33986, 0.495239]\nf_670: 8151.40034 [0.0574166, -1.05027, -1.05955, 0.320958, -2.10602, 0.197186, 1.33976, 0.495328]\nf_671: 8151.40033 [0.057427, -1.0503, -1.05948, 0.320808, -2.1059, 0.196938, 1.3398, 0.495307]\nf_672: 8151.40032 [0.0574505, -1.05035, -1.05913, 0.32091, -2.10595, 0.196342, 1.33983, 0.495261]\nf_673: 8151.40031 [0.057461, -1.05041, -1.05883, 0.321074, -2.10584, 0.195929, 1.33984, 0.495247]\nf_674: 8151.40038 [0.0575238, -1.05048, -1.05814, 0.321435, -2.10637, 0.194487, 1.33976, 0.495075]\nf_675: 8151.40407 [0.0578263, -1.0504, -1.05858, 0.320733, -2.10543, 0.195865, 1.33994, 0.49511]\nf_676: 8151.40034 [0.057447, -1.05045, -1.05906, 0.321848, -2.10615, 0.196285, 1.33974, 0.495398]\nf_677: 8151.4012 [0.0572701, -1.05042, -1.05865, 0.321122, -2.10594, 0.196132, 1.33974, 0.495007]\nf_678: 8151.4003 [0.0574603, -1.05043, -1.05901, 0.320952, -2.10592, 0.196008, 1.33958, 0.495237]\nf_679: 8151.40031 [0.0574472, -1.05044, -1.05893, 0.320937, -2.1062, 0.196249, 1.33979, 0.495214]\nf_680: 8151.40528 [0.0570348, -1.05043, -1.05901, 0.320886, -2.10585, 0.196, 1.33959, 0.495262]\nf_681: 8151.40031 [0.0574576, -1.05043, -1.05897, 0.321197, -2.10596, 0.196057, 1.33962, 0.495173]\nf_682: 8151.4003 [0.05746, -1.05044, -1.059, 0.320936, -2.10594, 0.196025, 1.33957, 0.495225]\nf_683: 8151.4003 [0.057462, -1.05044, -1.05893, 0.320944, -2.10594, 0.196069, 1.33955, 0.495274]\nf_684: 8151.4003 [0.05746, -1.05044, -1.05898, 0.32094, -2.10591, 0.196004, 1.33956, 0.495222]\nf_685: 8151.4003 [0.0574618, -1.05044, -1.05896, 0.320904, -2.10588, 0.196007, 1.33959, 0.495245]\nf_686: 8151.4003 [0.0574628, -1.05045, -1.05894, 0.32085, -2.10586, 0.195977, 1.33963, 0.4953]\nf_687: 8151.4003 [0.0574698, -1.05047, -1.05906, 0.320895, -2.10582, 0.195852, 1.33961, 0.495348]\nf_688: 8151.40029 [0.0574705, -1.05048, -1.059, 0.320742, -2.10571, 0.195797, 1.33962, 0.49541]\nf_689: 8151.40028 [0.0574658, -1.0505, -1.0589, 0.320894, -2.10571, 0.195873, 1.33964, 0.495327]\nf_690: 8151.40029 [0.0574621, -1.05053, -1.05874, 0.321133, -2.10576, 0.195895, 1.33961, 0.495136]\nf_691: 8151.40127 [0.0572745, -1.05049, -1.05883, 0.320935, -2.10558, 0.195812, 1.33951, 0.495275]\nf_692: 8151.40028 [0.0574589, -1.05051, -1.05886, 0.321092, -2.10555, 0.195939, 1.33968, 0.495382]\nf_693: 8151.40028 [0.0574655, -1.05053, -1.05884, 0.321053, -2.10562, 0.195811, 1.33968, 0.495406]\nf_694: 8151.40027 [0.0574655, -1.05054, -1.05881, 0.320945, -2.10557, 0.195813, 1.33962, 0.4953]\nf_695: 8151.40027 [0.0574692, -1.05057, -1.0589, 0.320541, -2.10553, 0.195862, 1.33952, 0.495246]\nf_696: 8151.40027 [0.0574815, -1.05059, -1.05865, 0.32053, -2.1054, 0.195454, 1.33957, 0.495178]\nf_697: 8151.40142 [0.0572562, -1.05057, -1.05874, 0.320551, -2.10543, 0.195936, 1.33941, 0.495268]\nf_698: 8151.40026 [0.0574668, -1.05058, -1.05885, 0.320713, -2.10534, 0.195894, 1.33958, 0.495336]\nf_699: 8151.40026 [0.0574531, -1.05061, -1.05891, 0.321022, -2.10511, 0.196001, 1.33964, 0.495473]\nf_700: 8151.40025 [0.0574513, -1.05065, -1.059, 0.32069, -2.10508, 0.196153, 1.33966, 0.495488]\nf_701: 8151.40027 [0.057439, -1.05072, -1.05934, 0.320706, -2.10511, 0.19665, 1.33976, 0.495716]\nf_702: 8151.40521 [0.0578846, -1.05066, -1.05921, 0.320687, -2.10487, 0.195938, 1.33951, 0.495399]\nf_703: 8151.40025 [0.0574448, -1.05068, -1.05871, 0.320813, -2.10478, 0.196099, 1.33969, 0.495434]\nf_704: 8151.40025 [0.0574518, -1.05073, -1.05823, 0.320968, -2.10425, 0.195562, 1.33962, 0.495389]\nf_705: 8151.40422 [0.0578304, -1.05068, -1.05871, 0.320724, -2.10487, 0.195999, 1.33987, 0.495476]\nf_706: 8151.40026 [0.0574257, -1.05069, -1.05875, 0.320761, -2.1043, 0.196333, 1.33957, 0.495251]\nf_707: 8151.40038 [0.0573754, -1.05068, -1.05874, 0.320822, -2.10467, 0.196111, 1.33968, 0.495618]\nf_708: 8151.40024 [0.0574458, -1.05069, -1.05881, 0.32094, -2.10488, 0.196057, 1.33959, 0.495349]\nf_709: 8151.40024 [0.0574438, -1.0507, -1.05871, 0.320736, -2.10481, 0.196111, 1.33958, 0.495295]\nf_710: 8151.40024 [0.0574446, -1.05072, -1.05876, 0.320737, -2.10464, 0.196045, 1.33962, 0.495327]\nf_711: 8151.40053 [0.057544, -1.05071, -1.05869, 0.320838, -2.10484, 0.196186, 1.33959, 0.495313]\nf_712: 8151.40024 [0.0574379, -1.05071, -1.05866, 0.320824, -2.1048, 0.196185, 1.3396, 0.495332]\nf_713: 8151.40024 [0.0574368, -1.05071, -1.0587, 0.320899, -2.10472, 0.196204, 1.33958, 0.495359]\nf_714: 8151.40024 [0.0574507, -1.0507, -1.05865, 0.320794, -2.1048, 0.196201, 1.33956, 0.495342]\nf_715: 8151.40023 [0.0574414, -1.05071, -1.05864, 0.320816, -2.10486, 0.196153, 1.33961, 0.495326]\nf_716: 8151.40023 [0.0574439, -1.05071, -1.0586, 0.320838, -2.10495, 0.196075, 1.33959, 0.495315]\nf_717: 8151.40023 [0.0574477, -1.05072, -1.05853, 0.320804, -2.10497, 0.196019, 1.3396, 0.49528]\nf_718: 8151.40023 [0.0574547, -1.05073, -1.05845, 0.320738, -2.10496, 0.195855, 1.33959, 0.495249]\nf_719: 8151.40023 [0.0574513, -1.05075, -1.05838, 0.320688, -2.10482, 0.195882, 1.33962, 0.495225]\nf_720: 8151.40023 [0.0574436, -1.05079, -1.05825, 0.320485, -2.10445, 0.195935, 1.33954, 0.49519]\nf_721: 8151.40022 [0.0574483, -1.05077, -1.05836, 0.320704, -2.10476, 0.195925, 1.33962, 0.49523]\nf_722: 8151.40022 [0.057453, -1.05079, -1.05845, 0.320694, -2.10483, 0.195908, 1.33965, 0.495291]\nf_723: 8151.40021 [0.0574448, -1.05083, -1.05841, 0.320613, -2.10476, 0.196087, 1.33973, 0.495203]\nf_724: 8151.4002 [0.0574467, -1.05087, -1.05843, 0.320606, -2.1048, 0.195965, 1.33969, 0.495362]\nf_725: 8151.4002 [0.0574591, -1.0509, -1.05831, 0.320422, -2.10465, 0.195751, 1.33968, 0.495257]\nf_726: 8151.40019 [0.0574401, -1.05093, -1.05819, 0.320549, -2.1047, 0.196154, 1.33972, 0.495272]\nf_727: 8151.40019 [0.0574396, -1.05096, -1.05838, 0.320336, -2.10493, 0.196393, 1.33981, 0.495344]\nf_728: 8151.40019 [0.0574235, -1.05099, -1.05828, 0.320689, -2.10467, 0.196525, 1.33989, 0.495303]\nf_729: 8151.4031 [0.0571158, -1.05096, -1.0583, 0.320287, -2.10495, 0.196331, 1.33994, 0.495402]\nf_730: 8151.40019 [0.0574377, -1.05097, -1.05821, 0.320552, -2.10493, 0.196327, 1.33984, 0.495335]\nf_731: 8151.40019 [0.0574334, -1.05097, -1.05821, 0.320394, -2.10466, 0.19635, 1.3398, 0.495333]\nf_732: 8151.40054 [0.0573216, -1.05097, -1.05818, 0.320515, -2.10496, 0.196368, 1.33983, 0.495262]\nf_733: 8151.40018 [0.0574408, -1.05097, -1.05829, 0.320562, -2.10494, 0.196273, 1.3398, 0.495331]\nf_734: 8151.40018 [0.0574476, -1.05099, -1.05836, 0.320483, -2.10496, 0.196162, 1.33979, 0.495381]\nf_735: 8151.40018 [0.0574444, -1.05101, -1.05829, 0.320455, -2.10487, 0.196205, 1.33979, 0.495351]\nf_736: 8151.40018 [0.0574484, -1.05105, -1.05831, 0.320302, -2.10465, 0.19608, 1.33978, 0.495402]\nf_737: 8151.40017 [0.0574399, -1.05108, -1.05813, 0.320431, -2.10484, 0.196276, 1.33981, 0.495338]\nf_738: 8151.40016 [0.0574282, -1.05116, -1.05808, 0.320603, -2.1053, 0.1967, 1.33986, 0.495388]\nf_739: 8151.40015 [0.0574353, -1.05125, -1.05791, 0.320459, -2.10509, 0.19648, 1.33989, 0.495352]\nf_740: 8151.40014 [0.0574096, -1.05141, -1.05751, 0.320302, -2.10417, 0.196724, 1.33989, 0.495357]\nf_741: 8151.40013 [0.057419, -1.05148, -1.05768, 0.320376, -2.1052, 0.196955, 1.34001, 0.495426]\nf_742: 8151.40012 [0.0574236, -1.05151, -1.05743, 0.320408, -2.10491, 0.196658, 1.33996, 0.495364]\nf_743: 8151.40012 [0.0574298, -1.05155, -1.05717, 0.320771, -2.10483, 0.19634, 1.33994, 0.495384]\nf_744: 8151.4273 [0.0564301, -1.05151, -1.0576, 0.320473, -2.10494, 0.196636, 1.33972, 0.495278]\nf_745: 8151.40013 [0.057421, -1.05155, -1.05717, 0.320689, -2.10498, 0.196654, 1.34, 0.495292]\nf_746: 8151.4033 [0.0570848, -1.05151, -1.05728, 0.320297, -2.10497, 0.196654, 1.34003, 0.49549]\nf_747: 8151.40012 [0.0574353, -1.05152, -1.05744, 0.320271, -2.10488, 0.196448, 1.33985, 0.495469]\nf_748: 8151.40012 [0.0574406, -1.05153, -1.0574, 0.320274, -2.10462, 0.196253, 1.33988, 0.495477]\nf_749: 8151.40014 [0.0574571, -1.05152, -1.05744, 0.320373, -2.10484, 0.196494, 1.33981, 0.495549]\nf_750: 8151.40012 [0.0574308, -1.05152, -1.05742, 0.32042, -2.10483, 0.196494, 1.33988, 0.495493]\nf_751: 8151.40012 [0.0574392, -1.05151, -1.05744, 0.320324, -2.10492, 0.196405, 1.33985, 0.495469]\nf_752: 8151.40012 [0.0574357, -1.05151, -1.05738, 0.320333, -2.10491, 0.196412, 1.33983, 0.495468]\nf_753: 8151.40012 [0.0574392, -1.05151, -1.05744, 0.320326, -2.10492, 0.196402, 1.33985, 0.495467]\nf_754: 8151.40012 [0.0574387, -1.05152, -1.05743, 0.320348, -2.10491, 0.196385, 1.33984, 0.495507]\nf_755: 8151.40019 [0.0574882, -1.05152, -1.05745, 0.320333, -2.10487, 0.196382, 1.33984, 0.495446]\nf_756: 8151.40011 [0.0574375, -1.05152, -1.05745, 0.32036, -2.1049, 0.196413, 1.33982, 0.495441]\nf_757: 8151.4001 [0.0574374, -1.05152, -1.0575, 0.32042, -2.10494, 0.196402, 1.33978, 0.495433]\nf_758: 8151.4001 [0.0574415, -1.05154, -1.05755, 0.320465, -2.10507, 0.196362, 1.33974, 0.495447]\nf_759: 8151.40009 [0.0574462, -1.05156, -1.05758, 0.320493, -2.10516, 0.196319, 1.33973, 0.495395]\nf_760: 8151.40009 [0.0574559, -1.0516, -1.05751, 0.320437, -2.10512, 0.196084, 1.33978, 0.495262]\nf_761: 8151.40009 [0.0574511, -1.05161, -1.05753, 0.320387, -2.1049, 0.19624, 1.33977, 0.495324]\nf_762: 8151.40008 [0.0574441, -1.05162, -1.05756, 0.320547, -2.10479, 0.196245, 1.33972, 0.495389]\nf_763: 8151.40007 [0.0574503, -1.05166, -1.05759, 0.320366, -2.10446, 0.196233, 1.33963, 0.495328]\nf_764: 8151.40008 [0.0574435, -1.05168, -1.05757, 0.320504, -2.10396, 0.196021, 1.33966, 0.49541]\nf_765: 8151.40016 [0.0574992, -1.05167, -1.05756, 0.320202, -2.1046, 0.196243, 1.33971, 0.495431]\nf_766: 8151.40007 [0.0574437, -1.05167, -1.05752, 0.320459, -2.10465, 0.196348, 1.33959, 0.495367]\nf_767: 8151.40006 [0.0574434, -1.05168, -1.05773, 0.320469, -2.10475, 0.196345, 1.33968, 0.495346]\nf_768: 8151.40007 [0.0574489, -1.05169, -1.05774, 0.320367, -2.10495, 0.196327, 1.33958, 0.495439]\nf_769: 8151.40017 [0.0575084, -1.05169, -1.05773, 0.320469, -2.10473, 0.196327, 1.33968, 0.49535]\nf_770: 8151.40006 [0.0574386, -1.05168, -1.05769, 0.320419, -2.10477, 0.196442, 1.33971, 0.495373]\nf_771: 8151.40015 [0.0573849, -1.05168, -1.05771, 0.320512, -2.10477, 0.196345, 1.3397, 0.495324]\nf_772: 8151.40006 [0.0574436, -1.05168, -1.05773, 0.320456, -2.10475, 0.196326, 1.33966, 0.495352]\nf_773: 8151.40006 [0.0574441, -1.05169, -1.05773, 0.320448, -2.10479, 0.196346, 1.33966, 0.495315]\nf_774: 8151.40006 [0.0574436, -1.05169, -1.05773, 0.320482, -2.10483, 0.196358, 1.33968, 0.495317]\nf_775: 8151.40006 [0.0574436, -1.0517, -1.05772, 0.320535, -2.10485, 0.196364, 1.33966, 0.49527]\nf_776: 8151.40006 [0.0574456, -1.05172, -1.05765, 0.320653, -2.10494, 0.196307, 1.33967, 0.495228]\nf_777: 8151.40007 [0.0574666, -1.05172, -1.05769, 0.32058, -2.10486, 0.196311, 1.3397, 0.495263]\nf_778: 8151.40005 [0.0574433, -1.05172, -1.05772, 0.32064, -2.10486, 0.196393, 1.33967, 0.495235]\nf_779: 8151.40005 [0.057439, -1.05173, -1.05783, 0.320546, -2.1048, 0.1965, 1.33965, 0.495318]\nf_780: 8151.40004 [0.0574446, -1.05177, -1.05798, 0.320255, -2.10473, 0.196514, 1.33958, 0.495315]\nf_781: 8151.40003 [0.0574419, -1.05179, -1.05818, 0.320668, -2.10507, 0.196667, 1.33956, 0.495354]\nf_782: 8151.40003 [0.0574334, -1.05183, -1.05808, 0.320983, -2.10518, 0.196815, 1.33957, 0.495352]\nf_783: 8151.40003 [0.0574429, -1.05184, -1.05842, 0.320857, -2.10555, 0.196952, 1.33955, 0.495325]\nf_784: 8151.40002 [0.057439, -1.05188, -1.05852, 0.320967, -2.10525, 0.196901, 1.33949, 0.49537]\nf_785: 8151.40003 [0.0574363, -1.05191, -1.05873, 0.320822, -2.10541, 0.197155, 1.33942, 0.495542]\nf_786: 8151.40008 [0.0574886, -1.05188, -1.05848, 0.320986, -2.10537, 0.196701, 1.33942, 0.495457]\nf_787: 8151.40002 [0.0574346, -1.05189, -1.05856, 0.321131, -2.10535, 0.197024, 1.33956, 0.495313]\nf_788: 8151.40002 [0.057433, -1.05192, -1.05875, 0.321363, -2.10568, 0.197218, 1.33956, 0.495313]\nf_789: 8151.40348 [0.0570734, -1.05189, -1.05856, 0.321264, -2.10524, 0.19703, 1.33958, 0.49542]\nf_790: 8151.40001 [0.0574396, -1.05191, -1.05856, 0.321012, -2.1053, 0.196893, 1.33966, 0.495335]\nf_791: 8151.40001 [0.0574347, -1.05192, -1.05849, 0.321088, -2.10514, 0.196905, 1.33965, 0.495328]\nf_792: 8151.40001 [0.0574377, -1.05194, -1.05864, 0.321091, -2.10526, 0.196938, 1.33961, 0.495325]\nf_793: 8151.4 [0.0574406, -1.05198, -1.05879, 0.321189, -2.10545, 0.196993, 1.3396, 0.495318]\nf_794: 8151.4 [0.0574394, -1.05206, -1.05905, 0.321446, -2.1055, 0.19711, 1.33953, 0.495339]\nf_795: 8151.40124 [0.057225, -1.05199, -1.05857, 0.320892, -2.10554, 0.197078, 1.33941, 0.495221]\nf_796: 8151.4 [0.0574374, -1.05202, -1.05884, 0.321167, -2.10569, 0.197202, 1.33952, 0.495238]\nf_797: 8151.40111 [0.0572458, -1.05202, -1.05895, 0.320982, -2.10581, 0.19706, 1.33952, 0.495206]\nf_798: 8151.40001 [0.0574491, -1.05202, -1.05895, 0.321107, -2.10578, 0.196985, 1.33946, 0.49528]\nf_799: 8151.40001 [0.0574546, -1.05201, -1.05891, 0.32109, -2.10565, 0.19727, 1.3395, 0.495282]\nf_800: 8151.4 [0.0574367, -1.05202, -1.05892, 0.321131, -2.10561, 0.197189, 1.33956, 0.495204]\nf_801: 8151.39999 [0.0574399, -1.05202, -1.05897, 0.321054, -2.10555, 0.197169, 1.3396, 0.495256]\nf_802: 8151.39999 [0.0574407, -1.05203, -1.05899, 0.32087, -2.10539, 0.197105, 1.33959, 0.495277]\nf_803: 8151.39998 [0.057439, -1.05207, -1.05899, 0.320838, -2.10509, 0.197045, 1.33958, 0.495298]\nf_804: 8151.39998 [0.0574451, -1.05211, -1.05921, 0.320761, -2.10543, 0.197166, 1.33958, 0.49529]\nf_805: 8151.39998 [0.0574433, -1.05215, -1.05929, 0.320776, -2.10533, 0.197172, 1.33956, 0.495272]\nf_806: 8151.39997 [0.0574483, -1.05223, -1.05969, 0.320802, -2.10578, 0.197391, 1.33955, 0.495265]\nf_807: 8151.39997 [0.0574465, -1.05231, -1.05988, 0.320697, -2.10557, 0.197442, 1.33949, 0.495309]\nf_808: 8151.41144 [0.0580977, -1.05223, -1.05938, 0.320919, -2.10598, 0.197317, 1.33966, 0.495339]\nf_809: 8151.39997 [0.0574507, -1.05225, -1.05939, 0.321038, -2.10584, 0.197139, 1.33967, 0.495232]\nf_810: 8151.39997 [0.0574441, -1.05228, -1.05955, 0.321253, -2.10547, 0.197261, 1.33972, 0.495257]\nf_811: 8151.4018 [0.0571874, -1.05225, -1.05927, 0.320984, -2.10586, 0.197306, 1.33969, 0.495306]\nf_812: 8151.39996 [0.0574519, -1.05226, -1.05947, 0.320946, -2.10569, 0.197185, 1.33962, 0.495212]\nf_813: 8151.39997 [0.0574606, -1.05227, -1.05961, 0.320827, -2.10563, 0.197046, 1.33965, 0.495308]\nf_814: 8151.39996 [0.0574508, -1.05226, -1.05948, 0.320878, -2.10567, 0.197211, 1.33969, 0.495162]\nf_815: 8151.39996 [0.0574525, -1.05227, -1.05955, 0.320961, -2.10573, 0.197224, 1.33966, 0.495216]\nf_816: 8151.40037 [0.0575759, -1.05226, -1.05945, 0.320933, -2.1057, 0.197186, 1.33963, 0.495224]\nf_817: 8151.39996 [0.0574525, -1.05227, -1.05944, 0.320924, -2.10568, 0.19719, 1.33965, 0.495239]\nf_818: 8151.39996 [0.0574508, -1.05227, -1.05937, 0.320885, -2.10559, 0.197183, 1.33969, 0.495264]\nf_819: 8151.39996 [0.0574509, -1.05228, -1.05929, 0.320919, -2.10538, 0.19708, 1.33963, 0.495193]\nf_820: 8151.39996 [0.0574512, -1.05228, -1.05939, 0.320887, -2.10559, 0.197184, 1.3397, 0.495255]\nf_821: 8151.39996 [0.0574498, -1.05229, -1.05935, 0.320877, -2.10547, 0.197165, 1.33966, 0.495244]\nf_822: 8151.39995 [0.0574517, -1.05229, -1.05928, 0.320894, -2.10545, 0.197081, 1.3397, 0.495241]\nf_823: 8151.39995 [0.0574503, -1.0523, -1.05922, 0.320991, -2.10546, 0.197084, 1.33971, 0.495215]\nf_824: 8151.39995 [0.0574533, -1.05231, -1.0592, 0.321, -2.10545, 0.197008, 1.33973, 0.4952]\n  6.818758 seconds (1.48 M allocations: 94.632 MiB, 0.53% gc time)\nGeneralized Linear Mixed Model fit by minimizing the Laplace approximation to the deviance\n  Formula: r2 ~ 1 + a + g + b + s + (1 | id) + (1 | item)\n  Distribution: Distributions.Bernoulli{Float64}\n  Link: GLM.LogitLink()\n\n  Deviance (Laplace approximation): 8151.4000\n\nVariance components:\n          Column    Variance   Std.Dev.  \n id   (Intercept)  1.79487217 1.33972840\n item (Intercept)  0.24522279 0.49519975\n\n Number of obs: 7584; levels of grouping factors: 316, 24\n\nFixed-effects parameters:\n              Estimate Std.Error  z value P(>|z|)\n(Intercept)   0.197008  0.405161 0.486248  0.6268\na            0.0574533 0.0167575  3.42852  0.0006\ng: M             0.321  0.191261  1.67834  0.0933\nb: scold       -1.0592  0.256755 -4.12535   <1e-4\nb: shout      -2.10545  0.258478 -8.14555  <1e-15\ns: self       -1.05231  0.210261 -5.00476   <1e-6\n\nThis fit provided slightly better results (Laplace approximation to the deviance of 8151.400 versus 8151.583) but took 6 times as long. That is not terribly important when the times involved are a few seconds but can be important when the fit requires many hours or days of computing time.The comparison of the slow and fast fit is available in the optimization summary after the slow fit.julia> mdl1.LMM.optsum\nInitial parameter vector: [0.0543791, -1.01344, -1.0165, 0.304089, -2.0218, 0.208273, 1.33956, 0.496833]\nInitial objective value:  8151.583340132032\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [-Inf, -Inf, -Inf, -Inf, -Inf, -Inf, 0.0, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10]\ninitial_step:             [0.135142, 0.00558444, 0.0637411, 0.0858438, 0.0864116, 0.0702961, 0.05, 0.05]\nmaxfeval:                 -1\n\nFunction evaluations:     824\nFinal parameter vector:   [0.0574533, -1.05231, -1.0592, 0.321, -2.10545, 0.197008, 1.33973, 0.4952]\nFinal objective value:    8151.399954176272\nReturn code:              FTOL_REACHED\n\n"
},

{
    "location": "bootstrap.html#",
    "page": "Parametric bootstrap for linear mixed-effects models",
    "title": "Parametric bootstrap for linear mixed-effects models",
    "category": "page",
    "text": ""
},

{
    "location": "bootstrap.html#Parametric-bootstrap-for-linear-mixed-effects-models-1",
    "page": "Parametric bootstrap for linear mixed-effects models",
    "title": "Parametric bootstrap for linear mixed-effects models",
    "category": "section",
    "text": "Julia is well-suited to implementing bootstrapping and other simulation-based methods for statistical models. The bootstrap! function in the MixedModels package provides an efficient parametric bootstrap for linear mixed-effects models, assuming that the results of interest from each simulated response vector can be incorporated into a vector of floating-point values."
},

{
    "location": "bootstrap.html#The-parametric-bootstrap-1",
    "page": "Parametric bootstrap for linear mixed-effects models",
    "title": "The parametric bootstrap",
    "category": "section",
    "text": "Bootstrapping is a family of procedures for generating sample values of a statistic, allowing for visualization of the distribution of the statistic or for inference from this sample of values.A _parametric bootstrap_ is used with a parametric model, m, that has been fitted to data. The procedure is to simulate n response vectors from m using the estimated parameter values and refit m to these responses in turn, accumulating the statistics of interest at each iteration.The parameters of a linear mixed-effects model as fit by the lmm function are the fixed-effects parameters, β, the standard deviation, σ, of the per-observation noise, and the covariance parameter, θ, that defines the variance-covariance matrices of the random effects.For example, a simple linear mixed-effects model for the Dyestuff data in the lme4 package for R is fit byjulia> using DataFrames, MixedModels, RData, Gadfly\njulia> ds = names!(dat[:Dyestuff], [:Batch, :Yield])\n30×2 DataFrames.DataFrame\n│ Row │ Batch │ Yield  │\n├─────┼───────┼────────┤\n│ 1   │ A     │ 1545.0 │\n│ 2   │ A     │ 1440.0 │\n│ 3   │ A     │ 1440.0 │\n│ 4   │ A     │ 1520.0 │\n│ 5   │ A     │ 1580.0 │\n│ 6   │ B     │ 1540.0 │\n│ 7   │ B     │ 1555.0 │\n│ 8   │ B     │ 1490.0 │\n⋮\n│ 22  │ E     │ 1630.0 │\n│ 23  │ E     │ 1515.0 │\n│ 24  │ E     │ 1635.0 │\n│ 25  │ E     │ 1625.0 │\n│ 26  │ F     │ 1520.0 │\n│ 27  │ F     │ 1455.0 │\n│ 28  │ F     │ 1450.0 │\n│ 29  │ F     │ 1480.0 │\n│ 30  │ F     │ 1445.0 │\n\njulia> m1 = fit(LinearMixedModel, @formula(Yield ~ 1 + (1 | Batch)), ds)\nLinear mixed model fit by maximum likelihood\n Formula: Yield ~ 1 + (1 | Batch)\n   logLik   -2 logLik     AIC        BIC    \n -163.66353  327.32706  333.32706  337.53065\n\nVariance components:\n              Column    Variance  Std.Dev. \n Batch    (Intercept)  1388.3332 37.260344\n Residual              2451.2500 49.510100\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)    1527.5   17.6946  86.326  <1e-99\n\nNow bootstrap the model parametersjulia> results = bootstrap(100_000, m1);\n\njulia> showcompact(names(results))\nSymbol[:obj, :σ, :β₁, :θ₁, :σ₁]The results for each bootstrap replication are stored in the columns of the matrix passed in as the first argument.  A density plot of the bootstrapped values of σ is created as\nplot(results, x = :σ, Geom.density, Guide.xlabel(\"Parametric bootstrap estimates of σ\"))(Image: Density of parametric bootstrap estimates of σ from model m1)(Image: Density of parametric bootstrap estimates of σ₁ from model m1)(Image: Histogram of parametric bootstrap estimates of σ₁ from model m1)The distribution of the bootstrap samples of σ is a bit skewed but not terribly so.  However, the distribution of the bootstrap samples of the estimate of σ₁ is highly skewed and has a spike at zero."
},

{
    "location": "SimpleLMM.html#",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "A Simple, Linear, Mixed-effects Model",
    "category": "page",
    "text": ""
},

{
    "location": "SimpleLMM.html#A-Simple,-Linear,-Mixed-effects-Model-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "A Simple, Linear, Mixed-effects Model",
    "category": "section",
    "text": "In this book we describe the theory behind a type of statistical model called mixed-effects models and the practice of fitting and analyzing such models using the MixedModels package for Julia. These models are used in many different disciplines. Because the descriptions of the models can vary markedly between disciplines, we begin by describing what mixed-effects models are and by exploring a very simple example of one type of mixed model, the linear mixed model.This simple example allows us to illustrate the use of the lmm function in the MixedModels package for fitting such models and other functions  for analyzing the fitted model. We also describe methods of assessing the precision of the parameter estimates and of visualizing the conditional distribution of the random effects, given the observed data."
},

{
    "location": "SimpleLMM.html#Mixed-effects-Models-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Mixed-effects Models",
    "category": "section",
    "text": "Mixed-effects models, like many other types of statistical models, describe a relationship between a response variable and some of the covariates that have been measured or observed along with the response. In mixed-effects models at least one of the covariates is a categorical covariate representing experimental or observational “units” in the data set. In the example from the chemical industry discussed in this chapter, the observational unit is the batch of an intermediate product used in production of a dye. In medical and social sciences the observational units are often the human or animal subjects in the study. In agriculture the experimental units may be the plots of land or the specific plants being studied.In all of these cases the categorical covariate or covariates are observed at a set of discrete levels. We may use numbers, such as subject identifiers, to designate the particular levels that we observed but these numbers are simply labels. The important characteristic of a categorical covariate is that, at each observed value of the response, the covariate takes on the value of one of a set of distinct levels.Parameters associated with the particular levels of a covariate are sometimes called the “effects” of the levels. If the set of possible levels of the covariate is fixed and reproducible we model the covariate using fixed-effects parameters. If the levels that were observed represent a random sample from the set of all possible levels we incorporate random effects in the model.There are two things to notice about this distinction between fixed-effects parameters and random effects. First, the names are misleading because the distinction between fixed and random is more a property of the levels of the categorical covariate than a property of the effects associated with them. Secondly, we distinguish between “fixed-effects parameters”, which are indeed parameters in the statistical model, and “random effects”, which, strictly speaking, are not parameters. As we will see shortly, random effects are unobserved random variables.To make the distinction more concrete, suppose the objective is to model the annual reading test scores for students in a school district and that the covariates recorded with the score include a student identifier and the student’s gender. Both of these are categorical covariates. The levels of the gender covariate, male and female, are fixed. If we consider data from another school district or we incorporate scores from earlier tests, we will not change those levels. On the other hand, the students whose scores we observed would generally be regarded as a sample from the set of all possible students whom we could have observed. Adding more data, either from more school districts or from results on previous or subsequent tests, will increase the number of distinct levels of the student identifier.Mixed-effects models or, more simply, mixed models are statistical models that incorporate both fixed-effects parameters and random effects. Because of the way that we will define random effects, a model with random effects always includes at least one fixed-effects parameter. Thus, any model with random effects is a mixed model.We characterize the statistical model in terms of two random variables: a q-dimensional vector of random effects represented by the random variable mathcalB and an n-dimensional response vector represented by the random variable mathcalY. (We use upper-case “script” characters to denote random variables. The corresponding lower-case upright letter denotes a particular value of the random variable.) We observe the value, bfy, of mathcalY. We do not observe the value, bfb, of mathcalB.When formulating the model we describe the unconditional distribution of mathcalB and the conditional distribution, (mathcalYmathcalB=bfb). The descriptions of the distributions involve the form of the distribution and the values of certain parameters. We use the observed values of the response and the covariates to estimate these parameters and to make inferences about them.That’s the big picture. Now let’s make this more concrete by describing a particular, versatile class of mixed models called linear mixed models and by studying a simple example of such a model. First we describe the data in the example."
},

{
    "location": "SimpleLMM.html#The-Dyestuff-and-Dyestuff2-Data-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "The Dyestuff and Dyestuff2 Data",
    "category": "section",
    "text": "Models with random effects have been in use for a long time. The first edition of the classic book, Statistical Methods in Research and Production, edited by O.L. Davies, was published in 1947 and contained examples of the use of random effects to characterize batch-to-batch variability in chemical processes. The data from one of these examples are available as Dyestuff in the MixedModels package. In this section we describe and plot these data and introduce a second example, the Dyestuff2 data, described in Box and Tiao (1973)."
},

{
    "location": "SimpleLMM.html#The-Dyestuff-Data-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "The Dyestuff Data",
    "category": "section",
    "text": "The data are described in Davies (), the fourth edition of the book mentioned above, as coming froman investigation to find out how much the variation from batch to batch in the quality of an intermediate product (H-acid) contributes to the variation in the yield of the dyestuff (Naphthalene Black 12B) made from it. In the experiment six samples of the intermediate, representing different batches of works manufacture, were obtained, and five preparations of the dyestuff were made in the laboratory from each sample. The equivalent yield of each preparation as grams of standard colour was determined by dye-trial.First attach the packages to be usedjulia> using DataFrames, Distributions, Gadfly, GLM, MixedModels, RData, RCall\nand allow for unqualified names for some graphics functionsjulia> using Gadfly.Geom: point, line, histogram, density, vline\n\njulia> using Gadfly.Guide: xlabel, ylabel, yticks\nThe Dyestuff data are available in the lme4 package for R. This data frame and others have been stored in saved RData format in the test directory within the MixedModels package.Access the Dyestuff datajulia> const dat = convert(Dict{Symbol,DataFrame}, load(Pkg.dir(\"MixedModels\", \"test\", \"dat.rda\")));\n\njulia> dyestuff = dat[:Dyestuff];\n\njulia> describe(dyestuff)\nG\nSummary Stats:\nLength:         30\nType:           CategoricalArrays.CategoricalString{UInt8}\nNumber Unique:  6\n\nY\nSummary Stats:\nMean:           1527.500000\nMinimum:        1440.000000\n1st Quartile:   1468.750000\nMedian:         1530.000000\n3rd Quartile:   1575.000000\nMaximum:        1635.000000\nLength:         30\nType:           Float64\n\nand plot it (Image: Yield versus Batch for the Dyestuff data)In the dotplot we can see that there is considerable variability in yield, even for preparations from the same batch, but there is also noticeable batch-to-batch variability. For example, four of the five preparations from batch F provided lower yields than did any of the preparations from batches B, C, and E.Recall that the labels for the batches are just labels and that their ordering is arbitrary. In a plot, however, the order of the levels influences the perception of the pattern. Rather than providing an arbitrary pattern it is best to order the levels according to some criterion for the plot. In this case a good choice is to order the batches by increasing mean yield, which can be easily done in R.julia> dyestuffR = rcopy(R\"within(lme4::Dyestuff, Batch <- reorder(Batch, Yield, mean))\");\n\njulia> plot(dyestuffR, x = :Yield, y = :Batch, point, xlabel(\"Yield of dyestuff (g)\"), ylabel(\"Batch\"))\nPlot(...)\nIn Sect. [sec:DyestuffLMM] we will use mixed models to quantify the variability in yield between batches. For the time being let us just note that the particular batches used in this experiment are a selection or sample from the set of all batches that we wish to consider. Furthermore, the extent to which one particular batch tends to increase or decrease the mean yield of the process — in other words, the “effect” of that particular batch on the yield — is not as interesting to us as is the extent of the variability between batches. For the purposes of designing, monitoring and controlling a process we want to predict the yield from future batches, taking into account the batch-to-batch variability and the within-batch variability. Being able to estimate the extent to which a particular batch in the past increased or decreased the yield is not usually an important goal for us. We will model the effects of the batches as random effects rather than as fixed-effects parameters."
},

{
    "location": "SimpleLMM.html#The-Dyestuff2-Data-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "The Dyestuff2 Data",
    "category": "section",
    "text": "The data are simulated data presented in Box and Tiao (1973), where the authors stateThese data had to be constructed for although examples of this sort undoubtedly occur in practice they seem to be rarely published.The structure and summary are intentionally similar to those of the Dyestuff data.julia> dyestuff2 = dat[:Dyestuff2];\n\njulia> describe(dyestuff2)\nG\nSummary Stats:\nLength:         30\nType:           CategoricalArrays.CategoricalString{UInt8}\nNumber Unique:  6\n\nY\nSummary Stats:\nMean:           5.665600\nMinimum:        -0.892000\n1st Quartile:   2.765000\nMedian:         5.365000\n3rd Quartile:   8.151000\nMaximum:        13.434000\nLength:         30\nType:           Float64\n\nAs can be seen in a data plot (Image: )the batch-to-batch variability in these data is small compared to the within-batch variability. In some approaches to mixed models it can be difficult to fit models to such data. Paradoxically, small “variance components” can be more difficult to estimate than large variance components.The methods we will present are not compromised when estimating small variance components."
},

{
    "location": "SimpleLMM.html#Fitting-Linear-Mixed-Models-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Fitting Linear Mixed Models",
    "category": "section",
    "text": "Before we formally define a linear mixed model, let’s go ahead and fit models to these data sets using lmm which takes, as its first two arguments, a formula specifying the model and the data with which to evaluate the formula. The structure of the formula will be explained after showing the example."
},

{
    "location": "SimpleLMM.html#A-Model-For-the-Dyestuff-Data-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "A Model For the Dyestuff Data",
    "category": "section",
    "text": "A model allowing for an overall level of the Yield and for an additive random effect for each level of Batch can be fit asjulia> mm1 = fit(LinearMixedModel, @formula(Y ~ 1 + (1 | G)), dyestuff)\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G)\n   logLik   -2 logLik     AIC        BIC    \n -163.66353  327.32706  333.32706  337.53065\n\nVariance components:\n              Column    Variance  Std.Dev. \n G        (Intercept)  1388.3332 37.260344\n Residual              2451.2500 49.510100\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)    1527.5   17.6946  86.326  <1e-99\n\nAs shown in the summary of the model fit, the default estimation criterion is maximum likelihood. The summary provides several other model-fit statistics such as Akaike’s Information Criterion (AIC), Schwarz’s Bayesian Information Criterion (BIC), the log-likelihood at the parameter estimates, and the objective function (negative twice the log-likelihood) at the parameter estimates. These are all statistics related to the model fit and are used to compare different models fit to the same data.The third section is the table of estimates of parameters associated with the random effects. There are two sources of variability in this model, a batch-to-batch variability in the level of the response and the residual or per-observation variability — also called the within-batch variability. The name “residual” is used in statistical modeling to denote the part of the variability that cannot be explained or modeled with the other terms. It is the variation in the observed data that is “left over” after determining the estimates of the parameters in the other parts of the model.Some of the variability in the response is associated with the fixed-effects terms. In this model there is only one such term, labeled the (Intercept). The name “intercept”, which is better suited to models based on straight lines written in a slope/intercept form, should be understood to represent an overall “typical” or mean level of the response in this case. (For those wondering about the parentheses around the name, they are included so that a user cannot accidentally name a variable in conflict with this name.) The line labeled Batch in the random effects table shows that the random effects added to the intercept term, one for each level of the factor, are modeled as random variables whose unconditional variance is estimated as 1388.33 g^2. The corresponding standard deviations is 37.26 g for the ML fit.Note that the last column in the random effects summary table is the estimate of the variability expressed as a standard deviation rather than as a variance. These are provided because it is usually easier to visualize the variability in standard deviations, which are on the scale of the response, than it is to visualize the magnitude of a variance. The values in this column are a simple re-expression (the square root) of the estimated variances. Do not confuse them with the standard errors of the variance estimators, which are not given here. As described in later sections, standard errors of variance estimates are generally not useful because the distribution of the estimator of a variance is skewed - often badly skewed.The line labeled Residual in this table gives the estimate, 2451.25 g^2, of the variance of the residuals and the corresponding standard deviation, 49.51 g. In written descriptions of the model the residual variance parameter is written sigma^2 and the variance of the random effects is sigma_1^2. Their estimates are widehatsigma^2 and widehatsigma_1^2The last line in the random effects table states the number of observations to which the model was fit and the number of levels of any “grouping factors” for the random effects. In this case we have a single random effects term, (1 | Batch), in the model formula and the grouping factor for that term is Batch. There will be a total of six random effects, one for each level of Batch.The final part of the printed display gives the estimates and standard errors of any fixed-effects parameters in the model. The only fixed-effects term in the model formula is the (Intercept). The estimate of this parameter is 1527.5 g. The standard error of the intercept estimate is 17.69 g."
},

{
    "location": "SimpleLMM.html#A-Model-For-the-Dyestuff2-Data-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "A Model For the Dyestuff2 Data",
    "category": "section",
    "text": "Fitting a similar model to the dyestuff2 data produces an estimate widehatsigma_1^2=0.julia> mm2 = fit(LinearMixedModel, @formula(Y ~ 1 + (1 | G)), dyestuff2)\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G)\n   logLik   -2 logLik     AIC        BIC    \n -81.436518 162.873037 168.873037 173.076629\n\nVariance components:\n              Column    Variance  Std.Dev. \n G        (Intercept)   0.000000 0.0000000\n Residual              13.346099 3.6532314\n Number of obs: 30; levels of grouping factors: 6\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)    5.6656  0.666986 8.49433  <1e-16\n\nAn estimate of 0 for sigma_1 does not mean that there is no variation between the groups. Indeed Fig. [fig:Dyestuff2dot] shows that there is some small amount of variability between the groups. The estimate, widehatsigma_1, is a measure of the “between-group” variability that is in excess of the variability induced by the \"within-group\" or residual variability in the responses.  If 30 observations were simulated from a \"normal\" (also called \"Gaussian\") distribution and divided arbitrarily into 6 groups of 5, a plot of the data would look very much like Fig. [fig:Dyestuff2dot].  (In fact, it is likely that this is how that data set was generated.) It is only where there is excess variability between the groups that widehatsigma_10. Obtaining widehatsigma_1=0 is not a mistake; it is simply a statement about the data and the model.The important point to take away from this example is the need to allow for the estimates of variance components that are zero. Such a model is said to be singular, in the sense that it corresponds to a linear model in which we have removed the random effects associated with Batch. Singular models can and do occur in practice. Even when the final fitted model is not singular, we must allow for such models to be expressed when determining the parameter estimates through numerical optimization.It happens that this model corresponds to the linear model (i.e. a model with fixed-effects only)julia> lm1 = lm(@formula(Y ~ 1), dyestuff2)\nStatsModels.DataFrameRegressionModel{GLM.LinearModel{GLM.LmResp{Array{Float64,1}},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Array{Float64,2}}\n\nFormula: Y ~ +1\n\nCoefficients:\n             Estimate Std.Error t value Pr(>|t|)\n(Intercept)    5.6656  0.678388 8.35156    <1e-8\n\nThe log-likelihood for this modeljulia> loglikelihood(lm1)\n-81.43651832691287\nis the same as that of fm2. The standard error of the intercept in lm1 is a bit larger than that of fm2 because the estimate of the residual variance is evaluated differently in the linear model."
},

{
    "location": "SimpleLMM.html#Further-Assessment-of-the-Fitted-Models-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Further Assessment of the Fitted Models",
    "category": "section",
    "text": "The parameter estimates in a statistical model represent our “best guess” at the unknown values of the model parameters and, as such, are important results in statistical modeling. However, they are not the whole story. Statistical models characterize the variability in the data and we must assess the effect of this variability on the parameter estimates and on the precision of predictions made from the model.In Sect. [sec:variability] we introduce a method of assessing variability in parameter estimates using the “profiled log-likelihood” and in Sect. [sec:assessRE] we show methods of characterizing the conditional distribution of the random effects given the data. Before we get to these sections, however, we should state in some detail the probability model for linear mixed-effects and establish some definitions and notation. In particular, before we can discuss profiling the log-likelihood, we should define the log-likelihood. We do that in the next section."
},

{
    "location": "SimpleLMM.html#The-Linear-Mixed-effects-Probability-Model-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "The Linear Mixed-effects Probability Model",
    "category": "section",
    "text": "In explaining some of parameter estimates related to the random effects we have used terms such as “unconditional distribution” from the theory of probability. Before proceeding further we clarify the linear mixed-effects probability model and define several terms and concepts that will be used throughout the book. Readers who are more interested in practical results than in the statistical theory should feel free to skip this section."
},

{
    "location": "SimpleLMM.html#Definitions-and-Results-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Definitions and Results",
    "category": "section",
    "text": "In this section we provide some definitions and formulas without derivation and with minimal explanation, so that we can use these terms in what follows. In Chap. [chap:computational] we revisit these definitions providing derivations and more explanation.As mentioned in Sect. [sec:memod], a mixed model incorporates two random variables: mathcalB, the q-dimensional vector of random effects, and mathcalY, the n-dimensional response vector. In a linear mixed model the unconditional distribution of mathcalB and the conditional distribution, (mathcalY  mathcalB=bfb), are both multivariate Gaussian distributions,\\begin{aligned}   (\\mathcal{Y} | \\mathcal{B}=\\bf{b}) &\\sim\\mathcal{N}(\\bf{ X\\beta + Z b},\\sigma^2\\bf{I})\\\\\n  \\mathcal{B}&\\sim\\mathcal{N}(\\bf{0},\\Sigma_\\theta) . \\end{aligned}The conditional mean of mathcal Y, given mathcal B=bf b, is the linear predictor, bf Xbfbeta+bf Zbf b, which depends on the p-dimensional fixed-effects parameter, bf beta, and on bf b. The model matrices, bf X and bf Z, of dimension ntimes p and ntimes q, respectively, are determined from the formula for the model and the values of covariates. Although the matrix bf Z can be large (i.e. both n and q can be large), it is sparse (i.e. most of the elements in the matrix are zero).The relative covariance factor, Lambda_theta, is a qtimes q lower-triangular matrix, depending on the variance-component parameter, bftheta, and generating the symmetric qtimes q variance-covariance matrix, Sigma_theta, as\\begin{equation}   \\Sigma_\\theta=\\sigma^2\\Lambda_\\theta\\Lambda_\\theta\' \\end{equation}The spherical random effects, mathcalUsimmathcalN(bf 0sigma^2bf I_q), determine mathcal B according to\\begin{equation}   \\mathcal{B}=\\Lambda_\\theta\\mathcal{U}. \\end{equation}The penalized residual sum of squares (PRSS),\\begin{equation}   r^2(\\theta,\\beta,{\\bf u})=\\|{\\bf y} -{\\bf X}\\beta -{\\bf Z}\\Lambda_\\theta{\\bf u}\\|^2+\\|{\\bf u}\\|^2, \\end{equation}is the sum of the residual sum of squares, measuring fidelity of the model to the data, and a penalty on the size of bf u, measuring the complexity of the model. Minimizing r^2 with respect to bf u, \\begin{equation}   r^2_{\\beta,\\theta} =\\min_{\\bf u}\\left{\\|{\\bf y} -{\\bf X}{\\beta} -{\\bf Z}\\Lambda_\\theta{\\bf u}\\|^2+\\|{\\bf u}\\|^2\\right} \\end{equation} is a direct (i.e. non-iterative) computation. The particular method used to solve this generates a blocked Choleksy factor, bf L_theta, which is an lower triangular qtimes q matrix satisfying \\begin{equation}   {\\bf L}_\\theta{\\bf L}_\\theta\'=\\Lambda_\\theta\'{\\bf Z}\'{\\bf Z}\\Lambda_\\theta+{\\bf I}_q . \\end{equation} where bf I_q is the qtimes q identity matrix.Negative twice the log-likelihood of the parameters, given the data, bf y, is\\begin{equation} d({\\bf\\theta},{\\bf\\beta},\\sigma|{\\bf y}) =n\\log(2\\pi\\sigma^2)+\\log(|{\\bf L}_\\theta|^2)+\\frac{r^2_{\\beta,\\theta}}{\\sigma^2}. \\end{equation}where bf L_theta denotes the determinant of bf L_theta. Because bf L_theta is triangular, its determinant is the product of its diagonal elements.Negative twice the log-likelihood will be called the objective in what follows. It is the value to be minimized by the parameter estimates.  It is, up to an additive factor, the deviance of the parameters.  Unfortunately, it is not clear what the additive factor should be in the case of linear mixed models.  In many applications, however, it is not the deviance of the model that is of interest as much the change in the deviance between two fitted models.  When calculating the change in the deviance the additive factor will cancel out so the change in the deviance when comparing models is the same as the change in this objective.Because the conditional mean, bfmu_mathcal Ymathcal B=bf b=bf Xbfbeta+bf ZLambda_thetabf u, is a linear function of both bfbeta and bf u, minimization of the PRSS with respect to both bfbeta and bf u to produce\\begin{equation} r^2_\\theta =\\min_{{\\bf\\beta},{\\bf u}}\\left{\\|{\\bf y} -{\\bf X}{\\bf\\beta} -{\\bf Z}\\Lambda_\\theta{\\bf u}\\|^2+\\|{\\bf u}\\|^2\\right} \\end{equation}is also a direct calculation. The values of bf u and bfbeta that provide this minimum are called, respectively, the conditional mode, tildebf u_theta, of the spherical random effects and the conditional estimate, widehatbfbeta_theta, of the fixed effects. At the conditional estimate of the fixed effects the objective is\\begin{equation} d({\\bf\\theta},\\widehat{\\beta}_\\theta,\\sigma|{\\bf y}) =n\\log(2\\pi\\sigma^2)+\\log(|{\\bf L}_\\theta|^2)+\\frac{r^2_\\theta}{\\sigma^2}. \\end{equation}Minimizing this expression with respect to sigma^2 produces the conditional estimate\\begin{equation} \\widehat{\\sigma^2}_\\theta=\\frac{r^2_\\theta}{n} \\end{equation}which provides the profiled log-likelihood on the deviance scale as\\begin{equation} \\tilde{d}(\\theta|{\\bf y})=d(\\theta,\\widehat{\\beta}_\\theta,\\widehat{\\sigma}_\\theta|{\\bf y}) =\\log(|{\\bf L}_\\theta|^2)+n\\left[1+\\log\\left(\\frac{2\\pi r^2_\\theta}{n}\\right)\\right], \\end{equation} a function of bftheta alone.The MLE of bftheta, written widehatbftheta, is the value that minimizes this profiled objective. We determine this value by numerical optimization. In the process of evaluating tilded(widehatthetabf y) we determine widehatbeta=widehatbeta_widehattheta, tildebf u_widehattheta and r^2_widehattheta, from which we can evaluate widehatsigma=sqrtr^2_widehatthetan.The elements of the conditional mode of mathcal B, evaluated at the parameter estimates,\\begin{equation} \\tilde{\\bf b}_{\\widehat{\\theta}}= \\Lambda_{\\widehat{\\theta}}\\tilde{\\bf u}_{\\widehat{\\theta}} \\end{equation}are sometimes called the best linear unbiased predictors or BLUPs of the random effects. Although BLUPs an appealing acronym, I don’t find the term particularly instructive (what is a “linear unbiased predictor” and in what sense are these the “best”?) and prefer the term “conditional modes”, because these are the values of bf b that maximize the density of the conditional distribution mathcalB  mathcalY = bf y. For a linear mixed model, where all the conditional and unconditional distributions are Gaussian, these values are also the conditional means."
},

{
    "location": "SimpleLMM.html#Fields-of-a-LinearMixedModel-object-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Fields of a LinearMixedModel object",
    "category": "section",
    "text": "The optional second argument, verbose, in a call to fit! of a LinearMixedModel object produces output showing the progress of the iterative optimization of tilded(bfthetabf y).julia> mm1 = fit!(LinearMixedModel(@formula(Y ~ 1 + (1 | G)), dyestuff), true);\nf_1: 327.76702 [1.0]\nf_2: 331.03619 [1.75]\nf_3: 330.64583 [0.25]\nf_4: 327.69511 [0.97619]\nf_5: 327.56631 [0.928569]\nf_6: 327.3826 [0.833327]\nf_7: 327.35315 [0.807188]\nf_8: 327.34663 [0.799688]\nf_9: 327.341 [0.792188]\nf_10: 327.33253 [0.777188]\nf_11: 327.32733 [0.747188]\nf_12: 327.32862 [0.739688]\nf_13: 327.32706 [0.752777]\nf_14: 327.32707 [0.753527]\nf_15: 327.32706 [0.752584]\nf_16: 327.32706 [0.752509]\nf_17: 327.32706 [0.752591]\nf_18: 327.32706 [0.752581]\nThe algorithm converges after 18 function evaluations to a profiled deviance of 327.32706 at theta=0752581. In this model the parameter theta is of length 1, the single element being the ratio sigma_1sigma.Whether or not verbose output is requested, the optsum field of a LinearMixedModel contains information on the optimization.  The various tolerances or the optimizer name can be changed between creating a LinearMixedModel and calling fit! on it to exert finer control on the optimization process.julia> mm1.optsum\nInitial parameter vector: [1.0]\nInitial objective value:  327.7670216246183\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10]\ninitial_step:             [0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     18\nFinal parameter vector:   [0.752581]\nFinal objective value:    327.3270598811364\nReturn code:              FTOL_REACHED\n\nThe full list of fields in a LinearMixedModel object isjulia> showcompact(fieldnames(LinearMixedModel))\nSymbol[:formula, :trms, :sqrtwts, :A, :L, :optsum]The formula field is a copy of the model formulajulia> mm1.formula\nFormula: Y ~ 1 + (1 | G)\nThe mf field is a ModelFrame constructed from the formula and data arguments to lmm. It contains a DataFrame formed by reducing the data argument to only those columns needed to evaluate the formula and only those rows that have no missing data. It also contains information on the terms in the model formula and on any \"contrasts\" associated with categorical variables in the fixed-effects terms.The trms field is a vector of numerical objects representing the terms in the model, including the response vector. As the names imply, the sqrtwts and wttrms fields are for incorporating case weights. These fields are not often used when fitting linear mixed models but are vital to the process of fitting a generalized linear mixed model, described in Chapter [sec:glmm].  When used, sqrtwts is a diagonal matrix of size n. A size of 0 indicates weights are not used.julia> mm1.sqrtwts\n0-element Array{Float64,1}\nThe trms field is a vector of length ge 3.julia> length(mm1.trms)\n3\nThe last two elements are bf X, the ntimes p model matrix for the fixed-effects parameters, bfbeta, and bf y, the response vector stored as a matrix of size ntimes 1.  In mm1, bf X consists of a single column of 1\'sjulia> mm1.trms[end - 1]\nMixedModels.MatrixTerm{Float64,Array{Float64,2}}([1.0; 1.0; … ; 1.0; 1.0], [1.0; 1.0; … ; 1.0; 1.0], [1], 1, String[\"(Intercept)\"])\njulia> mm1.trms[end]\nMixedModels.MatrixTerm{Float64,Array{Float64,2}}([1545.0; 1440.0; … ; 1480.0; 1445.0], [1545.0; 1440.0; … ; 1480.0; 1445.0], [1], 0, String[\"\"])\nThe elements of trms before the last two represent vertical sections of bf Z associated with the random effects terms in the model.  In mm1 there is only one random effects term, (1 | Batch), and bf Z has only one section, the one generated by this term, of type ScalarReMat.julia> mm1.trms[1]\nMixedModels.ScalarFactorReTerm{Float64,String,UInt8}(CategoricalArrays.CategoricalString{UInt8}[\"A\", \"A\", \"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"B\"  …  \"E\", \"E\", \"E\", \"E\", \"E\", \"F\", \"F\", \"F\", \"F\", \"F\"], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], :G, String[\"(Intercept)\"], 0.7525806571450242)\nIn practice these matrices are stored in a highly condensed form because, in some models, they can be very large. In small examples the structure is more obvious when the ScalarReMat is converted to a sparse or a dense matrix.julia> sparse(mm1.trms[1])\n30×6 SparseMatrixCSC{Float64,Int32} with 30 stored entries:\n  [1 ,  1]  =  1.0\n  [2 ,  1]  =  1.0\n  [3 ,  1]  =  1.0\n  [4 ,  1]  =  1.0\n  [5 ,  1]  =  1.0\n  [6 ,  2]  =  1.0\n  [7 ,  2]  =  1.0\n  ⋮\n  [23,  5]  =  1.0\n  [24,  5]  =  1.0\n  [25,  5]  =  1.0\n  [26,  6]  =  1.0\n  [27,  6]  =  1.0\n  [28,  6]  =  1.0\n  [29,  6]  =  1.0\n  [30,  6]  =  1.0\njulia> full(mm1.trms[1])\n30×6 Array{Float64,2}:\n 1.0  0.0  0.0  0.0  0.0  0.0\n 1.0  0.0  0.0  0.0  0.0  0.0\n 1.0  0.0  0.0  0.0  0.0  0.0\n 1.0  0.0  0.0  0.0  0.0  0.0\n 1.0  0.0  0.0  0.0  0.0  0.0\n 0.0  1.0  0.0  0.0  0.0  0.0\n 0.0  1.0  0.0  0.0  0.0  0.0\n 0.0  1.0  0.0  0.0  0.0  0.0\n 0.0  1.0  0.0  0.0  0.0  0.0\n 0.0  1.0  0.0  0.0  0.0  0.0\n ⋮                        ⋮  \n 0.0  0.0  0.0  0.0  1.0  0.0\n 0.0  0.0  0.0  0.0  1.0  0.0\n 0.0  0.0  0.0  0.0  1.0  0.0\n 0.0  0.0  0.0  0.0  1.0  0.0\n 0.0  0.0  0.0  0.0  0.0  1.0\n 0.0  0.0  0.0  0.0  0.0  1.0\n 0.0  0.0  0.0  0.0  0.0  1.0\n 0.0  0.0  0.0  0.0  0.0  1.0\n 0.0  0.0  0.0  0.0  0.0  1.0\nThe A field is a representation of the blocked, square, symmetric matrix bf A = Z  X  yZ  X  y. Only the upper triangle of A is stored. The number of blocks of the rows and columns of A is the number of vertical sections of bf Z (i.e. the number of random-effects terms) plus 2.julia> nblocks(mm1.A)\n(3, 3)\njulia> mm1.A[Block(1, 1)]\n6×6 Diagonal{Float64}:\n 5.0   ⋅    ⋅    ⋅    ⋅    ⋅ \n  ⋅   5.0   ⋅    ⋅    ⋅    ⋅ \n  ⋅    ⋅   5.0   ⋅    ⋅    ⋅ \n  ⋅    ⋅    ⋅   5.0   ⋅    ⋅ \n  ⋅    ⋅    ⋅    ⋅   5.0   ⋅ \n  ⋅    ⋅    ⋅    ⋅    ⋅   5.0\njulia> mm1.A[Block(2, 1)]\n1×6 Array{Float64,2}:\n 5.0  5.0  5.0  5.0  5.0  5.0\njulia> mm1.A[Block(2, 2)]\n1×1 Array{Float64,2}:\n 30.0\njulia> mm1.A[Block(3, 1)]\n1×6 Array{Float64,2}:\n 7525.0  7640.0  7820.0  7490.0  8000.0  7350.0\njulia> mm1.A[Block(3, 2)]\n1×1 Array{Float64,2}:\n 45825.0\njulia> mm1.A[Block(3, 3)]\n1×1 Array{Float64,2}:\n 7.01129e7\n"
},

{
    "location": "SimpleLMM.html#Fields-modified-during-the-optimization-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Fields modified during the optimization",
    "category": "section",
    "text": "Changing the value of theta changes the Lambda field. (Note: to input a symbol like Lambda in a Jupyter code cell or in the Julia read-eval-print loop (REPL), type \\Lambda followed by a tab character.  Such \"latex completions\" are available for many UTF-8 characters used in Julia.)  The matrix Lambda has a special structure.  It is a block diagonal matrix where the diagonal blocks are Kronecker products of an identity matrix and a (small) lower triangular matrix.  The diagonal blocks correspond to the random-effects terms.  For a scalar random-effects term, like (1 | Batch) the diagonal block is the Kronecker product of an identity matrix and a 1times 1 matrix.  This result in this case is just a multiple of the identity matrix.It is not necessary to store the full Lambda matrix.  Storing the small lower-triangular matrices is sufficient.julia> getΛ(mm1)\n1-element Array{Float64,1}:\n 0.752581\nThe L field is a blocked matrix like the A field containing the upper Cholesky factor of\\begin{bmatrix}   \\bf{\\Lambda\'Z\'Z\\Lambda + I} & \\bf{\\Lambda\'Z\'X} & \\bf{\\Lambda\'Z\'y} \\\n  \\bf{X\'Z\\Lambda} & \\bf{X\'X} & \\bf{X\'y} \\\n  \\bf{y\'Z\\Lambda} & \\bf{y\'Z} & \\bf{y\'y} \\end{bmatrix}   julia> mm1.L\n8×8 LowerTriangular{Float64,BlockArrays.BlockArray{Float64,2,AbstractArray{Float64,2}}}:\n    1.95752      ⋅           ⋅       …      ⋅           ⋅          ⋅   \n    0.0         1.95752      ⋅              ⋅           ⋅          ⋅   \n    0.0         0.0         1.95752         ⋅           ⋅          ⋅   \n    0.0         0.0         0.0             ⋅           ⋅          ⋅   \n    0.0         0.0         0.0             ⋅           ⋅          ⋅   \n    0.0         0.0         0.0      …     1.95752      ⋅          ⋅   \n    1.92228     1.92228     1.92228        1.92228     2.79804     ⋅   \n 2893.03     2937.24     3006.45        2825.75     4274.01     271.178\njulia> mm1.L.data[Block(1, 1)]\n6×6 Diagonal{Float64}:\n 1.95752   ⋅        ⋅        ⋅        ⋅        ⋅     \n  ⋅       1.95752   ⋅        ⋅        ⋅        ⋅     \n  ⋅        ⋅       1.95752   ⋅        ⋅        ⋅     \n  ⋅        ⋅        ⋅       1.95752   ⋅        ⋅     \n  ⋅        ⋅        ⋅        ⋅       1.95752   ⋅     \n  ⋅        ⋅        ⋅        ⋅        ⋅       1.95752\njulia> mm1.L.data[Block(2, 1)]\n1×6 Array{Float64,2}:\n 1.92228  1.92228  1.92228  1.92228  1.92228  1.92228\njulia> mm1.L.data[Block(2, 2)]\n1×1 Array{Float64,2}:\n 2.79804\njulia> mm1.L.data[Block(3, 1)]\n1×6 Array{Float64,2}:\n 2893.03  2937.24  3006.45  2879.58  3075.65  2825.75\njulia> mm1.L.data[Block(3, 2)]\n1×1 Array{Float64,2}:\n 4274.01\njulia> mm1.L.data[Block(3, 3)]\n1×1 Array{Float64,2}:\n 271.178\nAll the information needed to evaluate the profiled log-likelihood is available in the R field; log(bf R_theta^2) isjulia> 2 * sum(log.(diag(mm1.L.data[Block(1,1)])))\n8.060146149034855\nIt can also be evaluated as logdet(mm1) or 2 * logdet(mm1.R[1, 1])julia> logdet(mm1) == (2*logdet(mm1.L.data[Block(1, 1)])) == (2*sum(log.(diag(mm1.L.data[Block(1, 1)]))))\ntrue\nThe penalized residual sum of squares is the square of the single element of the lower-right block, R[3, 3] in this casejulia> abs2(mm1.L.data[Block(3, 3)][1, 1])\n73537.50101605429\njulia> pwrss(mm1)\n73537.50101605429\nThe objective isjulia> logdet(mm1) + nobs(mm1) * (1 + log(2π * pwrss(mm1) / nobs(mm1)))\n327.3270598811364\n"
},

{
    "location": "SimpleLMM.html#Assessing-variability-of-parameter-estimates-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Assessing variability of parameter estimates",
    "category": "section",
    "text": ""
},

{
    "location": "SimpleLMM.html#Parametric-bootstrap-samples-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Parametric bootstrap samples",
    "category": "section",
    "text": "One way to assess the variability of the parameter estimates is to generate a parametric bootstrap sample from the model.  The technique is to simulate response vectors from the model at the estimated parameter values and refit the model to each of these simulated responses, recording the values of the parameters.  The bootstrap method for these models performs these simulations and returns 4 arrays: a vector of objective (negative twice the log-likelihood) values, a vector of estimates of sigma^2, a matrix of estimates of the fixed-effects parameters and a matrix of the estimates of the relative covariance parameters.  In this case there is only one fixed-effects parameter and one relative covariance parameter, which is the ratio of the standard deviation of the random effects to the standard deviation of the per-sample noise.First set the random number seed for reproducibility.julia> srand(1234321);\n\njulia> mm1bstp = bootstrap(100000, mm1);\n\njulia> size(mm1bstp)\n(100000, 5)\njulia> showcompact(names(mm1bstp))\nSymbol[:obj, :σ, :β₁, :θ₁, :σ₁]"
},

{
    "location": "SimpleLMM.html#Histograms,-kernel-density-plots-and-quantile-quantile-plots-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Histograms, kernel density plots and quantile-quantile plots",
    "category": "section",
    "text": "I am a firm believer in the value of plotting results before summarizing them. Well chosen plots can provide insights not available from a simple numerical summary. It is common to visualize the distribution of a sample using a histogram, which approximates the shape of the probability density function. The density can also be approximated more smoothly using a kernel density plot. Finally, the extent to which the distribution of a sample can be approximated by a particular distribution or distribution family can be assessed by a quantile-quantile (qq) plot, the most common of which is the normal probability plot.The Gadfly package for Julia uses a \"grammar of graphics\" specification, similar to the ggplot2 package for R.  A histogram or a kernel density plot are describes as geometries and specified by Geom.histogram and Geom.density, respectively.julia> plot(mm1bstp, x = :β₁, histogram)\nPlot(...)\njulia> plot(mm1bstp, x = :σ, histogram)\nPlot(...)\njulia> plot(mm1bstp, x = :σ₁, histogram)\nPlot(...)\nThe last two histograms show that, even if the models are defined in terms of variances, the variance is usually not a good scale on which to assess the variability of the parameter estimates.  The standard deviation or, in some cases, the logarithm of the standard deviation is a more suitable scale.The histogram of sigma_1^2 has a \"spike\" at zero.  Because the value of sigma^2 is never zero, a value of sigma_1^2=0 must correspond to theta=0.  There are several ways to count the zeros in theta1.  The simplest is to use countnz, which counts the non-zeros, and subtrack that value from the total number of values in theta1.julia> length(mm1bstp[:θ₁]) - countnz(mm1bstp[:θ₁])\n10090\nThat is, nearly 1/10 of the theta1 values are zeros.  Because such a spike or pulse will be spread out or diffused in a kernel density plot,julia> plot(mm1bstp, density, x = :θ₁)\nPlot(...)\nsuch a plot is not suitable for a sample of a bounded parameter that includes values on the boundary.The density of the estimates of the other two parameters, beta_1 and sigma, are depicted well in kernel density plots.julia> plot(mm1bstp, density, x = :β₁)\nPlot(...)\njulia> plot(mm1bstp, density, x = :σ)\nPlot(...)\nThe standard approach of summarizing a sample by its mean and standard deviation, or of constructing a confidence interval using the sample mean, the standard error of the mean and quantiles of a t or normal distribution, are based on the assumption that the sample is approximately normal (also called Gaussian) in shape.  A normal probability plot, which plots sample quantiles versus quantiles of the standard normal distribution, mathcalN(01), can be used to assess the validity of this assumption.  If the points fall approximately along a straight line, the assumption of normality should be valid.  Systematic departures from a straight line are cause for concern.In Gadfly a normal probability plot can be  constructed by specifying the statistic to be generated as Stat.qq and either x or y as the distribution Normal(). For the present purposes it is an advantage to put the theoretical quantiles on the x axis.This approach is suitable for small to moderate sample sizes, but not for sample sizes of 10,000.  To smooth the plot and to reduce the size of the plot files, we plot quantiles defined by a sequence of n \"probability points\".  These are constructed by partitioning the interval (0, 1) into n equal-width subintervals and returning the midpoint of each of the subintervals.julia> function ppoints(n)\n    if n ≤ 0\n        throw(ArgumentError(\"n = $n should be positive\"))\n    end\n    width = inv(n)\n    width / 2 : width : one(width)\nend\nppoints (generic function with 1 method)\n\njulia> const ppt250 = ppoints(250)\n0.002:0.004:0.998\nThe kernel density estimate of sigma is more symmetric(Image: )and the normal probability plot of sigma is also reasonably straight.(Image: )The normal probability plot of sigma_1 has a flat section at sigma_1 = 0.(Image: )In terms of the variances, sigma^2 and sigma_1^2, the normal probability plots are(Image: )(Image: )"
},

{
    "location": "SimpleLMM.html#Confidence-intervals-based-on-bootstrap-samples-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Confidence intervals based on bootstrap samples",
    "category": "section",
    "text": "When the distribution of a parameter estimator is close to normal or to a T distribution, symmetric confidence intervals are an appropriate representation of the uncertainty in the parameter estimates.  However, they are not appropriate for skewed and/or bounded estimator distributions, such as those for sigma^2 and sigma_2^1 shown above.The fact that a symmetric confidence interval is not appropriate for sigma^2 should not be surprising.  In an introductory statistics course the calculation of a confidence interval on sigma^2 from a random sample of a normal distribution using quantiles of a chi^2 distribution is often introduced. So a symmetric confidence interval on sigma^2 is inappropriate in the simplest case but is often expected to be appropriate in much more complicated cases, as shown by the fact that many statistical software packages include standard errors of variance component estimates in the output from a mixed model fitting procedure.  Creating confidence intervals in this way is optimistic at best. Completely nonsensical would be another way of characterizing this approach.A more reasonable alternative for constructing a 1 - alpha confidence interval from a bootstrap sample is to report a contiguous interval that contains a 1 - alpha proportion of the sample values.But there are many such intervals.  Suppose that a 95% confidence interval was to be constructed from one of the samples of size 10,000 of bootstrapped values.  To get a contigous interval the sample should be sorted. The sorted sample values, also called the order statistics of the sample, are denoted by a bracketed subscript.  That is, sigma_1 is the smallest value in the sample, sigma_2 is the second smallest, up to sigma_10000, which is the largest.One possible interval containing 95% of the sample is (sigma_1 sigma_9500).  Another is (sigma_2 sigma_9501) and so on up to (sigma_501sigma_10000).  There needs to be a method of choosing one of these intervals.  On approach would be to always choose the central 95% of the sample.  That is, cut off 2.5% of the sample on the left side and 2.5% on the right side.  julia> sigma95 = quantile(mm1bstp[:σ], [0.025, 0.975])\n2-element Array{Float64,1}:\n 35.5837\n 63.099 \nThis approach has the advantage that the endpoints of a 95% interval on sigma^2 are the squares of the endpoints of a 95% interval on sigma.julia> isapprox(abs2.(sigma95), quantile(abs2.(mm1bstp[:σ]), [0.025, 0.975]))\ntrue\nThe intervals are compared with isapprox rather than exact equality because, in floating point arithmetic, it is not always the case that left(sqrtxright)^2 = x.  This comparison can also be expressed in Julia asjulia> abs2.(sigma95) ≈ quantile(abs2.(mm1bstp[:σ]), [0.025, 0.975])\ntrue\nAn alternative approach is to evaluate all of the contiguous intervals containing, say, 95% of the sample and return the shortest shortest such interval.  This is the equivalent of a Highest Posterior Density (HPD) interval sometimes used in Bayesian analysis.  If the procedure is applied to a unimodal (i.e. one that has only one peak or mode) theoretical probability density the resulting interval has the property that the density at the left endpoint is equal to the density at the right endpoint and that the density at any point outside the interval is less than the density at any point inside the interval.  Establishing this equivalence is left as an exercise for the mathematically inclined reader.  (Hint: Start with the interval defined by the \"equal density at the endpoints\" property and consider what happens if you shift that interval while maintaining the same area under the density curve.  You will be replacing a region of higher density by one with a lower density and the interval must become wider to maintain the same area.)With large samples a brute-force enumeration approach works.julia> function hpdinterval(v, level=0.95)\n    n = length(v)\n    if !(0 < level < 1)\n        throw(ArgumentError(\"level = $level must be in (0, 1)\"))\n    end\n    if (lbd = floor(Int, (1 - level) * n)) < 2\n        throw(ArgumentError(\n            \"level = $level is too large from sample size $n\"))\n    end\n    ordstat = sort(v)\n    leftendpts = ordstat[1:lbd]\n    rtendpts = ordstat[(1 + n - lbd):n]\n    (w, ind) = findmin(rtendpts - leftendpts)\n    return [leftendpts[ind], rtendpts[ind]]\nend\nhpdinterval (generic function with 2 methods)\nFor example, the 95% HPD interval calculated from the sample of beta_1 values isjulia> hpdinterval(mm1bstp[:β₁])\n2-element Array{Float64,1}:\n 1493.01\n 1562.08\nwhich is very close to the central probability interval ofjulia> quantile(mm1bstp[:β₁], [0.025, 0.975])\n2-element Array{Float64,1}:\n 1492.85\n 1561.92\nbecause the empirical distribution of the beta_1 sample is very similar to a normal distribution.  In particular, it is more-or-less symmetric and also unimodal.The HPD interval on sigma^2 is julia> hpdinterval(abs2.(mm1bstp[:σ]))\n2-element Array{Float64,1}:\n 1162.81\n 3834.32\nwhich is shifted to the left relative to the central probability intervaljulia> quantile(abs2.(mm1bstp[:σ]), [0.025, 0.975])\n2-element Array{Float64,1}:\n 1266.2 \n 3981.48\nbecause the distribution of the sigma^2 sample is skewed to the right.  The HPD interval will truncate the lower density, long, right tail and include more of the higher density, short, left tail.The HPD interval does not have the property that the endpoints of the interval on sigma^2 are the squares of the endpoints of the intervals on sigma, because \"shorter\" on the scale of sigma does not necessarily correspond to shorter on the scale of sigma^2.julia> sigma95hpd = hpdinterval(mm1bstp[:σ])\n2-element Array{Float64,1}:\n 35.4254\n 62.8875\njulia> abs2.(sigma95hpd)\n2-element Array{Float64,1}:\n 1254.96\n 3954.84\nFinally, a 95% HPD interval on sigma_1 includes the boundary value sigma_1=0.julia> hpdinterval(mm1bstp[:σ₁])\n2-element Array{Float64,1}:\n  0.0   \n 54.5986\nIn fact, the confidence level or coverage probability must be rather small before the boundary value is excludedjulia> hpdinterval(mm1bstp[:σ₁], 0.798)\n2-element Array{Float64,1}:\n  0.0   \n 42.3371\njulia> hpdinterval(mm1bstp[:σ₁], 0.799)\n2-element Array{Float64,1}:\n  0.0   \n 42.3943\n"
},

{
    "location": "SimpleLMM.html#Empirical-cumulative-distribution-function-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Empirical cumulative distribution function",
    "category": "section",
    "text": "The empirical cumulative distribution function (ecdf) of a sample maps the range of the sample onto [0,1] by x → proportion of sample ≤ x.  In general this is a \"step function\", which takes jumps of size 1/length(samp) at each observed sample value.  For large samples, we can plot it as a qq plot where the theoretical quantiles are the probability points and are on the vertical axis.(Image: )The orange lines added to the plot show the construction of the central probability 80% confidence interval on sigma_1 and the red lines show the 80% HPD interval.  Comparing the spacing of the left end points to that of the right end points shows that the HPD interval is shorter, because, in switching from the orange to the red lines, the right end point moves further to the left than does the left end point.The differences in the widths becomes more dramatic on the scale of sigma_1^2(Image: )ADD: similar analysis for mm2"
},

{
    "location": "SimpleLMM.html#Assessing-the-Random-Effects-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Assessing the Random Effects",
    "category": "section",
    "text": "In Sect. [sec:definitions] we mentioned that what are sometimes called the BLUPs (or best linear unbiased predictors) of the random effects, mathcal B, are the conditional modes evaluated at the parameter estimates, calculated as tildeb_widehattheta=Lambda_widehatthetatildeu_widehattheta.These values are often considered as some sort of “estimates” of the random effects. It can be helpful to think of them this way but it can also be misleading. As we have stated, the random effects are not, strictly speaking, parameters—they are unobserved random variables. We don’t estimate the random effects in the same sense that we estimate parameters. Instead, we consider the conditional distribution of mathcal B given the observed data, (mathcal Bmathcal Y=mathbf  y).Because the unconditional distribution, mathcal BsimmathcalN(mathbf  0Sigma_theta) is continuous, the conditional distribution, (mathcal Bmathcal Y=mathbf  y) will also be continuous. In general, the mode of a probability density is the point of maximum density, so the phrase “conditional mode” refers to the point at which this conditional density is maximized. Because this definition relates to the probability model, the values of the parameters are assumed to be known. In practice, of course, we don’t know the values of the parameters (if we did there would be no purpose in forming the parameter estimates), so we use the estimated values of the parameters to evaluate the conditional modes.Those who are familiar with the multivariate Gaussian distribution may recognize that, because both mathcal B and (mathcal Ymathcal B=mathbf  b) are multivariate Gaussian, (mathcal Bmathcal Y=mathbf  y) will also be multivariate Gaussian and the conditional mode will also be the conditional mean of mathcal B, given mathcal Y=mathbf  y. This is the case for a linear mixed model but it does not carry over to other forms of mixed models. In the general case all we can say about tildemathbf    u or tildemathbf  b is that they maximize a conditional density, which is why we use the term “conditional mode” to describe these values. We will only use the term “conditional mean” and the symbol, mathbf mu, in reference to mathrmE(mathcal Ymathcal B=mathbf  b), which is the conditional mean of mathcal Y given mathcal B, and an important part of the formulation of all types of mixed-effects models.The ranef extractor returns the conditional modes.julia> ranef(mm1)  # FIXME return an ordered dict\n1-element Array{Array{Float64,2},1}:\n [-16.6282 0.369516 … 53.5798 -42.4943]\nThe result is an array of matrices, one for each random effects term in the model.  In this case there is only one matrix because there is only one random-effects term, (1 | Batch), in the model. There is only one row in this matrix because the random-effects term, (1 | Batch), is a simple, scalar term.To make this more explicit, random-effects terms in the model formula are those that contain the vertical bar () character. The variable is the grouping factor for the random effects generated by this term. An expression for the grouping factor, usually just the name of a variable, occurs to the right of the vertical bar. If the expression on the left of the vertical bar is , as it is here, we describe the term as a _simple, scalar, random-effects term_. The designation “scalar” means there will be exactly one random effect generated for each level of the grouping factor. A simple, scalar term generates a block of indicator columns — the indicators for the grouping factor — in mathbf Z. Because there is only one random-effects term in this model and because that term is a simple, scalar term, the model matrix, 𝐙, for this model is the indicator matrix for the levels of Batch.In the next chapter we fit models with multiple simple, scalar terms and, in subsequent chapters, we extend random-effects terms beyond simple, scalar terms. When we have only simple, scalar terms in the model, each term has a unique grouping factor and the elements of the list returned by can be considered as associated with terms or with grouping factors. In more complex models a particular grouping factor may occur in more than one term, in which case the elements of the list are associated with the grouping factors, not the terms.Given the data, 𝐲, and the parameter estimates, we can evaluate a measure of the dispersion of (mathcal Bmathcal Y=mathbf y). In the case of a linear mixed model, this is the conditional standard deviation, from which we can obtain a prediction interval. The extractor is named condVar.julia> condVar(mm1)\n1-element Array{Array{Float64,3},1}:\n [362.31]\n\n[362.31]\n\n[362.31]\n\n[362.31]\n\n[362.31]\n\n[362.31]\n"
},

{
    "location": "SimpleLMM.html#Chapter-Summary-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Chapter Summary",
    "category": "section",
    "text": "A considerable amount of material has been presented in this chapter, especially considering the word “simple” in its title (it’s the model that is simple, not the material). A summary may be in order.A mixed-effects model incorporates fixed-effects parameters and random effects, which are unobserved random variables, mathcal B. In a linear mixed model, both the unconditional distribution of mathcal B and the conditional distribution, (mathcal Ymathcal B=mathbf b), are multivariate Gaussian distributions. Furthermore, this conditional distribution is a spherical Gaussian with mean, mathbfmu, determined by the linear predictor, mathbf Zmathbf b+mathbf Xmathbfbeta. That is,\\begin{equation}(\\mathcal Y|\\mathcal B=\\mathbf b)\\sim   \\mathcal{N}(\\mathbf Z\\mathbf b+\\mathbf X\\mathbf\\beta, \\sigma^2\\mathbf I_n) .\\end{equation}The unconditional distribution of mathcal B has mean mathbf 0 and a parameterized qtimes q variance-covariance matrix, Sigma_theta.In the models we considered in this chapter, Sigma_theta, is a simple multiple of the identity matrix, mathbf I_6. This matrix is always a multiple of the identity in models with just one random-effects term that is a simple, scalar term. The reason for introducing all the machinery that we did is to allow for more general model specifications.The maximum likelihood estimates of the parameters are obtained by minimizing the deviance. For linear mixed models we can minimize the profiled deviance, which is a function of mathbftheta only, thereby considerably simplifying the optimization problem.To assess the precision of the parameter estimates, we profile the deviance function with respect to each parameter and apply a signed square root transformation to the likelihood ratio test statistic, producing a profile zeta function for each parameter. These functions provide likelihood-based confidence intervals for the parameters. Profile zeta plots allow us to visually assess the precision of individual parameters. Density plots derived from the profile zeta function provide another way of examining the distribution of the estimators of the parameters.Prediction intervals from the conditional distribution of the random effects, given the observed data, allow us to assess the precision of the random effects."
},

{
    "location": "SimpleLMM.html#Notation-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Notation",
    "category": "section",
    "text": ""
},

{
    "location": "SimpleLMM.html#Random-Variables-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Random Variables",
    "category": "section",
    "text": "mathcal Y\n: The responses (n-dimensional Gaussian)\nmathcal B\n: The random effects on the original scale (q-dimensional Gaussian with mean mathbf 0)\nmathcal U\n: The orthogonal random effects (q-dimensional spherical Gaussian)Values of these random variables are denoted by the corresponding bold-face, lower-case letters: mathbf y, mathbf b and mathbf u. We observe mathbf y. We do not observe mathbf b or mathbf u."
},

{
    "location": "SimpleLMM.html#Parameters-in-the-Probability-Model-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Parameters in the Probability Model",
    "category": "section",
    "text": "mathbfbeta\n: The p-dimension fixed-effects parameter vector.\nmathbftheta\n: The variance-component parameter vector. Its (unnamed) dimension is typically very small. Dimensions of 1, 2 or 3 are common in practice.\nsigma\n: The (scalar) common scale parameter, sigma0. It is called the common scale parameter because it is incorporated in the variance-covariance matrices of both mathcal Y and mathcal U.\nmathbftheta\nThe \"covariance\" parameter vector which determines the qtimes q lower triangular matrix Lambda_theta, called the relative covariance factor, which, in turn, determines the qtimes q sparse, symmetric semidefinite variance-covariance matrix Sigma_theta=sigma^2Lambda_thetaLambda_theta that defines the distribution of mathcal B."
},

{
    "location": "SimpleLMM.html#Model-Matrices-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Model Matrices",
    "category": "section",
    "text": "mathbf X\n: Fixed-effects model matrix of size ntimes p.\nmathbf Z\n: Random-effects model matrix of size ntimes q."
},

{
    "location": "SimpleLMM.html#Derived-Matrices-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Derived Matrices",
    "category": "section",
    "text": "mathbf L_theta\n: The sparse, lower triangular Cholesky factor of Lambda_thetamathbf Zmathbf ZLambda_theta+mathbf I_q"
},

{
    "location": "SimpleLMM.html#Vectors-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Vectors",
    "category": "section",
    "text": "In addition to the parameter vectors already mentioned, we definemathbf y\n: the n-dimensional observed response vector\nmathbfeta\n: the n-dimension linear predictor,\\begin{equation}   \\mathbf{\\eta=X\\beta+Zb=Z\\Lambda_\\theta u+X\\beta} \\end{equation}mathbfmu\n: the n-dimensional conditional mean of mathcal Y given mathcal B=mathbf b (or, equivalently, given mathcal U=mathbf u)\\begin{equation}   \\mathbf\\mu=\\mathrm{E}[\\mathcal Y|\\mathcal B=\\mathbf b]=\\mathrm{E}[\\mathcal Y|\\mathcal U=\\mathbf u] \\end{equation}tildeu_theta\n: the q-dimensional conditional mode (the value at which the conditional density is maximized) of mathcal U given mathcal Y=mathbf y."
},

{
    "location": "SimpleLMM.html#Exercises-1",
    "page": "A Simple, Linear, Mixed-effects Model",
    "title": "Exercises",
    "category": "section",
    "text": "These exercises and several others in this book use data sets from the package for . You will need to ensure that this package is installed before you can access the data sets.To load a particular data set,or load just the one data setCheck the documentation, the structure () and a summary of the Rail data (Fig. [fig:Raildot]).\nFit a model with as the response and a simple, scalar random-effects term for the variable Rail. Create a dotplot of the conditional modes of the random effects.\nCreate a bootstrap simulation from the model and construct 95% bootstrap-based confidence intervals on the parameters. Is the confidence interval on sigma_1 close to being symmetric about the estimate? Is the corresponding interval on log(sigma_1) close to being symmetric about its estimate?\nCreate the profile zeta plot for this model. For which parameters are there good normal approximations?\nPlot the prediction intervals on the random effects from this model. Do any of these prediction intervals contain zero? Consider the relative magnitudes of widehatsigma_1 and widehatsigma in this model compared to those in model for the data. Should these ratios of sigma_1sigma lead you to expect a different pattern of prediction intervals in this plot than those in Fig. [fig:fm01preddot]?"
},

{
    "location": "MultipleTerms.html#",
    "page": "Models With Multiple Random-effects Terms",
    "title": "Models With Multiple Random-effects Terms",
    "category": "page",
    "text": ""
},

{
    "location": "MultipleTerms.html#Models-With-Multiple-Random-effects-Terms-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "Models With Multiple Random-effects Terms",
    "category": "section",
    "text": "The mixed models considered in the previous chapter had only one random-effects term, which was a simple, scalar random-effects term, and a single fixed-effects coefficient. Although such models can be useful, it is with the facility to use multiple random-effects terms and to use random-effects terms beyond a simple, scalar term that we can begin to realize the flexibility and versatility of mixed models.In this chapter we consider models with multiple simple, scalar random-effects terms, showing examples where the grouping factors for these terms are in completely crossed or nested or partially crossed configurations. For ease of description we will refer to the random effects as being crossed or nested although, strictly speaking, the distinction between nested and non-nested refers to the grouping factors, not the random effects.julia> using DataFrames, Distributions, FreqTables, Gadfly, MixedModels, RData\n\njulia> using Gadfly.Geom: density, histogram, line, point\n\njulia> using Gadfly.Guide: xlabel, ylabel\n\njulia> const dat = convert(Dict{Symbol,DataFrame}, load(Pkg.dir(\"MixedModels\", \"test\", \"dat.rda\")));\n\njulia> const ppt250 = inv(500) : inv(250) : 1.;\n\njulia> const zquantiles = quantile(Normal(), ppt250);\n\njulia> function hpdinterval(v, level=0.95)\n    n = length(v)\n    if !(0 < level < 1)\n        throw(ArgumentError(\"level = $level must be in (0, 1)\"))\n    end\n    if (lbd = floor(Int, (1 - level) * n)) < 2\n        throw(ArgumentError(\n            \"level = $level is too large from sample size $n\"))\n    end\n    ordstat = sort(v)\n    leftendpts = ordstat[1:lbd]\n    rtendpts = ordstat[(1 + n - lbd):n]\n    (w, ind) = findmin(rtendpts - leftendpts)\n    return [leftendpts[ind], rtendpts[ind]]\nend\nhpdinterval (generic function with 2 methods)\n"
},

{
    "location": "MultipleTerms.html#A-Model-With-Crossed-Random-Effects-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "A Model With Crossed Random Effects",
    "category": "section",
    "text": "One of the areas in which the methods in the package for are particularly effective is in fitting models to cross-classified data where several factors have random effects associated with them. For example, in many experiments in psychology the reaction of each of a group of subjects to each of a group of stimuli or items is measured. If the subjects are considered to be a sample from a population of subjects and the items are a sample from a population of items, then it would make sense to associate random effects with both these factors.In the past it was difficult to fit mixed models with multiple, crossed grouping factors to large, possibly unbalanced, data sets. The methods in the package are able to do this. To introduce the methods let us first consider a small, balanced data set with crossed grouping factors."
},

{
    "location": "MultipleTerms.html#The-Penicillin-Data-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "The Penicillin Data",
    "category": "section",
    "text": "The data are derived from Table 6.6, p. 144 of Davies (), where they are described as coming from an investigation toassess the variability between samples of penicillin by the B. subtilis method. In this test method a bulk-innoculated nutrient agar medium is poured into a Petri dish of approximately 90 mm. diameter, known as a plate. When the medium has set, six small hollow cylinders or pots (about 4 mm. in diameter) are cemented onto the surface at equally spaced intervals. A few drops of the penicillin solutions to be compared are placed in the respective cylinders, and the whole plate is placed in an incubator for a given time. Penicillin diffuses from the pots into the agar, and this produces a clear circular zone of inhibition of growth of the organisms, which can be readily measured. The diameter of the zone is related in a known way to the concentration of penicillin in the solution.julia> names(dat[:Penicillin])\n3-element Array{Symbol,1}:\n :Y\n :G\n :H\nof the data, then plot itThe variation in the diameter is associated with the plates and with the samples. Because each plate is used only for the six samples shown here we are not interested in the contributions of specific plates as much as we are interested in the variation due to plates and in assessing the potency of the samples after accounting for this variation. Thus, we will use random effects for the factor. We will also use random effects for the factor because, as in the Dyestuff example, we are more interested in the sample-to-sample variability in the penicillin samples than in the potency of a particular sample.In this experiment each sample is used on each plate. We say that the and factors are crossed, as opposed to nested factors, which we will describe in the next section. By itself, the designation “crossed” just means that the factors are not nested. If we wish to be more specific, we could describe these factors as being completely crossed, which means that we have at least one observation for each combination of a level of G and a level of H. We can see this in Fig. [fig:Penicillindot] and, because there are moderate numbers of levels in these factors, we can check it in a cross-tabulationjulia> freqtable(dat[:Penicillin][:H], dat[:Penicillin][:G])\n6×24 Named Array{Int64,2}\nDim1 ╲ Dim2 │ a  b  c  d  e  f  g  h  i  j  …  o  p  q  r  s  t  u  v  w  x\n────────────┼──────────────────────────────────────────────────────────────\nA           │ 1  1  1  1  1  1  1  1  1  1  …  1  1  1  1  1  1  1  1  1  1\nB           │ 1  1  1  1  1  1  1  1  1  1     1  1  1  1  1  1  1  1  1  1\nC           │ 1  1  1  1  1  1  1  1  1  1     1  1  1  1  1  1  1  1  1  1\nD           │ 1  1  1  1  1  1  1  1  1  1     1  1  1  1  1  1  1  1  1  1\nE           │ 1  1  1  1  1  1  1  1  1  1     1  1  1  1  1  1  1  1  1  1\nF           │ 1  1  1  1  1  1  1  1  1  1  …  1  1  1  1  1  1  1  1  1  1\nLike the Dyestuff data, the factors in the Penicillin data are balanced. That is, there are exactly the same number of observations on each plate and for each sample and, furthermore, there is the same number of observations on each combination of levels. In this case there is exactly one observation for each combination of G, the plate, and H, the sample. We would describe the configuration of these two factors as an unreplicated, completely balanced, crossed design.In general, balance is a desirable but precarious property of a data set. We may be able to impose balance in a designed experiment but we typically cannot expect that data from an observation study will be balanced. Also, as anyone who analyzes real data soon finds out, expecting that balance in the design of an experiment will produce a balanced data set is contrary to “Murphy’s Law”. That’s why statisticians allow for missing data. Even when we apply each of the six samples to each of the 24 plates, something could go wrong for one of the samples on one of the plates, leaving us without a measurement for that combination of levels and thus an unbalanced data set."
},

{
    "location": "MultipleTerms.html#A-Model-For-the-Penicillin-Data-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "A Model For the Penicillin Data",
    "category": "section",
    "text": "A model incorporating random effects for both the plate and the sample is straightforward to specify — we include simple, scalar random effects terms for both these factors.julia> penm = fit(LinearMixedModel, @formula(Y ~ 1 + (1|G) + (1|H)), dat[:Penicillin])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G) + (1 | H)\n   logLik   -2 logLik     AIC        BIC    \n -166.09417  332.18835  340.18835  352.06760\n\nVariance components:\n              Column    Variance  Std.Dev. \n G        (Intercept)  0.7149795 0.8455646\n H        (Intercept)  3.1351924 1.7706474\n Residual              0.3024264 0.5499331\n Number of obs: 144; levels of grouping factors: 24, 6\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   22.9722  0.744596 30.8519  <1e-99\n\nThis model display indicates that the sample-to-sample variability has the greatest contribution, then plate-to-plate variability and finally the “residual” variability that cannot be attributed to either the sample or the plate. These conclusions are consistent with what we see in the data plot (Fig. [fig:Penicillindot]).The prediction intervals on the random effects (Fig. [fig:fm03ranef])confirm that the conditional distribution of the random effects for has much less variability than does the conditional distribution of the random effects for , in the sense that the dots in the bottom panel have less variability than those in the top panel. (Note the different horizontal axes for the two panels.) However, the conditional distribution of the random effect for a particular , say sample F, has less variability than the conditional distribution of the random effect for a particular plate, say plate m. That is, the lines in the bottom panel are wider than the lines in the top panel, even after taking the different axis scales into account. This is because the conditional distribution of the random effect for a particular sample depends on 24 responses while the conditional distribution of the random effect for a particular plate depends on only 6 responses.In chapter [chap:ExamLMM] we saw that a model with a single, simple, scalar random-effects term generated a random-effects model matrix, mathbf Z, that is the matrix of indicators of the levels of the grouping factor. When we have multiple, simple, scalar random-effects terms, as in model , each term generates a matrix of indicator columns and these sets of indicators are concatenated to form the model matrix mathbf Z. The transpose of this matrix, shown in Fig. [fig:fm03Ztimage], contains rows of indicators for each factor.The relative covariance factor, Lambda_theta, (Fig. [fig:fm03LambdaLimage], left panel) is no longer a multiple of the identity. It is now block diagonal, with two blocks, one of size 24 and one of size 6, each of which is a multiple of the identity. The diagonal elements of the two blocks are theta_1 and theta_2, respectively. The numeric values of these parameters can be obtained asjulia> show(getθ(penm))\n[1.53758, 3.21975]or as the Final parameter vector in the opsum field of penmjulia> penm.optsum\nInitial parameter vector: [1.0, 1.0]\nInitial objective value:  364.6267798165433\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [0.0, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10]\ninitial_step:             [0.75, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     44\nFinal parameter vector:   [1.53758, 3.21975]\nFinal objective value:    332.1883486722732\nReturn code:              FTOL_REACHED\n\nThe first parameter is the relative standard deviation of the random effects for plate, which has the value 0.8455646/0.5499331 = 1.53758 at convergence, and the second is the relative standard deviation of the random effects for sample (1.7706475/0.5499331 = 3.21975).Because Lambda_theta is diagonal, the pattern of non-zeros in Lambda_thetamathbf Zmathbf ZLambda_theta+mathbf I will be the same as that in mathbf Zmathbf Z, shown in the middle panel of Fig. [fig:fm03LambdaLimage]. The sparse Cholesky factor, mathbf L, shown in the right panel, is lower triangular and has non-zero elements in the lower right hand corner in positions where mathbf Zmathbf Z has systematic zeros. We say that “fill-in” has occurred when forming the sparse Cholesky decomposition. In this case there is a relatively minor amount of fill but in other cases there can be a substantial amount of fill and we shall take precautions so as to reduce this, because fill-in adds to the computational effort in determining the MLEs or the REML estimates.A bootstrap simulation of the modeljulia> @time penmbstp = bootstrap(10000, penm);\n 13.519157 seconds (17.92 M allocations: 816.905 MiB, 5.69% gc time)\nprovides the density plots(Image: )(Image: )(Image: )julia> plot(penmbstp, x = :σ₂, density, xlabel(\"σ₂\"))\nPlot(...)\nA profile zeta plot (Fig. [fig:fm03prplot]) for the parameters in model(Image: Profile zeta plot of the parameters in model .)[fig:fm03prplot]leads to conclusions similar to those from Fig. [fig:fm1prof] for model in the previous chapter. The fixed-effect parameter, beta_1, for the constant term has symmetric intervals and is over-dispersed relative to the normal distribution. The logarithm of sigma has a good normal approximation but the standard deviations of the random effects, sigma_1 and sigma_2, are skewed. The skewness for sigma_2 is worse than that for sigma_1, because the estimate of sigma_2 is less precise than that of sigma_1, in both absolute and relative senses. For an absolute comparison we compare the widths of the confidence intervals for these parameters.                     2.5 %     97.5 %\n    .sig01       0.6335658  1.1821040\n    .sig02       1.0957893  3.5562919\n    .sigma       0.4858454  0.6294535\n    (Intercept) 21.2666274 24.6778176In a relative comparison we examine the ratio of the endpoints of the interval divided by the estimate.\n               2.5 %   97.5 %\n    .sig01 0.7492746 1.397993\n    .sig02 0.6188634 2.008469The lack of precision in the estimate of sigma_2 is a consequence of only having 6 distinct levels of the factor. The factor, on the other hand, has 24 distinct levels. In general it is more difficult to estimate a measure of spread, such as the standard deviation, than to estimate a measure of location, such as a mean, especially when the number of levels of the factor is small. Six levels are about the minimum number required for obtaining sensible estimates of standard deviations for simple, scalar random effects terms.shows patterns similar to those in Fig. [fig:fm1profpair] for pairs of parameters in model fit to the data. On the zeta scale (panels below the diagonal) the profile traces are nearly straight and orthogonal with the exception of the trace of zeta(sigma_2) on zeta(beta_0) (the horizontal trace for the panel in the (42) position). The pattern of this trace is similar to the pattern of the trace of zeta(sigma_1) on zeta(beta_1) in Fig. [fig:fm1profpair]. Moving beta_0 from its estimate, widehatbeta_0, in either direction will increase the residual sum of squares. The increase in the residual variability is reflected in an increase of one or more of the dispersion parameters. The balanced experimental design results in a fixed estimate of sigma and the extra apparent variability must be incorporated into sigma_1 or sigma_2.Contours in panels of parameter pairs on the original scales (i.e. panels above the diagonal) can show considerable distortion from the ideal elliptical shape. For example, contours in the sigma_2 versus sigma_1 panel (the (12) position) and the log(sigma) versus sigma_2 panel (in the (23) position) are dramatically non-elliptical. However, the distortion of the contours is not due to these parameter estimates depending strongly on each other. It is almost entirely due to the choice of scale for sigma_1 and sigma_2. When we plot the contours on the scale of log(sigma_1) and log(sigma_2) instead (Fig. [fig:lpr03pairs])(Image: Profile pairs plot for the parameters in model fit to the data. In this plot the parameters $\\sigma_1$ and $\\sigma_2$ are on the scale of the natural logarithm, as is the parameter $\\sigma$ in this and other profile pairs plots.)[fig:fm03lprpairs]they are much closer to the elliptical pattern.Conversely, if we tried to plot contours on the scale of sigma_1^2 and sigma_2^2 (not shown), they would be hideously distorted."
},

{
    "location": "MultipleTerms.html#A-Model-With-Nested-Random-Effects-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "A Model With Nested Random Effects",
    "category": "section",
    "text": "In this section we again consider a simple example, this time fitting a model with nested grouping factors for the random effects."
},

{
    "location": "MultipleTerms.html#The-Pastes-Data-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "The Pastes Data",
    "category": "section",
    "text": "The third example from Davies (1972) is described as coming fromdeliveries of a chemical paste product contained in casks where, in addition to sampling and testing errors, there are variations in quality between deliveries …As a routine, three casks selected at random from each delivery were sampled and the samples were kept for reference. …Ten of the delivery batches were sampled at random and two analytical tests carried out on each of the 30 samples.The structure and summary of the data object arejulia> names(dat[:Pastes])\n4-element Array{Symbol,1}:\n :Y\n :H\n :c\n :G\nAs stated in the description in Davies (1972), there are 30 samples, three from each of the 10 delivery batches. We have labelled the levels of the sample factor with the label of the batch factor followed by a, b or c to distinguish the three samples taken from that batch.julia> freqtable(dat[:Pastes][:H], dat[:Pastes][:G])\n10×30 Named Array{Int64,2}\nDim1 ╲ Dim2 │ A:a  A:b  A:c  B:a  B:b  B:c  …  I:a  I:b  I:c  J:a  J:b  J:c\n────────────┼──────────────────────────────────────────────────────────────\nA           │   2    2    2    0    0    0  …    0    0    0    0    0    0\nB           │   0    0    0    2    2    2       0    0    0    0    0    0\nC           │   0    0    0    0    0    0       0    0    0    0    0    0\nD           │   0    0    0    0    0    0       0    0    0    0    0    0\nE           │   0    0    0    0    0    0       0    0    0    0    0    0\nF           │   0    0    0    0    0    0       0    0    0    0    0    0\nG           │   0    0    0    0    0    0       0    0    0    0    0    0\nH           │   0    0    0    0    0    0       0    0    0    0    0    0\nI           │   0    0    0    0    0    0       2    2    2    0    0    0\nJ           │   0    0    0    0    0    0  …    0    0    0    2    2    2\nWhen plotting the strength versus sample and in the data we should remember that we have two strength measurements on each of the 30 samples. It is tempting to use the cask designation (‘a’, ‘b’ and ‘c’) to determine, say, the plotting symbol within a sample. It would be fine to do this within a batch but the plot would be misleading if we used the same symbol for cask ‘a’ in different batches. There is no relationship between cask ‘a’ in batch ‘A’ and cask ‘a’ in batch ‘B’. The labels ‘a’, ‘b’ and ‘c’ are used only to distinguish the three samples within a batch; they do not have a meaning across batches.(Image: Strength of paste preparations according to the and the within the batch. There were two strength measurements on each of the 30 samples; three samples each from 10 batches.)[fig:Pastesplot]In Fig. [fig:Pastesplot] we plot the two strength measurements on each of the samples within each of the batches and join up the average strength for each sample. The perceptive reader will have noticed that the levels of the factors on the vertical axis in this figure, and in Fig. [fig:Dyestuffdot] and [fig:Penicillindot], have been reordered according to increasing average response. In all these cases there is no inherent ordering of the levels of the covariate such as or . Rather than confuse our interpretation of the plot by determining the vertical displacement of points according to a random ordering, we impose an ordering according to increasing mean response. This allows us to more easily check for structure in the data, including undesirable characteristics like increasing variability of the response with increasing mean level of the response.In Fig. [fig:Pastesplot] we order the samples within each batch separately then order the batches according to increasing mean strength.Figure [fig:Pastesplot] shows considerable variability in strength between samples relative to the variability within samples. There is some indication of variability between batches, in addition to the variability induced by the samples, but not a strong indication of a batch effect. For example, batches I and D, with low mean strength relative to the other batches, each contained one sample (I:b and D:c, respectively) that had high mean strength relative to the other samples. Also, batches H and C, with comparatively high mean batch strength, contain samples H:a and C:a with comparatively low mean sample strength. In Sect. [sec:TestingSig2is0] we will examine the need for incorporating batch-to-batch variability, in addition to sample-to-sample variability, in the statistical model."
},

{
    "location": "MultipleTerms.html#Nested-Factors-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "Nested Factors",
    "category": "section",
    "text": "Because each level of occurs with one and only one level of we say that is nested within . Some presentations of mixed-effects models, especially those related to multilevel modeling  or hierarchical linear models , leave the impression that one can only define random effects with respect to factors that are nested. This is the origin of the terms “multilevel”, referring to multiple, nested levels of variability, and “hierarchical”, also invoking the concept of a hierarchy of levels. To be fair, both those references do describe the use of models with random effects associated with non-nested factors, but such models tend to be treated as a special case.The blurring of mixed-effects models with the concept of multiple, hierarchical levels of variation results in an unwarranted emphasis on “levels” when defining a model and leads to considerable confusion. It is perfectly legitimate to define models having random effects associated with non-nested factors. The reasons for the emphasis on defining random effects with respect to nested factors only are that such cases do occur frequently in practice and that some of the computational methods for estimating the parameters in the models can only be easily applied to nested factors.This is not the case for the methods used in the package. Indeed there is nothing special done for models with random effects for nested factors. When random effects are associated with multiple factors exactly the same computational methods are used whether the factors form a nested sequence or are partially crossed or are completely crossed. There is, however, one aspect of nested grouping factors that we should emphasize, which is the possibility of a factor that is implicitly nested within another factor. Suppose, for example, that the factor was defined as having three levels instead of 30 with the implicit assumption that is nested within . It may seem silly to try to distinguish 30 different batches with only three levels of a factor but, unfortunately, data are frequently organized and presented like this, especially in text books. The factor in the data is exactly such an implicitly nested factor. If we cross-tabulate cask and batch        batch\n    cask A B C D E F G H I J\n       a 2 2 2 2 2 2 2 2 2 2\n       b 2 2 2 2 2 2 2 2 2 2\n       c 2 2 2 2 2 2 2 2 2 2we get the impression that the and factors are crossed, not nested. If we know that the cask should be considered as nested within the batch then we should create a new categorical variable giving the batch-cask combination, which is exactly what the factor is. A simple way to create such a factor is to use the interaction operator, ‘’, on the factors. It is advisable, but not necessary, to apply to the result thereby dropping unused levels of the interaction from the set of all possible levels of the factor. (An “unused level” is a combination that does not occur in the data.) A convenient code idiom isorIn a small data set like we can quickly detect a factor being implicitly nested within another factor and take appropriate action. In a large data set, perhaps hundreds of thousands of test scores for students in thousands of schools from hundreds of school districts, it is not always obvious if school identifiers are unique across the entire data set or just within a district. If you are not sure, the safest thing to do is to create the interaction factor, as shown above, so you can be confident that levels of the district:school interaction do indeed correspond to unique schools."
},

{
    "location": "MultipleTerms.html#Fitting-a-Model-With-Nested-Random-Effects-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "Fitting a Model With Nested Random Effects",
    "category": "section",
    "text": "Fitting a model with simple, scalar random effects for nested factors is done in exactly the same way as fitting a model with random effects for crossed grouping factors. We include random-effects terms for each factor, as injulia> pstsm = fit!(lmm(@formula(Y ~ 1 + (1|G) + (1|H)), dat[:Pastes]))\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G) + (1 | H)\n   logLik   -2 logLik     AIC        BIC    \n -123.99723  247.99447  255.99447  264.37184\n\nVariance components:\n              Column    Variance  Std.Dev.  \n G        (Intercept)  8.4336167 2.90406898\n H        (Intercept)  1.1991793 1.09507045\n Residual              0.6780021 0.82340884\n Number of obs: 60; levels of grouping factors: 30, 10\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   60.0533  0.642136 93.5212  <1e-99\n\nNot only is the model specification similar for nested and crossed factors, the internal calculations are performed according to the methods described in Sect. [sec:definitions] for each model type. Comparing the patterns in the matrices Lambda, mathbf Zmathbf Z and mathbf L for this model (Fig. [fig:fm04LambdaLimage]) to those in Fig. [fig:fm03LambdaLimage] shows that models with nested factors produce simple repeated structures along the diagonal of the sparse Cholesky factor, mathbf L. This type of structure has the desirable property that there is no “fill-in” during calculation of the Cholesky factor. In other words, the number of non-zeros in mathbf L is the same as the number of non-zeros in the lower triangle of the matrix being factored, Lambdamathbf Zmathbf ZLambda+mathbf I (which, because Lambda is diagonal, has the same structure as mathbf Zmathbf Z)."
},

{
    "location": "MultipleTerms.html#Assessing-Parameter-Estimates-in-Model-pstsm-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "Assessing Parameter Estimates in Model pstsm",
    "category": "section",
    "text": "The parameter estimates are: widehatsigma_1=2.904, the standard deviation of the random effects for sample; widehatsigma_2=1.095, the standard deviation of the random effects for batch; widehatsigma=0.823, the standard deviation of the residual noise term; and widehatbeta_0=60.053, the overall mean response, which is labeled (Intercept) in these models.The estimated standard deviation for sample is nearly three times as large as that for batch, which confirms what we saw in Fig. [fig:Pastesplot]. Indeed our conclusion from Fig. [fig:Pastesplot] was that there may not be a significant batch-to-batch variability in addition to the sample-to-sample variability.Plots of the prediction intervals of the random effects (Fig. [fig:fm04ranef])(Image: 95% prediction intervals on the random effects for model fit to the data.)[fig:fm04ranef]confirm this impression in that all the prediction intervals for the random effects for contain zero. Furthermore, a bootstrap samplejulia> srand(4321234);\n\njulia> @time pstsbstp = bootstrap(10000, pstsm);\n  9.520945 seconds (13.85 M allocations: 659.111 MiB, 2.39% gc time)\n(Image: )julia> plot(pstsbstp, x = :σ, density, xlabel(\"σ\"))\nPlot(...)\njulia> plot(x = pstsbstp[:σ₁], Geom.density(), Guide.xlabel(\"σ₁\"))\nPlot(...)\njulia> plot(x = pstsbstp[:σ₂], Geom.density(), Guide.xlabel(\"σ₂\"))\nPlot(...)\nand a normal probability plot ofjulia> plot(x = zquantiles, y = quantile(pstsbstp[:σ₂], ppt250), Geom.line,\n    Guide.xlabel(\"Standard Normal Quantiles\"), Guide.ylabel(\"σ₂\"))\nPlot(...)\njulia> count(x -> x < 1.0e-5, pstsbstp[:σ₂])\n3661\nOver 1/3 of the bootstrap samples of sigma_2 are zero.  Even a 50% confidence interval on this parameter will extend to zero.  One way to calculate confidence intervals based on a bootstrap sample is sort the sample and consider all the contiguous intervals that contain, say, 95% of the samples then choose the smallest of these.  For example,julia> hpdinterval(pstsbstp[:σ₂])\n2-element Array{Float64,1}:\n 0.0    \n 2.07348\nprovides the confidence interval(Image: Profile zeta plots for the parameters in model .)[fig:fm04prplot]shows that the even the 50% profile-based confidence interval on sigma_2 extends to zero.Because there are several indications that sigma_2 could reasonably be zero, resulting in a simpler model incorporating random effects for only, we perform a statistical test of this hypothesis."
},

{
    "location": "MultipleTerms.html#Testing-H_0:\\sigma_20-Versus-H_a:\\sigma_20-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "Testing H_0sigma_2=0 Versus H_asigma_20",
    "category": "section",
    "text": "One of the many famous statements attributed to Albert Einstein is “Everything should be made as simple as possible, but not simpler.” In statistical modeling this principal of parsimony is embodied in hypothesis tests comparing two models, one of which contains the other as a special case. Typically, one or more of the parameters in the more general model, which we call the alternative hypothesis, is constrained in some way, resulting in the restricted model, which we call the null hypothesis. Although we phrase the hypothesis test in terms of the parameter restriction, it is important to realize that we are comparing the quality of fits obtained with two nested models. That is, we are not assessing parameter values per se; we are comparing the model fit obtainable with some constraints on parameter values to that without the constraints.Because the more general model, H_a, must provide a fit that is at least as good as the restricted model, H_0, our purpose is to determine whether the change in the quality of the fit is sufficient to justify the greater complexity of model H_a. This comparison is often reduced to a p-value, which is the probability of seeing a difference in the model fits as large as we did, or even larger, when, in fact, H_0 is adequate. Like all probabilities, a p-value must be between 0 and 1. When the p-value for a test is small (close to zero) we prefer the more complex model, saying that we “reject H_0 in favor of H_a”. On the other hand, when the p-value is not small we “fail to reject H_0”, arguing that there is a non-negligible probability that the observed difference in the model fits could reasonably be the result of random chance, not the inherent superiority of the model H_a. Under these circumstances we prefer the simpler model, H_0, according to the principal of parsimony.These are the general principles of statistical hypothesis tests. To perform a test in practice we must specify the criterion for comparing the model fits, the method for calculating the p-value from an observed value of the criterion, and the standard by which we will determine if the p-value is “small” or not. The criterion is called the test statistic, the p-value is calculated from a reference distribution for the test statistic, and the standard for small p-values is called the level of the test.In Sect. [sec:variability] we referred to likelihood ratio tests (LRTs) for which the test statistic is the difference in the deviance. That is, the LRT statistic is d_0-d_a where d_a is the deviance in the more general (H_a) model fit and d_0 is the deviance in the constrained (H_0) model. An approximate reference distribution for an LRT statistic is the chi^2_nu distribution where nu, the degrees of freedom, is determined by the number of constraints imposed on the parameters of H_a to produce H_0.The restricted model fitjulia> pstsm1 = fit!(lmm(@formula(Y ~ 1 + (1|G)), dat[:Pastes]))\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + (1 | G)\n   logLik   -2 logLik     AIC        BIC    \n -124.20085  248.40170  254.40170  260.68473\n\nVariance components:\n              Column    Variance   Std.Dev. \n G        (Intercept)  9.63282135 3.1036787\n Residual              0.67800006 0.8234076\n Number of obs: 60; levels of grouping factors: 30\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   60.0533  0.576536 104.162  <1e-99\n\nis compared to model pstsm withjulia> MixedModels.lrt(pstsm1, pstsm)\n2×4 DataFrames.DataFrame\n│ Row │ Df │ Deviance │ Chisq    │ pval     │\n├─────┼────┼──────────┼──────────┼──────────┤\n│ 1   │ 3  │ 248.402  │ NaN      │ NaN      │\n│ 2   │ 4  │ 247.994  │ 0.407234 │ 0.523377 │\nwhich provides a p-value of 05234. Because typical standards for “small” p-values are 5% or 1%, a p-value over 50% would not be considered significant at any reasonable level.We do need to be cautious in quoting this p-value, however, because the parameter value being tested, sigma_2=0, is on the boundary of set of possible values, sigma_2ge 0, for this parameter. The argument for using a chi^2_1 distribution to calculate a p-value for the change in the deviance does not apply when the parameter value being tested is on the boundary. As shown in Pinheiro and Bates (2000), the p-value from the chi^2_1 distribution will be “conservative” in the sense that it is larger than a simulation-based p-value would be. In the worst-case scenario the chi^2-based p-value will be twice as large as it should be but, even if that were true, an effective p-value of 26% would not cause us to reject H_0 in favor of H_a."
},

{
    "location": "MultipleTerms.html#Assessing-the-Reduced-Model,-pstsm1-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "Assessing the Reduced Model, pstsm1",
    "category": "section",
    "text": "A bootstrap samplejulia> @time psts1bstp = bootstrap(10000, pstsm1);\n  3.810911 seconds (6.16 M allocations: 275.817 MiB, 2.57% gc time)\nprovides empirical density plots(Image: )and(Image: )The profile zeta plots for the remaining parameters in model (Fig. [fig:fm04aprplot])(Image: Profile zeta plots for the parameters in model .)[fig:fm04aprplot]are similar to the corresponding panels in Fig. [fig:fm04prplot], as confirmed by the numerical values of the confidence intervals.                     2.5 %    97.5 %\n    .sig01       2.1579337  4.053589\n    .sig02       0.0000000  2.946591\n    .sigma       0.6520234  1.085448\n    (Intercept) 58.6636504 61.443016                     2.5 %    97.5 %\n    .sig01       2.4306377  4.122011\n    .sigma       0.6520207  1.085448\n    (Intercept) 58.8861831 61.220484The confidence intervals on log(sigma) and beta_0 are similar for the two models. The confidence interval on sigma_1 is slightly wider in model pstsm1 than in pstsm, because the variability that is attributed to sigma_2 in pstsm is incorporated into the variability due to sigma_1 in pstsm1.(Image: Profile pairs plot for the parameters in model fit to the data.)[fig:fm04aprpairs]The patterns in the profile pairs plot (Fig. [fig:fm04aprpairs]) for the reduced model are similar to those in Fig. [fig:fm1profpair], the profile pairs plot for model ."
},

{
    "location": "MultipleTerms.html#A-Model-With-Partially-Crossed-Random-Effects-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "A Model With Partially Crossed Random Effects",
    "category": "section",
    "text": "Especially in observational studies with multiple grouping factors, the configuration of the factors frequently ends up neither nested nor completely crossed. We describe such situations as having partially crossed grouping factors for the random effects.Studies in education, in which test scores for students over time are also associated with teachers and schools, usually result in partially crossed grouping factors. If students with scores in multiple years have different teachers for the different years, the student factor cannot be nested within the teacher factor. Conversely, student and teacher factors are not expected to be completely crossed. To have complete crossing of the student and teacher factors it would be necessary for each student to be observed with each teacher, which would be unusual. A longitudinal study of thousands of students with hundreds of different teachers inevitably ends up partially crossed.In this section we consider an example with thousands of students and instructors where the response is the student’s evaluation of the instructor’s effectiveness. These data, like those from most large observational studies, are quite unbalanced."
},

{
    "location": "MultipleTerms.html#The-InstEval-Data-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "The InstEval Data",
    "category": "section",
    "text": "The data are from a special evaluation of lecturers by students at the Swiss Federal Institute for Technology–Zürich (ETH–Zürich), to determine who should receive the “best-liked professor” award. These data have been slightly simplified and identifying labels have been removed, so as to preserve anonymity.The variablesjulia> show(names(dat[:InstEval]))\nSymbol[:G, :H, :studage, :lectage, :A, :I, :Y]have somewhat cryptic names. Factor s designates the student and d the instructor. The factor dept is the department for the course and service indicates whether the course was a service course taught to students from other departments.Although the response, Y, is on a scale of 1 to 5,julia> freqtable(dat[:InstEval][:Y])\'\n1×5 Named RowVector{Int64,Array{Int64,1}}\n\' ╲ Dim1 │     1      2      3      4      5\n─────────┼──────────────────────────────────\n1        │ 10186  12951  17609  16921  15754\nit is sufficiently diffuse to warrant treating it as if it were a continuous response.At this point we will fit models that have random effects for student, instructor, and department (or the combination) to these data. In the next chapter we will fit models incorporating fixed-effects for instructor and department to these data.julia> @time instm = fit(LinearMixedModel, @formula(Y ~ 1 + A + (1|G) + (1|H) + (1|I)), dat[:InstEval])\n  2.183438 seconds (342.65 k allocations: 200.968 MiB, 1.08% gc time)\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + A + (1 | G) + (1 | H) + (1 | I)\n     logLik        -2 logLik          AIC             BIC       \n -1.18860884×10⁵  2.37721769×10⁵  2.37733769×10⁵  2.37788993×10⁵\n\nVariance components:\n              Column     Variance     Std.Dev.  \n G        (Intercept)  0.1059725479 0.325534250\n H        (Intercept)  0.2652049098 0.514980495\n I        (Intercept)  0.0061678670 0.078535769\n Residual              1.3864885942 1.177492503\n Number of obs: 73421; levels of grouping factors: 2972, 1128, 14\n\n  Fixed-effects parameters:\n               Estimate Std.Error  z value P(>|z|)\n(Intercept)     3.28258 0.0284116  115.537  <1e-99\nA: 1         -0.0925886 0.0133832 -6.91828  <1e-11\n\n(Fitting this complex model to a moderately large data set takes a few seconds on a modest desktop computer. Although this is more time than required for earlier model fits, it is a remarkably short time for fitting a model of this size and complexity. In some ways it is remarkable that such a model can be fit at all on such a computer.)All three estimated standard deviations of the random effects are less than widehatsigma, with widehatsigma_3, the estimated standard deviation of the random effects for dept, less than one-tenth of widehatsigma.It is not surprising that zero is within all of the prediction intervals on the random effects for this factor (Fig. [fig:fm05ranef]). In fact, zero is close to the middle of all these prediction intervals. However, the p-value for the LRT of H_0sigma_3=0 versus H_asigma_30         Data: InstEval\nModels:\nfm05a: y ~ 1 + (1 | s) + (1 | d)\nfm05: y ~ 1 + (1 | s) + (1 | d) + (1 | dept:service)\n      Df    AIC    BIC  logLik deviance  Chisq Chi Df Pr(>Chisq)\nfm05a  4 237786 237823 -118889   237778                         \nfm05   5 237663 237709 -118827   237653 124.43      1  < 2.2e-16is highly significant. That is, we have very strong evidence that we should reject H_0 in favor of H_a.The seeming inconsistency of these conclusions is due to the large sample size (n=73421). When a model is fit to a very large sample even the most subtle of differences can be highly “statistically significant”. The researcher or data analyst must then decide if these terms have practical significance, beyond the apparent statistical significance.The large sample size also helps to assure that the parameters have good normal approximations. We could profile this model fit but doing so would take a very long time and, in this particular case, the analysts are more interested in a model that uses fixed-effects parameters for the instructors, which we will describe in the next chapter.We could pursue other mixed-effects models here, such as using the factor and not the interaction to define random effects, but we will revisit these data in the next chapter and follow up on some of these variations there.(Image: Image of the sparse Cholesky factor, $\\mathbf L$, from model )[fig:fm05Limage]"
},

{
    "location": "MultipleTerms.html#Chapter-Summary-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "Chapter Summary",
    "category": "section",
    "text": "A simple, scalar random effects term in an model formula is of the form , where is an expression whose value is the grouping factor of the set of random effects generated by this term. Typically, is simply the name of a factor, such as in the terms or in the examples in this chapter. However, the grouping factor can be the value of an expression, such as in the last example.Because simple, scalar random-effects terms can differ only in the description of the grouping factor we refer to configurations such as crossed or nested as applying to the terms or to the random effects, although it is more accurate to refer to the configuration as applying to the grouping factors.A model formula can include several such random effects terms. Because configurations such as nested or crossed or partially crossed grouping factors are a property of the data, the specification in the model formula does not depend on the configuration. We simply include multiple random effects terms in the formula specifying the model.One apparent exception to this rule occurs with implicitly nested factors, in which the levels of one factor are only meaningful within a particular level of the other factor. In the data, levels of the factor are only meaningful within a particular level of the factor. A model formula ofstrength ~ 1 + (1 | cask) + (1 | batch)would result in a fitted model that did not appropriately reflect the sources of variability in the data. Following the simple rule that the factor should be defined so that distinct experimental or observational units correspond to distinct levels of the factor will avoid such ambiguity.For convenience, a model with multiple, nested random-effects terms can be specified asstrength ~ 1 + (1 | batch/cask)which internally is re-expressed asstrength ~ 1 + (1 | batch) + (1 | batch:cask)We will avoid terms of the form , preferring instead an explicit specification with simple, scalar terms based on unambiguous grouping factors.The data, described in Sec. [sec:InstEval], illustrate some of the characteristics of the real data to which mixed-effects models are now fit. There is a large number of observations associated with several grouping factors; two of which, student and instructor, have a large number of levels and are partially crossed. Such data are common in sociological and educational studies but until now it has been very difficult to fit models that appropriately reflect such a structure. Much of the literature on mixed-effects models leaves the impression that multiple random effects terms can only be associated with nested grouping factors. The resulting emphasis on hierarchical or multilevel configurations is an artifact of the computational methods used to fit the models, not the models themselves.The parameters of the models fit to small data sets have properties similar to those for the models in the previous chapter. That is, profile-based confidence intervals on the fixed-effects parameter, beta_0, are symmetric about the estimate but overdispersed relative to those that would be calculated from a normal distribution and the logarithm of the residual standard deviation, log(sigma), has a good normal approximation. Profile-based confidence intervals for the standard deviations of random effects (sigma_1, sigma_2, etc.) are symmetric on a logarithmic scale except for those that could be zero.Another observation from the last example is that, for data sets with a very large numbers of observations, a term in a model may be “statistically significant” even when its practical significance is questionable."
},

{
    "location": "MultipleTerms.html#Exercises-1",
    "page": "Models With Multiple Random-effects Terms",
    "title": "Exercises",
    "category": "section",
    "text": "These exercises use data sets from the package for . Recall that to access a particular data set, you must either attach the packageor load just the one data set   We begin with exercises using the ergostool data from the nlme package. The analysis and graphics in these exercises is performed in Chap. [chap:Covariates]. The purpose of these exercises is to see if you can use the material from this chapter to anticipate the results quoted in the next chapter.Check the documentation, the structure () and a summary of the data from the package. (If you are familiar with the Star Trek television series and movies, you may want to speculate about what, exactly, the “Borg scale” is.) Are these factors are nested, partially crossed or completely crossed. Is this a replicated or an unreplicated design?\nCreate a plot, similar to Fig. [fig:Penicillindot], showing the effort by subject with lines connecting points corresponding to the same stool types. Order the levels of the factor by increasing average .\nThe experimenters are interested in comparing these specific stool types. In the next chapter we will fit a model with fixed-effects for the factor and random effects for , allowing us to perform comparisons of these specific types. At this point fit a model with random effects for both and . What are the relative sizes of the estimates of the standard deviations, widehatsigma_1 (for ), widehatsigma_2 (for ) and widehatsigma (for the residual variability)?\nRefit the model using maximum likelihood. Check the parameter estimates and, in the case of the fixed-effects parameter, beta_0, its standard error. In what ways have the parameter estimates changed? Which parameter estimates have not changed?\nProfile the fitted model and construct 95% profile-based confidence intervals on the parameters. (Note that you will get the same profile object whether you start with the REML fit or the ML fit. There is a slight advantage in starting with the ML fit.) Is the confidence interval on sigma_1 close to being symmetric about its estimate? Is the confidence interval on sigma_2 close to being symmetric about its estimate? Is the corresponding interval on log(sigma_1) close to being symmetric about its estimate?\nCreate the profile zeta plot for this model. For which parameters are there good normal approximations?\nCreate a profile pairs plot for this model. Comment on the shapes of the profile traces in the transformed (zeta) scale and the shapes of the contours in the original scales of the parameters.\nCreate a plot of the 95% prediction intervals on the random effects for using (Substitute the name of your fitted model for in the call to .) Is there a clear winner among the stool types? (Assume that lower numbers on the Borg scale correspond to less effort).\nCreate a plot of the 95% prediction intervals on the random effects for .\nCheck the documentation, the structure () and a summary of the data from the package. Use a cross-tabulation to discover whether and are nested, partially crossed or completely crossed.\nFit a model of the in the data with random effects for , and .\nPlot the prediction intervals for each of the three sets of random effects.\nProfile the parameters in this model. Create a profile zeta plot. Does including the random effect for appear to be warranted. Does your conclusion from the profile zeta plot agree with your conclusion from examining the prediction intervals for the random effects for ?\nRefit the model without random effects for . Perform a likelihood ratio test of H_0sigma_3=0 versus H_asigma_30. Would you reject H_0 in favor of H_a or fail to reject H_0? Would you reach the same conclusion if you adjusted the p-value for the test by halving it, to take into account the fact that 0 is on the boundary of the parameter region?\nProfile the reduced model (i.e. the one without random effects for ) and create profile zeta and profile pairs plots. Can you explain the apparent interaction between log(sigma) and sigma_1? (This is a difficult question.)"
},

{
    "location": "SingularCovariance.html#",
    "page": "Singular covariance estimates in random regression models",
    "title": "Singular covariance estimates in random regression models",
    "category": "page",
    "text": ""
},

{
    "location": "SingularCovariance.html#Singular-covariance-estimates-in-random-regression-models-1",
    "page": "Singular covariance estimates in random regression models",
    "title": "Singular covariance estimates in random regression models",
    "category": "section",
    "text": "This notebook explores the occurrence of singularity in the estimated covariance matrix of random regression models. These are mixed-effects models with vector-valued random effects.First, fit a model to the sleepstudy data from lme4."
},

{
    "location": "SingularCovariance.html#Fitting-a-linear-mixed-model-to-the-sleepstudy-data-1",
    "page": "Singular covariance estimates in random regression models",
    "title": "Fitting a linear mixed-model to the sleepstudy data",
    "category": "section",
    "text": "Load the required packagesjulia> using DataFrames, FreqTables, Gadfly, MixedModels, RData\n\njulia> using Gadfly.Geom: density, histogram, point\n\njulia> using Gadfly.Guide: xlabel, ylabel\n\njulia> const dat = convert(Dict{Symbol,DataFrame}, load(Pkg.dir(\"MixedModels\", \"test\", \"dat.rda\")));\nThe model specification for the Julia lmm function is similar to that for the R function lmer. However, the lmm function only creates the model structure. An explicit call to fit! is required to fit the model. As is customary (though not required) in Julia, a function whose name ends in ! is a _mutating function_ that modifies one or more of its arguments.An optional second argument of true in the call to fit! produces verbose output from the optimization.julia> sleepm = fit!(LinearMixedModel(@formula(Y ~ 1 + U + (1+U|G)), dat[:sleepstudy]), true)\nf_1: 1784.6423 [1.0, 0.0, 1.0]\nf_2: 1790.12564 [1.75, 0.0, 1.0]\nf_3: 1798.99962 [1.0, 1.0, 1.0]\nf_4: 1803.8532 [1.0, 0.0, 1.75]\nf_5: 1800.61398 [0.25, 0.0, 1.0]\nf_6: 1798.60463 [1.0, -1.0, 1.0]\nf_7: 1752.26074 [1.0, 0.0, 0.25]\nf_8: 1797.58769 [1.18326, -0.00866189, 0.0]\nf_9: 1754.95411 [1.075, 0.0, 0.325]\nf_10: 1753.69568 [0.816632, 0.0111673, 0.288238]\nf_11: 1754.817 [1.0, -0.0707107, 0.196967]\nf_12: 1753.10673 [0.943683, 0.0638354, 0.262696]\nf_13: 1752.93938 [0.980142, -0.0266568, 0.274743]\nf_14: 1752.25688 [0.984343, -0.0132347, 0.247191]\nf_15: 1752.05745 [0.97314, 0.00253785, 0.23791]\nf_16: 1752.02239 [0.954526, 0.00386421, 0.235892]\nf_17: 1752.02273 [0.935929, 0.0013318, 0.234445]\nf_18: 1751.97169 [0.954965, 0.00790664, 0.229046]\nf_19: 1751.9526 [0.953313, 0.0166274, 0.225768]\nf_20: 1751.94852 [0.946929, 0.0130761, 0.222871]\nf_21: 1751.98718 [0.933418, 0.00613767, 0.218951]\nf_22: 1751.98321 [0.951544, 0.005789, 0.220618]\nf_23: 1751.95197 [0.952809, 0.0190332, 0.224178]\nf_24: 1751.94628 [0.946322, 0.0153739, 0.225088]\nf_25: 1751.9467 [0.947124, 0.0148894, 0.224892]\nf_26: 1751.94757 [0.946497, 0.0154643, 0.225814]\nf_27: 1751.94531 [0.946086, 0.0157934, 0.224449]\nf_28: 1751.94418 [0.945304, 0.0166902, 0.223361]\nf_29: 1751.94353 [0.944072, 0.0172106, 0.222716]\nf_30: 1751.94244 [0.941271, 0.0163099, 0.222523]\nf_31: 1751.94217 [0.939, 0.015899, 0.222132]\nf_32: 1751.94237 [0.938979, 0.016548, 0.221562]\nf_33: 1751.94228 [0.938863, 0.0152466, 0.222683]\nf_34: 1751.9422 [0.938269, 0.015733, 0.222024]\nf_35: 1751.94131 [0.938839, 0.0166373, 0.222611]\nf_36: 1751.94093 [0.938397, 0.0173965, 0.222817]\nf_37: 1751.94057 [0.937006, 0.0180445, 0.222534]\nf_38: 1751.94018 [0.934109, 0.0187354, 0.22195]\nf_39: 1751.94008 [0.932642, 0.0189242, 0.221726]\nf_40: 1751.94027 [0.931357, 0.0190082, 0.221309]\nf_41: 1751.9415 [0.932821, 0.0206454, 0.221367]\nf_42: 1751.93949 [0.931867, 0.0179574, 0.222564]\nf_43: 1751.93939 [0.929167, 0.0177824, 0.222534]\nf_44: 1751.9394 [0.929659, 0.0177721, 0.222508]\nf_45: 1751.93943 [0.929193, 0.0187806, 0.22257]\nf_46: 1751.93935 [0.928986, 0.0182366, 0.222484]\nf_47: 1751.93949 [0.928697, 0.0182937, 0.223175]\nf_48: 1751.93936 [0.928243, 0.0182695, 0.222584]\nf_49: 1751.93934 [0.929113, 0.0181791, 0.222624]\nf_50: 1751.93934 [0.929191, 0.0181658, 0.222643]\nf_51: 1751.93935 [0.929254, 0.0182093, 0.222621]\nf_52: 1751.93935 [0.929189, 0.0181298, 0.222573]\nf_53: 1751.93934 [0.929254, 0.0181676, 0.22265]\nf_54: 1751.93934 [0.929215, 0.0181717, 0.222647]\nf_55: 1751.93934 [0.929208, 0.0181715, 0.222646]\nf_56: 1751.93934 [0.929209, 0.018173, 0.222652]\nf_57: 1751.93934 [0.929221, 0.0181684, 0.222645]\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + U + ((1 + U) | G)\n   logLik   -2 logLik     AIC        BIC    \n -875.96967 1751.93934 1763.93934 1783.09709\n\nVariance components:\n              Column    Variance  Std.Dev.   Corr.\n G        (Intercept)  565.51067 23.780468\n          U             32.68212  5.716828  0.08\n Residual              654.94145 25.591824\n Number of obs: 180; levels of grouping factors: 18\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   251.405   6.63226 37.9064  <1e-99\nU             10.4673   1.50224 6.96781  <1e-11\n\nThe variables in the optimization are the elements of a lower triangular matrix, Lambda, which is the relative covariance factor of the random effects. The corresponding parameter vector is called theta.julia> Λ = getΛ(sleepm)[1]\n2×2 LowerTriangular{Float64,Array{Float64,2}}:\n 0.929221    ⋅      \n 0.0181684  0.222645\nThe matrix Lambda is the left (or lower) Cholesky factor of the covariance matrix of the unconditional distribution of the vector-valued random effects, relative to the variance, sigma^2, of the per-observation noise. That is \\begin{equation}     \\Sigma = \\sigma^2\\Lambda\\Lambda\' \\end{equation}In terms of the estimates,julia> s² = varest(sleepm)    # estimate of the residual variance\n654.941450830681\njulia> s² * Λ * Λ\'   # unconditional covariance matrix of the random effects\n2×2 Array{Float64,2}:\n 565.511  11.057 \n  11.057  32.6821\nThe estimated correlation of the random effects can, of course, be evaluated from the covariance matrix. Writing out the expressions for the elements of the covariance matrix in terms of the elements of Λ shows that many terms cancel in the evaluation of the correlation, resulting in the simpler formula.julia> Λ[2, 1] / sqrt(Λ[2, 1]^2 + Λ[2, 2]^2)\n0.08133214602351191\nFor a 2times 2 covariance matrix it is not terribly important to perform this calculation in an efficient and numerically stable way. However, it is a good idea to pay attention to stability and efficiency in a calculation that can be repeated tens of thousands of times in a simulation or a parametric bootstrap. The norm function evaluates the (geometric) length of a vector in a way that controls round-off better than the naive calculation. The view function provides access to a subarray, such as the second row of Lambda, without generating a copy. Thus the estimated correlation can be writtenjulia> Λ[2, 1] / norm(view(Λ, 2, :))\n0.08133214602351191\n"
},

{
    "location": "SingularCovariance.html#Optimization-with-respect-to-θ-1",
    "page": "Singular covariance estimates in random regression models",
    "title": "Optimization with respect to θ",
    "category": "section",
    "text": "As described in section 3 of the 2015 _Journal of Statistical Software_ paper by Bates, Maechler, Bolker and Walker, using the relative covariance factor, Lambda, in the formulation of mixed-effects models in the lme4 and MixedModels packages and using the vector theta as the optimization variable was a conscious choice. Indeed, a great deal of effort went into creating this form so that the profiled log-likelihood can be easily evaluated and so that the constraints on the parameters, theta, are simple \"box\" constraints. In fact, the constraints are simple lower bounds.julia> show(lowerbd(sleepm))\n[0.0, -Inf, 0.0]In contrast, trying to optimize the log-likelihood with respect to standard deviations and correlations of the random effects would be quite difficult because the constraints on the correlations when the covariance matrix is larger than 2times 2 are quite complicated. Also, the correlation itself can be unstable. Consider what happens to the expression for the correlation if both Lambda_21 and Lambda_22 are small in magnitude. Small perturbations in Lambda_21 that result in sign changes can move the correlation from near -1 to near +1 or vice-versa.Some details on the optimization process are available in an OptSummary object stored as the optsum field of the model.julia> sleepm.optsum\nInitial parameter vector: [1.0, 0.0, 1.0]\nInitial objective value:  1784.6422961924507\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [0.0, -Inf, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10, 1.0e-10]\ninitial_step:             [0.75, 1.0, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     57\nFinal parameter vector:   [0.929221, 0.0181684, 0.222645]\nFinal objective value:    1751.9393444646757\nReturn code:              FTOL_REACHED\n\n"
},

{
    "location": "SingularCovariance.html#Convergence-on-the-boundary-1",
    "page": "Singular covariance estimates in random regression models",
    "title": "Convergence on the boundary",
    "category": "section",
    "text": "Determining if an estimated covariance matrix is singular is easy when using the theta  parameters because singularity corresponds to points on the boundary of the allowable parameter space. In other words, if the optimization converges to a vector in which either or both of theta_1 or theta_3 are zero, the covariance matrix is singular. Otherwise it is non-singular.The theta_1 parameter is the estimated relative standard deviation of the random intercepts. If this is zero then the correlation is undefined and reported as NaN. If theta_3 is zero and theta_2 is non-zero then the estimated correlation is pm 1 with the sign determined by the sign of theta_2. If both theta_2 and theta_3 are zero the correlation is NaN because the standard deviation of the random slopes will be zero.Singular covariance matrices larger than 2times 2 do not necessarily result in particular values, like ±1, for the correlations.Users of lmer or lmm are sometimes taken aback by convergence on the boundary if this produces correlations of NaN or pm 1. Some feel that this is a sign of model failure. Others consider such estimates as a sign that Bayesian methods with priors that pull singular covariance matrices away from the boundary should be used.This type of value judgement seems peculiar. An important property of maximum likelihood estimates is that these estimates are well-defined once the probability model for the data has been specified. It may be difficult to determine numerical values of the estimates but the definition itself is straightforward. If there is a direct method of evaluating the log-likelihood at a particular value of the parameters, then, by definition, the mle\'s are the parameter values that maximize this log-likelihood. Bates et al. (2015) provide such a method of evaluating the log-likelihood for a linear mixed-effects model. Indeed they go further and describe how the fixed-effects parameters and one of the variance components can be profiled out of the log-likelihood evaluation, thereby reducing the dimension of the nonlinear, constrained optimization problem to be solved.If the mle\'s correspond to a singular covariance matrix, this is a property of the model and the data. It is not a mistake in some way. It is just the way things are. It reflects the fact that often the distribution of the estimator of a covariance matrix is diffuse. It is difficult to estimate variances and covariances precisely. A search for papers or books on \"covariance estimation\" will produce many results, often describing ways of regularizing the estimating process because the data themselves do not provide precise estimates.For the example at hand a parametric bootstrap is one way of evaluating the precision of the estimates."
},

{
    "location": "SingularCovariance.html#The-bootstrap-function-1",
    "page": "Singular covariance estimates in random regression models",
    "title": "The bootstrap function",
    "category": "section",
    "text": "The MixedModels package provides a bootstrap method to create a parametric bootstrap sample from a fitted model.For reproducibility, set the random number seed to some arbitrary value.julia> srand(1234321);\nArguments to the bootstrap function are the number of samples to generate and the model from which to generate them. By default the converged parameter estimates are those used to generate the samples. Addition, named arguments can be used to override these parameter values, allowing bootstrap to be used for simulation.bootstrap returns a DataFrame with columns:obj: the objective (-2 loglikelihood)\nσ: the standard deviation of the per-observation noise\nβ₁ to βₚ: the fixed-effects coefficients\nθ₁ to θₖ: the covariance parameter elements\nσ₁ to σₛ: the estimates standard deviations of random effects.\nρ₁ to ρₜ: the estimated correlations of random effectsThe ρᵢ and σᵢ values are derived from the θᵢ and σ values.julia> sleepmbstrp = bootstrap(10000, sleepm);\n\njulia> show(names(sleepmbstrp))\nSymbol[:obj, :σ, :β₁, :β₂, :θ₁, :θ₂, :θ₃, :σ₁, :σ₂, :ρ₁]Recall that the constrained parameters are theta_1 and theta_3 which both must be non-negative. If either or both of these are zero (in practice the property to check is if they are \"very small\", which here is arbitrarily defined as less than 0.00001) then the covariance matrix is singular.julia> issmall(x) = x < 0.00001   # defines a one-liner function in Julia\nissmall (generic function with 1 method)\njulia> freqtable(issmall.(sleepmbstrp[:θ₁]), issmall.(sleepmbstrp[:θ₃]))\n2×2 Named Array{Int64,2}\nDim1 ╲ Dim2 │ false   true\n────────────┼─────────────\nfalse       │  9684    309\ntrue        │     7      0\nHere the covariance matrix estimate is non-singular in 9,686 of the 10,000 samples, has an zero estimated intercept variance in 6 samples and is otherwise singular (i.e. correlation estimate of pm 1) in 308 samples.Empirical densities of the θ components are:(Image: )(Image: )A density plot is typically a good way to visualize such a large sample. However, when there is a spike such as the spike at zero here, a histogram provides a more informative plot.(Image: )(Image: )"
},

{
    "location": "SingularCovariance.html#Reciprocal-condition-number-1",
    "page": "Singular covariance estimates in random regression models",
    "title": "Reciprocal condition number",
    "category": "section",
    "text": "The definitve way to assess singularity of the estimated covariance matrix is by its _condition number_ or, alternatively, its _reciprocal condition number_. In general the condition number, kappa, of a matrix is the ratio of the largest singular value to the smallest. For singular matrices it is infty, which is why it is often more convenient to evaluate and plot kappa^-1. Because kappa is a ratio of singular values it is unaffected by nonzero scale factors. Thus \\begin{equation} \\kappa^{-1}(s^2\\Lambda\\Lambda\') = \\kappa^{-1}(\\Lambda\\Lambda\') = [\\kappa^{-1}(\\Lambda)]^2 \\end{equation}function recipcond(bstrp::DataFrame)\n    T = eltype(bstrp[:θ₁])\n    val = sizehint!(T[], size(bstrp, 1))\n    d = Matrix{T}(2, 2)\n    for (t1, t2, t3) in zip(bstrp[:θ₁], bstrp[:θ₂], bstrp[:θ₃])\n        d[1, 1] = t1\n        d[1, 2] = t2\n        d[2, 2] = t3\n        v = svdvals!(d)\n        push!(val, v[2] / v[1])\n    end\n    val\nend\nrc = recipcond(sleepmbstrp)(Image: )kappa^-1is small if either or both of theta_1 or theta_3 is small.julia> sum(issmall, rc)\n316\nThe density of the estimated correlation(Image: )julia> sum(isfinite, sleepmbstrp[:ρ₁])  # recall that ρ = NaN in 7 cases\n9993\njulia> sum(x -> x == -1, sleepmbstrp[:ρ₁])  # number of cases of rho == -1\n1\njulia> sum(x -> x == +1, sleepmbstrp[:ρ₁])  # number of cases of rho == +1\n308\nIn this case the bootstrap simulations that resulted in rho = -1 were not close to being indeterminant with respect to sign. That is, the values of theta_2 were definitely negative.julia> sleepmbstrp[:θ₂][find(x -> x == -1, sleepmbstrp[:ρ₁])]\n1-element Array{Float64,1}:\n -0.254495\n"
},

{
    "location": "SingularCovariance.html#The-Oxboys-data-1",
    "page": "Singular covariance estimates in random regression models",
    "title": "The Oxboys data",
    "category": "section",
    "text": "In the nlme package for R there are several data sets to which random regression models are fit. The RCall package for Julia provides the ability to run an embedded R process and communicate with it. The simplest form of writing R code within Julia is to use character strings prepended with R. In Julia strings are delimited by \" or by \"\"\". With \"\"\" multi-line strings are allowed.julia> using RCall\n\njulia> R\"\"\"\nlibrary(nlme)\nplot(Oxboys)\n\"\"\"\nRCall.RObject{RCall.VecSxp}\n\njulia> oxboys = rcopy(R\"Oxboys\");\n\njulia> show(names(oxboys))\nSymbol[:Subject, :age, :height, :Occasion]julia> oxboysm = fit(LinearMixedModel, @formula(height ~ 1 + age + (1+age | Subject)), oxboys)\nLinear mixed model fit by maximum likelihood\n Formula: height ~ 1 + age + ((1 + age) | Subject)\n   logLik   -2 logLik     AIC        BIC    \n -362.98384  725.96769  737.96769  758.69962\n\nVariance components:\n              Column    Variance   Std.Dev.    Corr.\n Subject  (Intercept)  62.7890195 7.92395226\n          age           2.7117909 1.64675163  0.64\n Residual               0.4354541 0.65988947\n Number of obs: 234; levels of grouping factors: 26\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   149.372   1.55461 96.0828  <1e-99\nage           6.52547  0.329774 19.7877  <1e-86\n\njulia> show(getθ(oxboysm))\n[12.008, 1.60168, 1.91367]As seen in the plot and by the estimate widehattheta_1 = 120, the estimated standard deviation of the random intercepts is much greater than the residual standard deviation. It is unlikely that bootstrap samples will include singular covariance estimates.julia> srand(4321234);\n\njulia> oxboysmbtstrp = bootstrap(10000, oxboysm);\nIn this bootstrap sample, there are no singular estimated covariance matrices for the random effects.julia> freqtable(issmall.(oxboysmbtstrp[:θ₁]), issmall.(oxboysmbtstrp[:θ₃]))\n1×1 Named Array{Int64,2}\nDim1 ╲ Dim2 │ false\n────────────┼──────\nfalse       │ 10000\nThe empirical density of the correlation estimates shows that even in this case the correlation is not precisely estimated.(Image: )julia> extrema(oxboysmbtstrp[:ρ₁])\n(-0.04869178624968976, 0.9352905798612754)\nThe reciprocal condition numberjulia> rc = recipcond(oxboysmbtstrp);\n\njulia> extrema(rc)\n(0.06152149310502919, 0.3686950157128226)\ndoes not get very close to zero.(Image: )"
},

{
    "location": "SingularCovariance.html#The-Orthodont-data-1",
    "page": "Singular covariance estimates in random regression models",
    "title": "The Orthodont data",
    "category": "section",
    "text": "julia> R\"plot(Orthodont)\"\nRCall.RObject{RCall.VecSxp}\n\nThe subject labels distinguish between the male and the female subjects.  Consider first the female subjects only.julia> orthfemale = rcopy(R\"subset(Orthodont, Sex == \'Female\', -Sex)\");\n\njulia> orthfm = fit!(lmm(@formula(distance ~ 1 + age + (1 + age | Subject)), orthfemale))\nLinear mixed model fit by maximum likelihood\n Formula: distance ~ 1 + age + ((1 + age) | Subject)\n   logLik   -2 logLik     AIC        BIC    \n  -67.25463  134.50927  146.50927  157.21441\n\nVariance components:\n              Column     Variance   Std.Dev.    Corr.\n Subject  (Intercept)  2.971189195 1.72371378\n          age          0.021509463 0.14666105 -0.30\n Residual              0.446597842 0.66827976\n Number of obs: 44; levels of grouping factors: 27\n\n  Fixed-effects parameters:\n             Estimate Std.Error z value P(>|z|)\n(Intercept)   17.3727  0.725181 23.9564  <1e-99\nage          0.479545   0.06313 7.59616  <1e-13\n\njulia> srand(1234123)\nMersenneTwister(UInt32[0x0012d4cb], Base.dSFMT.DSFMT_state(Int32[1849428804, 1072710534, 1722234079, 1073299110, 2058053067, 1072801015, 18044541, 1072957251, 668716466, 1073001711  …  -1153221639, 1073553062, 1653158638, 1073411494, 780501209, -2117144994, -394908522, -1446490633, 382, 0]), [1.39169, 1.01459, 1.69258, 1.91239, 1.6891, 1.69523, 1.38824, 1.00049, 1.93803, 1.94006  …  1.97007, 1.85482, 1.55931, 1.20623, 1.79846, 1.70858, 1.79727, 1.41108, 1.47938, 1.55753], 382)\n\njulia> orthfmbtstrp = bootstrap(10000, orthfm);\njulia> freqtable(issmall.(orthfmbtstrp[:θ₁]), issmall.(orthfmbtstrp[:θ₃]))\n2×2 Named Array{Int64,2}\nDim1 ╲ Dim2 │ false   true\n────────────┼─────────────\nfalse       │  6773   3195\ntrue        │    32      0\nFor this model almost 1/3 of the bootstrap samples converge to singular covariance estimates for the vector-valued random effects. A histogram of the estimated correlations of the random effects is dominated by the boundary values.(Image: )Even though the estimated correlation in the model is -0.30, more of the boundary values are at +1 than at -1. This may be an artifact of the optimization routine used. In some cases there may be multiple optima on the boundary. It is difficult to determine the global optimum in these cases.A histogram of the reciprocal condition number is also dominated by the boundary values."
},

{
    "location": "SingularCovariance.html#Early-childhood-cognitive-study-1",
    "page": "Singular covariance estimates in random regression models",
    "title": "Early childhood cognitive study",
    "category": "section",
    "text": "This example from Singer and Willett (2003), Applied Longitudinal Data Analysis was the motivation for reformulating the estimation methods to allow for singular covariance matrices. Cognitive scores (cog) were recorded at age 1, 1.5 and 2 years on 103 infants, of whom 58 were in the treatment group and 45 in the control group.  The treatment began at age 6 months (0.5 years).  The data are available as the Early data set in the mlmRev package for R.  In the model, time on study (tos) is used instead of age because the zero point on the time scale should be when the treatment begins.julia> R\"\"\"\nsuppressMessages(library(mlmRev))\nlibrary(lattice)\nEarly$tos <- Early$age - 0.5\nEarly$trttos <- Early$tos * (Early$trt == \"Y\")\nxyplot(cog ~ tos | reorder(id, cog, min), Early, \n    type = c(\"p\",\"l\",\"g\"), aspect=\"xy\")\n\"\"\"\nRCall.RObject{RCall.VecSxp}\n\nNotice that most of these plots within subjects have a negative slope and that the scores at 1 year of age (tos = 0.5) are frequently greater than would be expected on an age-adjusted scale.julia> R\"print(xtabs(cog ~ age + trt, Early) / xtabs(~ age + trt, Early))\";\n     trt\nage           N         Y\n  1   108.53333 112.93103\n  1.5  95.88889 110.29310\n  2    87.40000  97.06897\nWhen the time origin is the beginning of the treatment there is not generally a \"main effect\" for the treatment but only an interaction of trt and tos.julia> early = rcopy(R\"subset(Early, select = c(cog, tos, id, trt, trttos))\");\n\njulia> earlym = fit(LinearMixedModel, @formula(cog ~ 1 + tos + trttos + (1 + tos | id)), early)\nLinear mixed model fit by maximum likelihood\n Formula: cog ~ 1 + tos + trttos + ((1 + tos) | id)\n   logLik   -2 logLik     AIC        BIC    \n -1185.6369  2371.2738  2385.2738  2411.4072\n\nVariance components:\n              Column    Variance  Std.Dev.    Corr.\n id       (Intercept)  165.47659 12.8637705\n          tos           10.74482  3.2779291 -1.00\n Residual               74.94683  8.6571838\n Number of obs: 309; levels of grouping factors: 103\n\n  Fixed-effects parameters:\n             Estimate Std.Error  z value P(>|z|)\n(Intercept)   120.783    1.8178  66.4447  <1e-99\ntos           -22.474    1.4878 -15.1055  <1e-50\ntrttos        7.65205   1.43609  5.32841   <1e-7\n\nThe model converges to a singular covariance matrix for the random effects.julia> getθ(earlym)\n3-element Array{Float64,1}:\n  1.48591 \n -0.378637\n  0.0     \nThe conditional (on the observed responses) means of the random effects fall along a line.(Image: )"
},

{
    "location": "SubjectItem.html#",
    "page": "-",
    "title": "-",
    "category": "page",
    "text": "julia> using DataFrames, MixedModels, RData\n\njulia> const dat = convert(Dict{Symbol,DataFrame}, load(Pkg.dir(\"MixedModels\", \"test\", \"dat.rda\")));\njulia> mm1 = fit(LinearMixedModel, @formula(Y ~ 1+S+T+U+V+W+X+Z+(1+S+T+U+V+W+X+Z|G)+(1+S+T+U+V+W+X+Z|H)), dat[:kb07])\nLinear mixed model fit by maximum likelihood\n Formula: Y ~ 1 + S + T + U + V + W + X + Z + ((1 + S + T + U + V + W + X + Z) | G) + ((1 + S + T + U + V + W + X + Z) | H)\n     logLik        -2 logLik          AIC             BIC       \n -1.42931611×10⁴  2.85863221×10⁴  2.87483221×10⁴  2.91930097×10⁴\n\nVariance components:\n              Column     Variance   Std.Dev.    Corr.\n G        (Intercept)   90797.8433 301.326805\n          S              5186.2898  72.015900 -0.43\n          T              5545.5545  74.468480 -0.47  0.08\n          U              7590.2433  87.122003  0.21 -0.20  0.41\n          V              8839.5027  94.018630  0.20 -0.76 -0.54 -0.20\n          W              1822.8053  42.694324  0.47 -0.53 -0.11 -0.44  0.29\n          X              7417.7267  86.126226 -0.10  0.13 -0.05 -0.86 -0.06  0.70\n          Z              3800.9670  61.651983 -0.48  0.41 -0.39 -0.09  0.18 -0.78 -0.39\n H        (Intercept)  129801.4428 360.279673\n          S              1855.0633  43.070446 -0.34\n          T             62410.5894 249.821115 -0.68 -0.45\n          U              2957.5947  54.383773  0.20 -0.03 -0.18\n          V              1038.0660  32.219031  0.57 -0.75  0.02  0.01\n          W              1608.1394  40.101613  0.28 -0.05 -0.27  0.44 -0.20\n          X              4698.6232  68.546504  0.08 -0.25  0.21 -0.13 -0.26  0.01\n          Z              4836.0681  69.541844  0.04 -0.46  0.32 -0.68  0.65 -0.69 -0.10\n Residual              399601.5053 632.140416\n Number of obs: 1790; levels of grouping factors: 56, 32\n\n  Fixed-effects parameters:\n             Estimate Std.Error  z value P(>|z|)\n(Intercept)   2180.63   76.8177   28.387  <1e-99\nS            -66.9899   19.3354 -3.46463  0.0005\nT            -333.881   47.6721  -7.0037  <1e-11\nU             78.9869   21.2424  3.71837  0.0002\nV             22.1517   20.3362  1.08927  0.2760\nW            -18.9244   17.4951  -1.0817  0.2794\nX             5.26191    22.418 0.234719  0.8144\nZ            -23.9509   21.0303 -1.13888  0.2548\n\njulia> mm1.optsum\nInitial parameter vector: [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0  …  1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0]\nInitial objective value:  30014.369768606295\n\nOptimizer (from NLopt):   LN_BOBYQA\nLower bounds:             [0.0, -Inf, -Inf, -Inf, -Inf, -Inf, -Inf, -Inf, 0.0, -Inf  …  0.0, -Inf, -Inf, -Inf, 0.0, -Inf, -Inf, 0.0, -Inf, 0.0]\nftol_rel:                 1.0e-12\nftol_abs:                 1.0e-8\nxtol_rel:                 0.0\nxtol_abs:                 [1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10  …  1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10, 1.0e-10]\ninitial_step:             [0.75, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.75, 1.0  …  0.75, 1.0, 1.0, 1.0, 0.75, 1.0, 1.0, 0.75, 1.0, 0.75]\nmaxfeval:                 -1\n\nFunction evaluations:     2018\nFinal parameter vector:   [0.476677, -0.0494935, -0.0558944, 0.0295759, 0.0292159, 0.0319406, -0.0139343, -0.0463468, 0.102611, -0.0170349  …  0.0265041, -0.0488983, -0.0548502, 0.0604581, 0.00382623, -0.0032048, -0.00157491, 0.0, 8.21222e-5, 0.0]\nFinal objective value:    28586.322101083984\nReturn code:              FTOL_REACHED\n\njulia> mm1.trms[1].Λ\n8×8 LowerTriangular{Float64,Array{Float64,2}}:\n  0.476677     ⋅           ⋅          …    ⋅             ⋅           ⋅ \n -0.0494935   0.102611     ⋅               ⋅             ⋅           ⋅ \n -0.0558944  -0.0170349   0.10229          ⋅             ⋅           ⋅ \n  0.0295759  -0.0165326   0.0779579        ⋅             ⋅           ⋅ \n  0.0292159  -0.111063   -0.0943527        ⋅             ⋅           ⋅ \n  0.0319406  -0.0244269   0.00509686  …   0.0            ⋅           ⋅ \n -0.0139343   0.0125996  -0.01326        -0.000291769   0.0          ⋅ \n -0.0463468   0.0217752  -0.0650938       0.000361817  -6.80369e-5  0.0\njulia> mm1.trms[2].Λ\n8×8 LowerTriangular{Float64,Array{Float64,2}}:\n  0.569936      ⋅            ⋅          …    ⋅           ⋅           ⋅ \n -0.0233133    0.0640217     ⋅               ⋅           ⋅           ⋅ \n -0.26706     -0.288259     0.0420499        ⋅           ⋅           ⋅ \n  0.0173555    0.00368853  -0.0116354        ⋅           ⋅           ⋅ \n  0.029017    -0.0299586   -0.0111736        ⋅           ⋅           ⋅ \n  0.0179099    0.0029801   -0.0289884   …   0.00382623   ⋅           ⋅ \n  0.00850529  -0.0258243    0.0893922      -0.0032048   0.0          ⋅ \n  0.00489805  -0.0520096    0.00572593     -0.00157491  8.21222e-5  0.0\n"
},

]}
